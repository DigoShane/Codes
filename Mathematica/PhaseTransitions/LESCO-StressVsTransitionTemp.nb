(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    562056,      11138]
NotebookOptionsPosition[    553181,      11005]
NotebookOutlinePosition[    553608,      11022]
CellTagsIndexPosition[    553565,      11019]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.881234899415779*^9, 3.8812349132072897`*^9}, {
  3.881234987975894*^9, 3.8812349899610558`*^9}},
 CellLabel->
  "In[2013]:=",ExpressionUUID->"a4f60dd8-119b-46e9-a5f4-f50fc33b3e0c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "This", " ", "is", " ", "the", " ", "code", " ", "to", " ", "perform", " ", 
   "calculations", " ", "for", " ", 
   RowBox[{"LESCO", ".", " ", "The"}], " ", "calculations", " ", "can", " ", 
   "be", " ", "found", " ", "in", " ", 
   "\"\<superconductivity.overleaf/The Non-Linear \
Approach.tex/sec.LESCO/subsection.Determining the Deformation Gradient \
Geometrically\>\""}], "*)"}]], "Input",
 CellChangeTimes->{{3.881238239087781*^9, 3.881238385627239*^9}},
 CellLabel->
  "In[2014]:=",ExpressionUUID->"d48b90cb-43b0-452f-b5dc-dea3bcc20922"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Setting", " ", "up", " ", "the", " ", "Canonical", " ", "basis", " ", 
    "vectors"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"e1", ":=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"e2", ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"e3", ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.881244867897538*^9, 3.881244894721043*^9}},
 CellLabel->
  "In[2015]:=",ExpressionUUID->"f600317d-fd73-4cb6-a515-0e7c7d39d186"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Determining", " ", "the", " ", "Wells"}], "*)"}],
   FontSize->18], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FII", ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["a", 
          SubscriptBox["a", "0"]], "*", 
         RowBox[{"TrigExpand", "[", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["Pi", "4"], "-", 
            FractionBox["\[Beta]", "2"]}], "]"}], "]"}]}], ",", 
        RowBox[{
         FractionBox["a", 
          SubscriptBox["a", "0"]], "*", 
         RowBox[{"TrigExpand", "[", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["Pi", "4"], "+", 
            FractionBox["\[Beta]", "2"]}], "]"}], "]"}]}], ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["a", 
          SubscriptBox["a", "0"]], "*", 
         RowBox[{"TrigExpand", "[", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["Pi", "4"], "-", 
            FractionBox["\[Beta]", "2"]}], "]"}], "]"}]}], ",", 
        RowBox[{
         FractionBox["a", 
          SubscriptBox["a", "0"]], "*", 
         RowBox[{"TrigExpand", "[", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["Pi", "4"], "+", 
            FractionBox["\[Beta]", "2"]}], "]"}], "]"}]}], ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        FractionBox["c", 
         SubscriptBox["c", "0"]]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\!\(\*SubscriptBox[\(F\), \(II\)]\)=\>\"", ",", 
     RowBox[{
      RowBox[{"FII", "//", "Simplify"}], "//", "MatrixForm"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FI", ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["a", 
          SubscriptBox["a", "0"]], "*", 
         RowBox[{"TrigExpand", "[", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["Pi", "4"], "-", 
            FractionBox["\[Beta]", "2"]}], "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["a", 
           SubscriptBox["a", "0"]]}], "*", 
         RowBox[{"TrigExpand", "[", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["Pi", "4"], "+", 
            FractionBox["\[Beta]", "2"]}], "]"}], "]"}]}], ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["a", 
           SubscriptBox["a", "0"]]}], "*", 
         RowBox[{"TrigExpand", "[", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["Pi", "4"], "-", 
            FractionBox["\[Beta]", "2"]}], "]"}], "]"}]}], ",", 
        RowBox[{
         FractionBox["a", 
          SubscriptBox["a", "0"]], "*", 
         RowBox[{"TrigExpand", "[", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["Pi", "4"], "+", 
            FractionBox["\[Beta]", "2"]}], "]"}], "]"}]}], ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        FractionBox["c", 
         SubscriptBox["c", "0"]]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\!\(\*SubscriptBox[\(F\), \(I\)]\)=\>\"", ",", 
     RowBox[{
      RowBox[{"FI", "//", "Simplify"}], "//", "MatrixForm"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UII", ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["a", 
           SubscriptBox["a", "0"]], "*", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}], "+", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}]}], ")"}], "2"]}],
          ",", 
         RowBox[{
          FractionBox["a", 
           SubscriptBox["a", "0"]], "*", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}]}], "+", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}]}], ")"}], "2"]}],
          ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["a", 
           SubscriptBox["a", "0"]], "*", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}]}], "+", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}]}], ")"}], "2"]}],
          ",", 
         RowBox[{
          FractionBox["a", 
           SubscriptBox["a", "0"]], "*", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}], "+", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}]}], ")"}], "2"]}],
          ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         FractionBox["c", 
          SubscriptBox["c", "0"]]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<\!\(\*SubscriptBox[\(U\), \
\(II\)]\)=\!\(\*RadicalBox[RowBox[{SuperscriptBox[SubscriptBox[\"F\", \
\"II\"], \"T\"], SubscriptBox[\"F\", \"II\"]}], \
\"2\",MultilineFunction->None,SurdForm->True]\)=\>\"", ",", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"MatrixPower", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "FII", "]"}], ".", "FII"}], ",", 
          FractionBox["1", "2"]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", ">", "0"}], ",", 
          RowBox[{
           SubscriptBox["a", "0"], ">", "0"}], ",", 
          RowBox[{"c", ">", "0"}], ",", 
          RowBox[{
           SubscriptBox["c", "0"], ">", "0"}]}], "}"}]}], "]"}], "//", 
      "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UI", ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["a", 
           SubscriptBox["a", "0"]], "*", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}], "+", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}]}], ")"}], "2"]}],
          ",", 
         RowBox[{
          FractionBox["a", 
           SubscriptBox["a", "0"]], "*", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}], "-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}]}], ")"}], "2"]}],
          ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["a", 
           SubscriptBox["a", "0"]], "*", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}], "-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}]}], ")"}], "2"]}],
          ",", 
         RowBox[{
          FractionBox["a", 
           SubscriptBox["a", "0"]], "*", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}], "+", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}]}], ")"}], "2"]}],
          ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         FractionBox["c", 
          SubscriptBox["c", "0"]]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<\!\(\*SubscriptBox[\(U\), \
\(I\)]\)=\!\(\*RadicalBox[RowBox[{SuperscriptBox[SubscriptBox[\"F\", \"I\"], \
\"T\"], SubscriptBox[\"F\", \"I\"]}], \
\"2\",MultilineFunction->None,SurdForm->True]\)=\>\"", ",", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"MatrixPower", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "FI", "]"}], ".", "FI"}], ",", 
          FractionBox["1", "2"]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", ">", "0"}], ",", 
          RowBox[{
           SubscriptBox["a", "0"], ">", "0"}], ",", 
          RowBox[{"c", ">", "0"}], ",", 
          RowBox[{
           SubscriptBox["c", "0"], ">", "0"}]}], "}"}]}], "]"}], "//", 
      "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Transpose", "[", "FI", "]"}], "//", "MatrixForm"}]}]}]], "Input",\

 CellChangeTimes->{{3.881234991462717*^9, 3.8812350107474413`*^9}, {
   3.881238225650222*^9, 3.881238233305608*^9}, {3.881238394420632*^9, 
   3.881238532157277*^9}, {3.881238580986032*^9, 3.881238680630287*^9}, {
   3.881238802489805*^9, 3.881238874365159*^9}, {3.8812389156001587`*^9, 
   3.88123898566308*^9}, 3.881240117862917*^9, {3.881240191443859*^9, 
   3.88124032839811*^9}, {3.881244752532412*^9, 3.881244770889254*^9}, {
   3.8831195619240503`*^9, 3.883119751083568*^9}, {3.88311978294221*^9, 
   3.883119861073965*^9}, {3.883119951222817*^9, 3.883119979050235*^9}, 
   3.883120115101695*^9, {3.8831202002151203`*^9, 3.883120233552918*^9}, {
   3.8831203673834248`*^9, 3.883120390508429*^9}, {3.8831204792008667`*^9, 
   3.883120500910514*^9}, {3.883120739278036*^9, 3.883120749263875*^9}, {
   3.88365792503974*^9, 3.88365793140691*^9}, {3.883657967204549*^9, 
   3.883658072451943*^9}, {3.88365812630724*^9, 3.883658144982435*^9}, {
   3.883658178278165*^9, 3.88365822281849*^9}, {3.883658361981234*^9, 
   3.8836584216288357`*^9}},
 CellLabel->
  "In[2018]:=",ExpressionUUID->"ff90e815-1c9c-41c8-9fce-70ba51d30550"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(F\\), \\(II\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}], "+", 
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}]}], 
        RowBox[{
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}], "-", 
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}]}], "0"},
       {
        RowBox[{
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}], "-", 
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}]}], 
        RowBox[{
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}], "+", 
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}]}], "0"},
       {"0", "0", 
        FractionBox["c", 
         SubscriptBox["c", "0"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(F\), \(II\)]\)=", 
   MatrixForm[{{
     0.1649595163575724 $CellContext`a 
       Cos[Rational[1, 2] $CellContext`\[Beta]] + 
      0.1649595163575724 $CellContext`a 
       Sin[Rational[1, 2] $CellContext`\[Beta]], 
      0.1649595163575724 $CellContext`a 
       Cos[Rational[1, 2] $CellContext`\[Beta]] - 
      0.1649595163575724 $CellContext`a 
      Sin[Rational[1, 2] $CellContext`\[Beta]], 0}, {
     0.1649595163575724 $CellContext`a 
       Cos[Rational[1, 2] $CellContext`\[Beta]] - 
      0.1649595163575724 $CellContext`a 
      Sin[Rational[1, 2] $CellContext`\[Beta]], 
      0.1649595163575724 $CellContext`a 
       Cos[Rational[1, 2] $CellContext`\[Beta]] + 
      0.1649595163575724 $CellContext`a 
       Sin[Rational[1, 2] $CellContext`\[Beta]], 0}, {
     0, 0, $CellContext`c/Subscript[$CellContext`c, 0]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.883119783923853*^9, 3.8831198616229963`*^9, 3.88312001564078*^9, 
   3.8831201319804487`*^9, {3.883120205889111*^9, 3.8831202342764053`*^9}, {
   3.883120378972382*^9, 3.883120391185856*^9}, {3.883120486216104*^9, 
   3.88312050131041*^9}, 3.883120749955336*^9, {3.883657921727618*^9, 
   3.8836579320163794`*^9}, {3.8836579717697887`*^9, 3.883658072998046*^9}, {
   3.883658127071289*^9, 3.883658157026966*^9}, 3.883658223647667*^9, 
   3.883658369530427*^9, {3.883658408469275*^9, 3.883658422124528*^9}, 
   3.890312770563654*^9},
 CellLabel->
  "During evaluation of \
In[2018]:=",ExpressionUUID->"1de2b5eb-62c6-4bd8-ab6c-aa2fe404a3eb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(F\\), \\(I\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}], "+", 
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1649595163575724`"}], " ", "a", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}], "+", 
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}]}], "0"},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1649595163575724`"}], " ", "a", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}], "+", 
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}]}], 
        RowBox[{
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}], "+", 
         RowBox[{"0.1649595163575724`", " ", "a", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}]}]}], "0"},
       {"0", "0", 
        FractionBox["c", 
         SubscriptBox["c", "0"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(F\), \(I\)]\)=", 
   MatrixForm[{{
     0.1649595163575724 $CellContext`a 
       Cos[Rational[1, 2] $CellContext`\[Beta]] + 
      0.1649595163575724 $CellContext`a 
       Sin[Rational[
          1, 2] $CellContext`\[Beta]], (-0.1649595163575724) $CellContext`a 
       Cos[Rational[1, 2] $CellContext`\[Beta]] + 
      0.1649595163575724 $CellContext`a 
       Sin[Rational[1, 2] $CellContext`\[Beta]], 
      0}, {(-0.1649595163575724) $CellContext`a 
       Cos[Rational[1, 2] $CellContext`\[Beta]] + 
      0.1649595163575724 $CellContext`a 
       Sin[Rational[1, 2] $CellContext`\[Beta]], 
      0.1649595163575724 $CellContext`a 
       Cos[Rational[1, 2] $CellContext`\[Beta]] + 
      0.1649595163575724 $CellContext`a 
       Sin[Rational[1, 2] $CellContext`\[Beta]], 0}, {
     0, 0, $CellContext`c/Subscript[$CellContext`c, 0]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.883119783923853*^9, 3.8831198616229963`*^9, 3.88312001564078*^9, 
   3.8831201319804487`*^9, {3.883120205889111*^9, 3.8831202342764053`*^9}, {
   3.883120378972382*^9, 3.883120391185856*^9}, {3.883120486216104*^9, 
   3.88312050131041*^9}, 3.883120749955336*^9, {3.883657921727618*^9, 
   3.8836579320163794`*^9}, {3.8836579717697887`*^9, 3.883658072998046*^9}, {
   3.883658127071289*^9, 3.883658157026966*^9}, 3.883658223647667*^9, 
   3.883658369530427*^9, {3.883658408469275*^9, 3.883658422124528*^9}, 
   3.890312770566407*^9},
 CellLabel->
  "During evaluation of \
In[2018]:=",ExpressionUUID->"c2691141-2eef-4aa5-98cc-23e1e4591fd5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(U\\), \
\\(II\\)]\\)=\\!\\(\\*RadicalBox[RowBox[{SuperscriptBox[SubscriptBox[\\\"F\\\"\
, \\\"II\\\"], \\\"T\\\"], SubscriptBox[\\\"F\\\", \\\"II\\\"]}], \
\\\"2\\\",MultilineFunction->None,SurdForm->True]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"0.11664399263769264`", " ", 
            SqrtBox[
             RowBox[{"1.`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.`", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                 RowBox[{"2.0000000000000004`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}], "+", 
           RowBox[{"0.11664399263769264`", " ", 
            SqrtBox[
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              RowBox[{"1.`", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                 RowBox[{"2.0000000000000004`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}]}], ")"}]}], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"0.11664399263769261`", " ", "a", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1.`", " ", 
              SqrtBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                RowBox[{"1.`", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"1.`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                   RowBox[{"2.0000000000000004`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                   RowBox[{"1.`", " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}], "-", 
             RowBox[{"1.`", " ", 
              SqrtBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.`", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"1.`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                   RowBox[{"2.0000000000000004`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                   RowBox[{"1.`", " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}]}], ")"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"1.`", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "4"]}], "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "4"]}], "-", 
             RowBox[{"0.5000000000000001`", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"1.`", " ", "\[Beta]"}], "]"}], "2"]}]}]]}], 
          RowBox[{
           RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "2"]}], "-", 
           RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "2"]}]}]]}], "0.`"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"0.11664399263769265`", " ", "a", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1.`", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"0.5`", " ", "\[Beta]"}], "]"}]}], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"0.5`", " ", "\[Beta]"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1.`", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"0.5`", " ", "\[Beta]"}], "]"}]}], "+", 
             RowBox[{"1.`", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"0.5`", " ", "\[Beta]"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1.`", " ", 
              SqrtBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                RowBox[{"1.`", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"1.`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                   RowBox[{"2.0000000000000004`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                   RowBox[{"1.`", " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}], "-", 
             RowBox[{"1.`", " ", 
              SqrtBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.`", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"1.`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                   RowBox[{"2.0000000000000004`", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                   RowBox[{"1.`", " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}]}], ")"}]}], 
          SqrtBox[
           RowBox[{
            RowBox[{"1.`", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "4"]}], "+", 
            RowBox[{"1.`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "4"]}], "-", 
            RowBox[{"0.5000000000000001`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               RowBox[{"1.`", " ", "\[Beta]"}], "]"}], "2"]}]}]]]}], 
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"0.11664399263769262`", " ", 
            SqrtBox[
             RowBox[{"1.`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.`", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                 RowBox[{"2.0000000000000004`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}], "+", 
           RowBox[{"0.11664399263769262`", " ", 
            SqrtBox[
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              RowBox[{"1.`", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                 RowBox[{"2.0000000000000004`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}]}], ")"}]}], "0.`"},
       {"0.`", "0.`", 
        FractionBox[
         RowBox[{"1.`", " ", "c"}], 
         SubscriptBox["c", "0"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(U\), \
\(II\)]\)=\!\(\*RadicalBox[RowBox[{SuperscriptBox[SubscriptBox[\"F\", \
\"II\"], \"T\"], SubscriptBox[\"F\", \"II\"]}], \
\"2\",MultilineFunction->None,SurdForm->True]\)=", 
   MatrixForm[{{$CellContext`a (
       0.11664399263769264` (1. - 
          1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2] + 
       0.11664399263769264` (1. + 
          1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
             2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
             Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
             1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2]), (-0.11664399263769261`) $CellContext`a (
        1. Cos[0.5 $CellContext`\[Beta]]^2 - 1. 
        Sin[0.5 $CellContext`\[Beta]]^2)^(-1) (
       1. (1. - 1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2] - 
       1. (1. + 1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
        Rational[1, 2]) (1. Cos[0.5 $CellContext`\[Beta]]^4 + 
        1. Sin[0.5 $CellContext`\[Beta]]^4 - 0.5000000000000001 
        Sin[1. $CellContext`\[Beta]]^2)^Rational[1, 2], 
      0.}, {(-0.11664399263769265`) $CellContext`a (
       1. Cos[0.5 $CellContext`\[Beta]] - 1. Sin[0.5 $CellContext`\[Beta]]) (
       1. Cos[0.5 $CellContext`\[Beta]] + 1. Sin[0.5 $CellContext`\[Beta]]) (
       1. (1. - 1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2] - 
       1. (1. + 1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
        Rational[1, 2]) (1. Cos[0.5 $CellContext`\[Beta]]^4 + 
        1. Sin[0.5 $CellContext`\[Beta]]^4 - 0.5000000000000001 
        Sin[1. $CellContext`\[Beta]]^2)^Rational[-1, 2], $CellContext`a (
       0.11664399263769262` (1. - 
          1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2] + 
       0.11664399263769262` (1. + 
          1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
             2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
             Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
             1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2]), 0.}, {
     0., 0., 1. $CellContext`c/Subscript[$CellContext`c, 0]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.883119783923853*^9, 3.8831198616229963`*^9, 3.88312001564078*^9, 
   3.8831201319804487`*^9, {3.883120205889111*^9, 3.8831202342764053`*^9}, {
   3.883120378972382*^9, 3.883120391185856*^9}, {3.883120486216104*^9, 
   3.88312050131041*^9}, 3.883120749955336*^9, {3.883657921727618*^9, 
   3.8836579320163794`*^9}, {3.8836579717697887`*^9, 3.883658072998046*^9}, {
   3.883658127071289*^9, 3.883658157026966*^9}, 3.883658223647667*^9, 
   3.883658369530427*^9, {3.883658408469275*^9, 3.883658422124528*^9}, 
   3.890312770778672*^9},
 CellLabel->
  "During evaluation of \
In[2018]:=",ExpressionUUID->"2d39909b-144f-44e3-9493-514fa9789343"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(U\\), \
\\(I\\)]\\)=\\!\\(\\*RadicalBox[RowBox[{SuperscriptBox[SubscriptBox[\\\"F\\\",\
 \\\"I\\\"], \\\"T\\\"], SubscriptBox[\\\"F\\\", \\\"I\\\"]}], \
\\\"2\\\",MultilineFunction->None,SurdForm->True]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"0.11664399263769264`", " ", 
            SqrtBox[
             RowBox[{"1.`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.`", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                 RowBox[{"2.0000000000000004`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}], "+", 
           RowBox[{"0.11664399263769264`", " ", 
            SqrtBox[
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              RowBox[{"1.`", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                 RowBox[{"2.0000000000000004`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}]}], ")"}]}], 
        FractionBox[
         RowBox[{"0.11664399263769261`", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1.`", " ", 
             SqrtBox[
              RowBox[{"1.`", "\[VeryThinSpace]", "-", 
               RowBox[{"1.`", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"1.`", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                  RowBox[{"2.0000000000000004`", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                  RowBox[{"1.`", " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}], "-", 
            RowBox[{"1.`", " ", 
             SqrtBox[
              RowBox[{"1.`", "\[VeryThinSpace]", "+", 
               RowBox[{"1.`", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"1.`", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                  RowBox[{"2.0000000000000004`", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                  RowBox[{"1.`", " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"1.`", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "4"]}], "+", 
            RowBox[{"1.`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "4"]}], "-", 
            RowBox[{"0.5000000000000001`", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               RowBox[{"1.`", " ", "\[Beta]"}], "]"}], "2"]}]}]]}], 
         RowBox[{
          RowBox[{"1.`", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "2"]}], "-", 
          RowBox[{"1.`", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "2"]}]}]], "0.`"},
       {
        FractionBox[
         RowBox[{"0.11664399263769265`", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1.`", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"0.5`", " ", "\[Beta]"}], "]"}]}], "-", 
            RowBox[{"1.`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.5`", " ", "\[Beta]"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1.`", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"0.5`", " ", "\[Beta]"}], "]"}]}], "+", 
            RowBox[{"1.`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.5`", " ", "\[Beta]"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1.`", " ", 
             SqrtBox[
              RowBox[{"1.`", "\[VeryThinSpace]", "-", 
               RowBox[{"1.`", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"1.`", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                  RowBox[{"2.0000000000000004`", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                  RowBox[{"1.`", " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}], "-", 
            RowBox[{"1.`", " ", 
             SqrtBox[
              RowBox[{"1.`", "\[VeryThinSpace]", "+", 
               RowBox[{"1.`", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"1.`", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                  RowBox[{"2.0000000000000004`", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                  RowBox[{"1.`", " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}]}], ")"}]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "4"]}], "+", 
           RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"0.5`", " ", "\[Beta]"}], "]"}], "4"]}], "-", 
           RowBox[{"0.5000000000000001`", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"1.`", " ", "\[Beta]"}], "]"}], "2"]}]}]]], 
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"0.11664399263769262`", " ", 
            SqrtBox[
             RowBox[{"1.`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.`", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                 RowBox[{"2.0000000000000004`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}], "+", 
           RowBox[{"0.11664399263769262`", " ", 
            SqrtBox[
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              RowBox[{"1.`", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}], "-", 
                 RowBox[{"2.0000000000000004`", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "2"]}], "+", 
                 RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    "\[Beta]"}], "]"}], "4"]}]}]]}]}]]}]}], ")"}]}], "0.`"},
       {"0.`", "0.`", 
        FractionBox[
         RowBox[{"1.`", " ", "c"}], 
         SubscriptBox["c", "0"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(U\), \
\(I\)]\)=\!\(\*RadicalBox[RowBox[{SuperscriptBox[SubscriptBox[\"F\", \"I\"], \
\"T\"], SubscriptBox[\"F\", \"I\"]}], \
\"2\",MultilineFunction->None,SurdForm->True]\)=", 
   MatrixForm[{{$CellContext`a (
       0.11664399263769264` (1. - 
          1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2] + 
       0.11664399263769264` (1. + 
          1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
             2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
             Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
             1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2]), 
      0.11664399263769261` $CellContext`a (1. Cos[0.5 $CellContext`\[Beta]]^2 - 
        1. Sin[0.5 $CellContext`\[Beta]]^2)^(-1) (
       1. (1. - 1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2] - 
       1. (1. + 1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
        Rational[1, 2]) (1. Cos[0.5 $CellContext`\[Beta]]^4 + 
        1. Sin[0.5 $CellContext`\[Beta]]^4 - 0.5000000000000001 
        Sin[1. $CellContext`\[Beta]]^2)^Rational[1, 2], 0.}, {
     0.11664399263769265` $CellContext`a (1. Cos[0.5 $CellContext`\[Beta]] - 
       1. Sin[0.5 $CellContext`\[Beta]]) (1. Cos[0.5 $CellContext`\[Beta]] + 
       1. Sin[0.5 $CellContext`\[Beta]]) (
       1. (1. - 1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2] - 
       1. (1. + 1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
        Rational[1, 2]) (1. Cos[0.5 $CellContext`\[Beta]]^4 + 
        1. Sin[0.5 $CellContext`\[Beta]]^4 - 0.5000000000000001 
        Sin[1. $CellContext`\[Beta]]^2)^Rational[-1, 2], $CellContext`a (
       0.11664399263769262` (1. - 
          1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
            2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
            Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
            1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2] + 
       0.11664399263769262` (1. + 
          1. (1. Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^4 - 
             2.0000000000000004` Cos[Complex[0.5, 0.] $CellContext`\[Beta]]^2 
             Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^2 + 
             1. Sin[Complex[0.5, 0.] $CellContext`\[Beta]]^4)^Rational[1, 2])^
         Rational[1, 2]), 0.}, {
     0., 0., 1. $CellContext`c/Subscript[$CellContext`c, 0]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.883119783923853*^9, 3.8831198616229963`*^9, 3.88312001564078*^9, 
   3.8831201319804487`*^9, {3.883120205889111*^9, 3.8831202342764053`*^9}, {
   3.883120378972382*^9, 3.883120391185856*^9}, {3.883120486216104*^9, 
   3.88312050131041*^9}, 3.883120749955336*^9, {3.883657921727618*^9, 
   3.8836579320163794`*^9}, {3.8836579717697887`*^9, 3.883658072998046*^9}, {
   3.883658127071289*^9, 3.883658157026966*^9}, 3.883658223647667*^9, 
   3.883658369530427*^9, {3.883658408469275*^9, 3.883658422124528*^9}, 
   3.890312770869197*^9},
 CellLabel->
  "During evaluation of \
In[2018]:=",ExpressionUUID->"e82c5e79-4acd-45c6-b846-e05ffc3f1f1a"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.23328798527538527`", " ", "a", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}], 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}], 
          SqrtBox["2"]]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "0.23328798527538527`"}], " ", "a", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}], 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}], 
          SqrtBox["2"]]}], ")"}]}], "0"},
     {
      RowBox[{
       RowBox[{"-", "0.23328798527538527`"}], " ", "a", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}], 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}], 
          SqrtBox["2"]]}], ")"}]}], 
      RowBox[{"0.23328798527538527`", " ", "a", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"Cos", "[", 
           FractionBox["\[Beta]", "2"], "]"}], 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{"Sin", "[", 
           FractionBox["\[Beta]", "2"], "]"}], 
          SqrtBox["2"]]}], ")"}]}], "0"},
     {"0", "0", 
      FractionBox["c", 
       SubscriptBox["c", "0"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.883658408512246*^9, 3.883658422163781*^9}, 
   3.890312770872966*^9},
 CellLabel->
  "Out[2026]//MatrixForm=",ExpressionUUID->"fe76a1de-496d-4eec-a463-\
36d7cfa8be0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"QI", ":=", 
   RowBox[{"FI", ".", 
    RowBox[{"Inverse", "[", "UI", "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{"The", " ", "Corresponding", " ", "Rotations", " ", "QI"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QII", ":=", 
   RowBox[{"FII", ".", 
    RowBox[{"Inverse", "[", "UII", "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{"The", " ", "Corresponding", " ", "Rotations", " ", "QII"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(F\), \(I\)]\)=\>\"", ",", 
      RowBox[{"FI", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(F\), \(II\)]\)=\>\"", ",", 
      RowBox[{"FII", "//", "MatrixForm"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Always", " ", "check", " ", "if", " ", "its", " ", "a", " ", 
    RowBox[{"rotation", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(U\), \(I\)]\)=\>\"", ",", 
   RowBox[{"UI", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(U\), \(II\)]\)=\>\"", ",", 
   RowBox[{"UII", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(Q\), \(I\)]\)=\>\"", ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"QI", "//", "MatrixForm"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(Q\), \(II\)]\)=\>\"", ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"QII", "//", "MatrixForm"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(Q\), \(I\)], \
\(T\)]\).\!\(\*SubscriptBox[\(Q\), \(I\)]\)=\>\"", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", "QI", "]"}], ".", "QI"}], "//", "Simplify"}],
      "//", "PowerExpand"}], "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(Q\), \(II\)], \
\(T\)]\).\!\(\*SubscriptBox[\(Q\), \(II\)]\)=\>\"", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", "QII", "]"}], ".", "QII"}], "//", 
      "Simplify"}], "//", "PowerExpand"}], "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FI", "-", 
    RowBox[{"Transpose", "[", "FI", "]"}]}], "//", "Simplify"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.883658238307209*^9, 3.883658242119259*^9}, {
  3.8903129276989307`*^9, 
  3.89031308414528*^9}},ExpressionUUID->"c0e993c9-45b4-48e1-8f88-\
6d61d39d16fe"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(U\\), \\(I\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"0.11664399263769264`", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}], 
        RowBox[{"0.11664399263769264`", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "-", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}], "0"},
       {
        RowBox[{"0.11664399263769264`", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "-", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}], 
        RowBox[{"0.11664399263769264`", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}], "0"},
       {"0", "0", 
        FractionBox["c", 
         SubscriptBox["c", "0"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(U\), \(I\)]\)=", 
   MatrixForm[{{
     0.11664399263769264` $CellContext`a ((1 - Cos[$CellContext`\[Beta]])^
        Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
      0.11664399263769264` $CellContext`a ((1 - Cos[$CellContext`\[Beta]])^
        Rational[1, 2] - (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
      0}, {0.11664399263769264` $CellContext`a ((1 - 
         Cos[$CellContext`\[Beta]])^Rational[1, 2] - (1 + 
        Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
      0.11664399263769264` $CellContext`a ((1 - Cos[$CellContext`\[Beta]])^
        Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
      0}, {0, 0, $CellContext`c/Subscript[$CellContext`c, 0]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.883658159566662*^9, 3.883658243854097*^9, 3.8903127708800488`*^9, {
   3.8903129713674307`*^9, 3.890312990104216*^9}, {3.890313060646092*^9, 
   3.890313071811996*^9}},
 CellLabel->
  "During evaluation of \
In[2155]:=",ExpressionUUID->"e52a6afc-73d7-4d00-ab05-d826d249c8e9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(U\\), \\(II\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"0.11664399263769264`", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}], 
        RowBox[{"0.11664399263769264`", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}], "0"},
       {
        RowBox[{"0.11664399263769264`", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}], 
        RowBox[{"0.11664399263769264`", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}], "0"},
       {"0", "0", 
        FractionBox["c", 
         SubscriptBox["c", "0"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(U\), \(II\)]\)=", 
   MatrixForm[{{
     0.11664399263769264` $CellContext`a ((1 - Cos[$CellContext`\[Beta]])^
        Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
      0.11664399263769264` $CellContext`a (-(1 - Cos[$CellContext`\[Beta]])^
         Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
      0}, {0.11664399263769264` $CellContext`a (-(1 - 
          Cos[$CellContext`\[Beta]])^Rational[1, 2] + (1 + 
         Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
      0.11664399263769264` $CellContext`a ((1 - Cos[$CellContext`\[Beta]])^
        Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
      0}, {0, 0, $CellContext`c/Subscript[$CellContext`c, 0]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.883658159566662*^9, 3.883658243854097*^9, 3.8903127708800488`*^9, {
   3.8903129713674307`*^9, 3.890312990104216*^9}, {3.890313060646092*^9, 
   3.890313071815588*^9}},
 CellLabel->
  "During evaluation of \
In[2155]:=",ExpressionUUID->"17383f93-1a10-4818-90e1-f8ed19505cb9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(I\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{
          RowBox[{"0.7071067811865476`", " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Beta]", "2"], "]"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
          RowBox[{"0.7071067811865476`", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Beta]", "2"], "]"}]}]}], 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]]], 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.7071067811865476`"}], " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Beta]", "2"], "]"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
          RowBox[{"0.7071067811865476`", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Beta]", "2"], "]"}]}]}], 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]]], "0.`"},
       {
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.7071067811865476`"}], " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Beta]", "2"], "]"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
          RowBox[{"0.7071067811865476`", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Beta]", "2"], "]"}]}]}], 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]]], 
        FractionBox[
         RowBox[{
          RowBox[{"0.7071067811865476`", " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Beta]", "2"], "]"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
          RowBox[{"0.7071067811865476`", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Beta]", "2"], "]"}]}]}], 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]]], "0.`"},
       {"0.`", "0.`", "1.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(Q\), \(I\)]\)=", 
   MatrixForm[{{(
       0.7071067811865476 
        Cos[Rational[1, 2] $CellContext`\[Beta]] (1 - 
          Cos[$CellContext`\[Beta]])^Rational[1, 2] + 
       0.7071067811865476 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2] 
        Sin[Rational[1, 2] $CellContext`\[Beta]]) (
        Sin[$CellContext`\[Beta]]^2)^
       Rational[-1, 2], ((-0.7071067811865476) 
        Cos[Rational[1, 2] $CellContext`\[Beta]] (1 - 
          Cos[$CellContext`\[Beta]])^Rational[1, 2] + 
       0.7071067811865476 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2] 
        Sin[Rational[1, 2] $CellContext`\[Beta]]) (
        Sin[$CellContext`\[Beta]]^2)^Rational[-1, 2], 
      0.}, {((-0.7071067811865476) 
        Cos[
         Rational[1, 2] $CellContext`\[Beta]] (1 - Cos[$CellContext`\[Beta]])^
         Rational[1, 2] + 
       0.7071067811865476 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2] 
        Sin[Rational[1, 2] $CellContext`\[Beta]]) (
        Sin[$CellContext`\[Beta]]^2)^Rational[-1, 2], (
       0.7071067811865476 
        Cos[Rational[1, 2] $CellContext`\[Beta]] (1 - 
          Cos[$CellContext`\[Beta]])^Rational[1, 2] + 
       0.7071067811865476 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2] 
        Sin[Rational[1, 2] $CellContext`\[Beta]]) (
        Sin[$CellContext`\[Beta]]^2)^Rational[-1, 2], 0.}, {0., 0., 1.}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.883658159566662*^9, 3.883658243854097*^9, 3.8903127708800488`*^9, {
   3.8903129713674307`*^9, 3.890312990104216*^9}, {3.890313060646092*^9, 
   3.890313071818675*^9}},
 CellLabel->
  "During evaluation of \
In[2155]:=",ExpressionUUID->"21dd3a96-dbff-4303-b135-084619e4a9b9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(II\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{
          RowBox[{"0.7071067811865476`", " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Beta]", "2"], "]"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
          RowBox[{"0.7071067811865476`", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Beta]", "2"], "]"}]}]}], 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]]], 
        FractionBox[
         RowBox[{
          RowBox[{"0.7071067811865476`", " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Beta]", "2"], "]"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "-", 
          RowBox[{"0.7071067811865476`", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Beta]", "2"], "]"}]}]}], 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]]], "0.`"},
       {
        FractionBox[
         RowBox[{
          RowBox[{"0.7071067811865476`", " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Beta]", "2"], "]"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "-", 
          RowBox[{"0.7071067811865476`", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Beta]", "2"], "]"}]}]}], 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]]], 
        FractionBox[
         RowBox[{
          RowBox[{"0.7071067811865476`", " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Beta]", "2"], "]"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
          RowBox[{"0.7071067811865476`", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Beta]", "2"], "]"}]}]}], 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]]], "0.`"},
       {"0.`", "0.`", "1.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(Q\), \(II\)]\)=", 
   MatrixForm[{{(
       0.7071067811865476 
        Cos[Rational[1, 2] $CellContext`\[Beta]] (1 - 
          Cos[$CellContext`\[Beta]])^Rational[1, 2] + 
       0.7071067811865476 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2] 
        Sin[Rational[1, 2] $CellContext`\[Beta]]) (
        Sin[$CellContext`\[Beta]]^2)^Rational[-1, 2], (
       0.7071067811865476 
        Cos[Rational[1, 2] $CellContext`\[Beta]] (1 - 
          Cos[$CellContext`\[Beta]])^Rational[1, 2] - 
       0.7071067811865476 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2] 
       Sin[Rational[1, 2] $CellContext`\[Beta]]) (
        Sin[$CellContext`\[Beta]]^2)^Rational[-1, 2], 
      0.}, {(0.7071067811865476 
        Cos[Rational[1, 2] $CellContext`\[Beta]] (1 - 
          Cos[$CellContext`\[Beta]])^Rational[1, 2] - 
       0.7071067811865476 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2] 
       Sin[Rational[1, 2] $CellContext`\[Beta]]) (
        Sin[$CellContext`\[Beta]]^2)^Rational[-1, 2], (
       0.7071067811865476 
        Cos[Rational[1, 2] $CellContext`\[Beta]] (1 - 
          Cos[$CellContext`\[Beta]])^Rational[1, 2] + 
       0.7071067811865476 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2] 
        Sin[Rational[1, 2] $CellContext`\[Beta]]) (
        Sin[$CellContext`\[Beta]]^2)^Rational[-1, 2], 0.}, {0., 0., 1.}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.883658159566662*^9, 3.883658243854097*^9, 3.8903127708800488`*^9, {
   3.8903129713674307`*^9, 3.890312990104216*^9}, {3.890313060646092*^9, 
   3.890313071821651*^9}},
 CellLabel->
  "During evaluation of \
In[2155]:=",ExpressionUUID->"fcb62be5-d7d6-47cb-ab73-55de53e3fd87"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(Q\\), \\(I\\)], \
\\(T\\)]\\).\\!\\(\\*SubscriptBox[\\(Q\\), \\(I\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.0000000000000004`", "0.`", "0.`"},
       {"0.`", "1.0000000000000004`", "0.`"},
       {"0.`", "0.`", "1.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(\*SuperscriptBox[SubscriptBox[\(Q\), \(I\)], \
\(T\)]\).\!\(\*SubscriptBox[\(Q\), \(I\)]\)=", 
   MatrixForm[{{1.0000000000000004`, 0., 0.}, {0., 1.0000000000000004`, 0.}, {
    0., 0., 1.}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.883658159566662*^9, 3.883658243854097*^9, 3.8903127708800488`*^9, {
   3.8903129713674307`*^9, 3.890312990104216*^9}, {3.890313060646092*^9, 
   3.890313071824175*^9}},
 CellLabel->
  "During evaluation of \
In[2155]:=",ExpressionUUID->"c61fd4e3-e9a9-4b02-8303-48e08948bbf2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(Q\\), \\(II\\)], \
\\(T\\)]\\).\\!\\(\\*SubscriptBox[\\(Q\\), \\(II\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.0000000000000004`", "0.`", "0.`"},
       {"0.`", "1.0000000000000004`", "0.`"},
       {"0.`", "0.`", "1.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(\*SuperscriptBox[SubscriptBox[\(Q\), \(II\)], \
\(T\)]\).\!\(\*SubscriptBox[\(Q\), \(II\)]\)=", 
   MatrixForm[{{1.0000000000000004`, 0., 0.}, {0., 1.0000000000000004`, 0.}, {
    0., 0., 1.}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.883658159566662*^9, 3.883658243854097*^9, 3.8903127708800488`*^9, {
   3.8903129713674307`*^9, 3.890312990104216*^9}, {3.890313060646092*^9, 
   3.890313071826372*^9}},
 CellLabel->
  "During evaluation of \
In[2155]:=",ExpressionUUID->"d6e74745-807b-4496-a33e-0f9e22129628"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", "0"},
     {"0.`", "0.`", "0"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.883658159587859*^9, 3.883658243868122*^9, 3.890312770927507*^9, {
   3.890312971412869*^9, 3.890312990120371*^9}, {3.890313060670498*^9, 
   3.890313071829403*^9}},
 CellLabel->
  "Out[2163]//MatrixForm=",ExpressionUUID->"b06d8fa0-9391-451b-b22a-\
bb48ab7246e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Checking", " ", "if", " ", "its", " ", "actually", " ", "the", " ", 
     "polar", " ", "decomposition", " ", 
     RowBox[{"F", "^", "TF"}]}], "-", 
    RowBox[{"U", "^", "2"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "FI", "]"}], ".", "FI"}], "-", 
     RowBox[{"UI", ".", "UI"}]}], "//", "Simplify"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "FII", "]"}], ".", "FII"}], "-", 
     RowBox[{"UII", ".", "UII"}]}], "//", "Simplify"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FI", "-", 
     RowBox[{"QI", ".", "UI"}]}], "//", "Simplify"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FII", "-", 
     RowBox[{"QII", ".", "UII"}]}], "//", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.881239037111939*^9, 3.881239087659885*^9}, {
  3.881239238788135*^9, 3.8812392462382603`*^9}, {3.88123936376583*^9, 
  3.8812393686044817`*^9}, {3.881240020932641*^9, 3.8812400270763283`*^9}, {
  3.881240130747899*^9, 3.881240143924885*^9}, {3.8812408366989603`*^9, 
  3.881240855931574*^9}},
 CellLabel->
  "In[2164]:=",ExpressionUUID->"6382c149-39bf-44f4-a511-828d1b4e4a50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8812390723716393`*^9, 3.881239088237567*^9}, {
   3.88123924145371*^9, 3.881239246748713*^9}, {3.881239362035206*^9, 
   3.8812393692572536`*^9}, {3.88124002173702*^9, 3.881240027867526*^9}, {
   3.881240125124092*^9, 3.881240145190386*^9}, 3.881240224022532*^9, 
   3.8812408567163258`*^9, 3.881346991659751*^9, 3.881348394186782*^9, 
   3.881348508740095*^9, 3.881841868280362*^9, 3.8831207560737553`*^9, 
   3.890312770936812*^9, 3.890313089488752*^9},
 CellLabel->
  "Out[2164]=",ExpressionUUID->"dc740dc1-7fc2-439b-8b1e-8a11c2a6966e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8812390723716393`*^9, 3.881239088237567*^9}, {
   3.88123924145371*^9, 3.881239246748713*^9}, {3.881239362035206*^9, 
   3.8812393692572536`*^9}, {3.88124002173702*^9, 3.881240027867526*^9}, {
   3.881240125124092*^9, 3.881240145190386*^9}, 3.881240224022532*^9, 
   3.8812408567163258`*^9, 3.881346991659751*^9, 3.881348394186782*^9, 
   3.881348508740095*^9, 3.881841868280362*^9, 3.8831207560737553`*^9, 
   3.890312770936812*^9, 3.8903130894911623`*^9},
 CellLabel->
  "Out[2165]=",ExpressionUUID->"7191a8bd-40bd-4f47-aa8a-d8f6983baea7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8812390723716393`*^9, 3.881239088237567*^9}, {
   3.88123924145371*^9, 3.881239246748713*^9}, {3.881239362035206*^9, 
   3.8812393692572536`*^9}, {3.88124002173702*^9, 3.881240027867526*^9}, {
   3.881240125124092*^9, 3.881240145190386*^9}, 3.881240224022532*^9, 
   3.8812408567163258`*^9, 3.881346991659751*^9, 3.881348394186782*^9, 
   3.881348508740095*^9, 3.881841868280362*^9, 3.8831207560737553`*^9, 
   3.890312770936812*^9, 3.8903130895252323`*^9},
 CellLabel->
  "Out[2166]=",ExpressionUUID->"6e2fb1bb-3a10-4541-8406-370964371a29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8812390723716393`*^9, 3.881239088237567*^9}, {
   3.88123924145371*^9, 3.881239246748713*^9}, {3.881239362035206*^9, 
   3.8812393692572536`*^9}, {3.88124002173702*^9, 3.881240027867526*^9}, {
   3.881240125124092*^9, 3.881240145190386*^9}, 3.881240224022532*^9, 
   3.8812408567163258`*^9, 3.881346991659751*^9, 3.881348394186782*^9, 
   3.881348508740095*^9, 3.881841868280362*^9, 3.8831207560737553`*^9, 
   3.890312770936812*^9, 3.890313089526917*^9},
 CellLabel->
  "Out[2167]=",ExpressionUUID->"b793226c-50fd-4365-9aad-ae3a68d7fcc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Checking", " ", "for", " ", "Twins", " ", "C"}], "=", 
    RowBox[{
     SuperscriptBox["FII", 
      RowBox[{"-", "T"}]], 
     SuperscriptBox["FI", "T"], "FI", " ", 
     SuperscriptBox["FII", 
      RowBox[{"-", "1"}]]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Inverse", "[", 
       RowBox[{"Transpose", "[", "FII", "]"}], "]"}], ".", 
      RowBox[{"Transpose", "[", "FI", "]"}], ".", "FI", ".", 
      RowBox[{"Inverse", "[", "FII", "]"}]}], "//", "Simplify"}], "//", 
    "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Inverse", "[", 
       RowBox[{"Transpose", "[", "UII", "]"}], "]"}], ".", 
      RowBox[{"Transpose", "[", "UI", "]"}], ".", "UI", ".", 
      RowBox[{"Inverse", "[", "UII", "]"}]}], "//", "Simplify"}], "//", 
    "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Check", " ", "that", " ", "the", " ", "above", " ", "are", " ", "equal", 
     " ", "to", " ", 
     "\"\<-{{\!\(\*FractionBox[\(1 + \*SuperscriptBox[\(Cos[\[Beta]]\), \
\(2\)]\), SuperscriptBox[\(Sin[\[Beta]]\), \
\(2\)]]\),-2\!\(\*FractionBox[\(Cos[\[Beta]]\), SuperscriptBox[\(Sin[\[Beta]]\
\), \(2\)]]\),0},{-2\!\(\*FractionBox[\(Cos[\[Beta]]\), SuperscriptBox[\(Sin[\
\[Beta]]\), \(2\)]]\),\!\(\*FractionBox[\(1 + \*SuperscriptBox[\(Cos[\[Beta]]\
\), \(2\)]\), SuperscriptBox[\(Sin[\[Beta]]\), \(2\)]]\),0},{0,0,1}}\>\"", 
     " ", "by", " ", "substracting", " ", "them", " ", "and", " ", "getting", 
     " ", "0."}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eigensystem", "[", 
     RowBox[{
      RowBox[{"Inverse", "[", 
       RowBox[{"Transpose", "[", "UII", "]"}], "]"}], ".", 
      RowBox[{"Transpose", "[", "UI", "]"}], ".", "UI", ".", 
      RowBox[{"Inverse", "[", "UII", "]"}]}], "]"}], "//", "Simplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Inverse", "[", 
       RowBox[{"Transpose", "[", "UII", "]"}], "]"}], ".", 
      RowBox[{"Transpose", "[", "UI", "]"}], ".", "UI", ".", 
      RowBox[{"Inverse", "[", "UII", "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}], " ", 
         RowBox[{"Sec", "[", "\[Beta]", "]"}]}], ",", "1", ",", "0"}], 
       "}"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"3", "-", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}]}], ")"}]}]], ")"}], "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}], " ", 
         RowBox[{"Sec", "[", "\[Beta]", "]"}]}], ",", "1", ",", "0"}], 
       "}"}]}]}], "//", "Simplify"}], 
   RowBox[{"(*", 
    RowBox[{
    "Checking", " ", "the", " ", "seoncd", " ", "eigen", " ", "vlaue", " ", 
     "and", " ", "vector", " ", "pair"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Inverse", "[", 
       RowBox[{"Transpose", "[", "UII", "]"}], "]"}], ".", 
      RowBox[{"Transpose", "[", "UI", "]"}], ".", "UI", ".", 
      RowBox[{"Inverse", "[", "UII", "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}], " ", 
         RowBox[{"Sec", "[", "\[Beta]", "]"}]}], ",", "1", ",", "0"}], 
       "}"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"3", "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}]}], ")"}]}]], ")"}], "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}], " ", 
         RowBox[{"Sec", "[", "\[Beta]", "]"}]}], ",", "1", ",", "0"}], 
       "}"}]}]}], "//", "Simplify", 
    RowBox[{"(*", 
     RowBox[{
     "Checking", " ", "the", " ", "third", " ", "eigen", " ", "vlaue", " ", 
      "and", " ", "vector", " ", "pair"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8812408663443537`*^9, 3.881240931492113*^9}, {
  3.881241089294261*^9, 3.881241148561249*^9}, {3.88124152288866*^9, 
  3.881241535427928*^9}, {3.881241783920574*^9, 3.881241791553047*^9}, {
  3.881241891516906*^9, 3.881242045417625*^9}, {3.883120775839336*^9, 
  3.8831207834583387`*^9}, {3.8831210822918673`*^9, 3.883121205452586*^9}, {
  3.88312125187938*^9, 3.883121282348484*^9}, {3.883121343878166*^9, 
  3.8831213463594637`*^9}, {3.883121714907398*^9, 3.88312171614364*^9}, {
  3.8831220201132183`*^9, 3.883122020546749*^9}},
 CellLabel->
  "In[2168]:=",ExpressionUUID->"af01ba13-9d8a-44fd-a2ba-d6b17056d567"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"0.49999999999999994`", " ", 
        SuperscriptBox[
         RowBox[{"Cot", "[", 
          FractionBox["\[Beta]", "2"], "]"}], "2"]}], "+", 
       RowBox[{"0.49999999999999994`", " ", 
        SuperscriptBox[
         RowBox[{"Tan", "[", 
          FractionBox["\[Beta]", "2"], "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.49999999999999994`"}], " ", 
        SuperscriptBox[
         RowBox[{"Cot", "[", 
          FractionBox["\[Beta]", "2"], "]"}], "2"]}], "+", 
       RowBox[{"0.49999999999999994`", " ", 
        SuperscriptBox[
         RowBox[{"Tan", "[", 
          FractionBox["\[Beta]", "2"], "]"}], "2"]}]}], "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.49999999999999994`"}], " ", 
        SuperscriptBox[
         RowBox[{"Cot", "[", 
          FractionBox["\[Beta]", "2"], "]"}], "2"]}], "+", 
       RowBox[{"0.49999999999999994`", " ", 
        SuperscriptBox[
         RowBox[{"Tan", "[", 
          FractionBox["\[Beta]", "2"], "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{"0.49999999999999994`", " ", 
        SuperscriptBox[
         RowBox[{"Cot", "[", 
          FractionBox["\[Beta]", "2"], "]"}], "2"]}], "+", 
       RowBox[{"0.49999999999999994`", " ", 
        SuperscriptBox[
         RowBox[{"Tan", "[", 
          FractionBox["\[Beta]", "2"], "]"}], "2"]}]}], "0"},
     {"0.`", "0.`", "1.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.881241137147078*^9, 3.881241149190219*^9}, 
   3.881241536747488*^9, 3.881241792344981*^9, {3.881241937385754*^9, 
   3.881241969699548*^9}, {3.881242036044325*^9, 3.881242046502097*^9}, 
   3.88134699172793*^9, 3.881348394234321*^9, 3.881348508788457*^9, 
   3.881841868339817*^9, {3.883120764277308*^9, 3.883120785448634*^9}, {
   3.883121173958501*^9, 3.8831212064447107`*^9}, 3.883121254943934*^9, 
   3.883121289854086*^9, 3.8831214043152122`*^9, 3.8831220219395447`*^9, 
   3.890312770983865*^9, 3.890313100813146*^9},
 CellLabel->
  "Out[2168]//MatrixForm=",ExpressionUUID->"b940254d-0ec8-4ede-bbf6-\
517cbf4c4d52"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1.`"}], "-", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}]}], 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}]], 
      FractionBox[
       RowBox[{"2.`", " ", 
        RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}]], "0.`"},
     {
      FractionBox[
       RowBox[{"2.`", " ", 
        RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1.`"}], "-", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}]}], 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}]], "0.`"},
     {"0.`", "0.`", "1.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.881241137147078*^9, 3.881241149190219*^9}, 
   3.881241536747488*^9, 3.881241792344981*^9, {3.881241937385754*^9, 
   3.881241969699548*^9}, {3.881242036044325*^9, 3.881242046502097*^9}, 
   3.88134699172793*^9, 3.881348394234321*^9, 3.881348508788457*^9, 
   3.881841868339817*^9, {3.883120764277308*^9, 3.883120785448634*^9}, {
   3.883121173958501*^9, 3.8831212064447107`*^9}, 3.883121254943934*^9, 
   3.883121289854086*^9, 3.8831214043152122`*^9, 3.8831220219395447`*^9, 
   3.890312770983865*^9, 3.890313100822135*^9},
 CellLabel->
  "Out[2169]//MatrixForm=",ExpressionUUID->"218a0c64-d640-4d8e-be31-\
69c01d2fcaa4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1.`", "\[VeryThinSpace]", "-", 
           RowBox[{"1.`", " ", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}]}], ")"}], "2"]}], 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1.`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.`", " ", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}]}], ")"}], "2"]}], 
       RowBox[{
        RowBox[{"-", "1.`"}], "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "1.`", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.`"}], ",", "1.`", ",", "0"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.881241137147078*^9, 3.881241149190219*^9}, 
   3.881241536747488*^9, 3.881241792344981*^9, {3.881241937385754*^9, 
   3.881241969699548*^9}, {3.881242036044325*^9, 3.881242046502097*^9}, 
   3.88134699172793*^9, 3.881348394234321*^9, 3.881348508788457*^9, 
   3.881841868339817*^9, {3.883120764277308*^9, 3.883120785448634*^9}, {
   3.883121173958501*^9, 3.8831212064447107`*^9}, 3.883121254943934*^9, 
   3.883121289854086*^9, 3.8831214043152122`*^9, 3.8831220219395447`*^9, 
   3.890312770983865*^9, 3.890313100865736*^9},
 CellLabel->
  "Out[2170]=",ExpressionUUID->"6bf6d36e-1660-43e7-8d06-f7f3e2c1d5ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.881241137147078*^9, 3.881241149190219*^9}, 
   3.881241536747488*^9, 3.881241792344981*^9, {3.881241937385754*^9, 
   3.881241969699548*^9}, {3.881242036044325*^9, 3.881242046502097*^9}, 
   3.88134699172793*^9, 3.881348394234321*^9, 3.881348508788457*^9, 
   3.881841868339817*^9, {3.883120764277308*^9, 3.883120785448634*^9}, {
   3.883121173958501*^9, 3.8831212064447107`*^9}, 3.883121254943934*^9, 
   3.883121289854086*^9, 3.8831214043152122`*^9, 3.8831220219395447`*^9, 
   3.890312770983865*^9, 3.890313100907282*^9},
 CellLabel->
  "Out[2171]=",ExpressionUUID->"ca715231-e5fe-4d23-8d14-db61124e1ea8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.881241137147078*^9, 3.881241149190219*^9}, 
   3.881241536747488*^9, 3.881241792344981*^9, {3.881241937385754*^9, 
   3.881241969699548*^9}, {3.881242036044325*^9, 3.881242046502097*^9}, 
   3.88134699172793*^9, 3.881348394234321*^9, 3.881348508788457*^9, 
   3.881841868339817*^9, {3.883120764277308*^9, 3.883120785448634*^9}, {
   3.883121173958501*^9, 3.8831212064447107`*^9}, 3.883121254943934*^9, 
   3.883121289854086*^9, 3.8831214043152122`*^9, 3.8831220219395447`*^9, 
   3.890312770983865*^9, 3.890313100929182*^9},
 CellLabel->
  "Out[2172]=",ExpressionUUID->"d3d5653a-44b3-48d4-b424-4610914680b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"3", "*", 
   RowBox[{"Pi", "/", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.883122087529181*^9, 3.883122096115633*^9}},
 CellLabel->
  "In[2043]:=",ExpressionUUID->"4107fc84-94f2-4f0d-84ab-a83a08c0cc77"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{3.883122097104795*^9, 3.8903127711292458`*^9},
 CellLabel->
  "Out[2043]=",ExpressionUUID->"b4f01bf0-94e9-4eca-839d-7ae41abe77d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "4"]}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}], " ", 
   RowBox[{"Sec", "[", "\[Beta]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881242082769094*^9, 3.8812421145420437`*^9}},
 CellLabel->
  "In[2044]:=",ExpressionUUID->"4b7d080e-44c3-42ea-b0a4-c6de40ab837b"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8812420861922817`*^9, 3.881242115134156*^9}, 
   3.881346991866143*^9, 3.8813483943513947`*^9, 3.881348508905838*^9, 
   3.881841868483946*^9, 3.883122137728108*^9, 3.890312771145896*^9},
 CellLabel->
  "Out[2044]=",ExpressionUUID->"7429c81f-e9dd-45a9-aeef-e7c33cddebbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Clausius", " ", "clayperon", " ", "equation", " ", "for", " ", 
     SubscriptBox["\[Sigma]", "110"]}], "*)"}],
   FontSize->18], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"A", ":=", 
    RowBox[{"TensorProduct", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"e1", "+", "e2"}], 
       RowBox[{"Sqrt", "[", "2", "]"}]], ",", 
      FractionBox[
       RowBox[{"e1", "+", "e2"}], 
       RowBox[{"Sqrt", "[", "2", "]"}]]}], "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"direction", " ", "of", " ", "the", " ", "load"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Q", ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["u", "x"], "2"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], " ", ",", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["u", "x"], "*", 
          SubscriptBox["u", "y"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["u", "z"], "*", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["u", "x"], "*", 
          SubscriptBox["u", "z"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["u", "y"], "*", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["u", "x"], "*", 
          SubscriptBox["u", "y"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["u", "z"], "*", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], " ", ",", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["u", "y"], "2"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], " ", ",", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["u", "y"], "*", 
          SubscriptBox["u", "z"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["u", "x"], "*", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["u", "x"], "*", 
          SubscriptBox["u", "z"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["u", "y"], "*", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["u", "y"], "*", 
          SubscriptBox["u", "z"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["u", "x"], "*", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], " ", ",", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["u", "z"], "2"], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}]}], "}"}]}], 
     "}"}]}], 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "is", " ", "the", " ", "general", " ", "expression", " ", 
     "of", " ", "a", " ", "tensor", " ", "in", " ", "SO", 
     RowBox[{
      RowBox[{"(", "3", ")"}], ".", " ", "It"}], " ", "rotates", " ", "all", 
     " ", "objects", " ", "about", " ", "the", " ", "axis", " ", 
     StyleBox["u",
      FontWeight->"Bold"], " ", "by", " ", "an", " ", "angle", " ", 
     "\[Theta]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"A", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{"Q", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "Determining", " ", "the", " ", "touching", " ", "point", " ", "for", 
      " ", 
      SubscriptBox["\[Sigma]", "110"], " ", "for", " ", "the", " ", 
      "Austenite", " ", "phase"}], "*)"}],
    FontSize->16], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Temp", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "A", "]"}], ".", "Q"}], "]"}], "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "2"], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["u", "x"], "+", 
             SubscriptBox["u", "y"]}], ")"}], "2"]}]}], ")"}]}], "//", 
      "Simplify"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Checking", " ", "that", " ", "we", " ", "have", " ", "the", " ", 
     "correct", " ", "expression", " ", "for", " ", 
     RowBox[{"A", ":", "Q"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<A:Q-(Cos[\[Theta]]+\!\(\*FractionBox[\((1 - Cos[\[Theta]])\), \(2\)]\
\)*(\!\(\*SubscriptBox[\(u\), \(x\)]\)+\!\(\*SubscriptBox[\(u\), \(y\)]\)\!\(\
\*SuperscriptBox[\()\), \(2\)]\))=\>\"", ",", "Temp"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Maximize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "2"], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["u", "x"], "+", 
            SubscriptBox["u", "y"]}], ")"}], "2"]}]}], ",", 
       RowBox[{"0", "<=", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["u", "x"], "2"], "+", 
         SuperscriptBox[
          SubscriptBox["u", "y"], "2"]}], "<=", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       SubscriptBox["u", "x"], ",", 
       SubscriptBox["u", "y"]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "Determining", " ", "the", " ", "touching", " ", "point", " ", "for", 
      " ", 
      SubscriptBox["\[Sigma]", "110"], " ", "for", " ", "the", " ", 
      "MArtensite", " ", "phase"}], "*)"}],
    FontSize->16], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<\!\(\*FractionBox[\(1\), \
\(2\)]\)\!\(\*StyleBox[\"(\",FontSize->24]\)\!\(\*SubscriptBox[\(U\), \
\(I\)]\)(\!\(\*FractionBox[\(\*SubscriptBox[\(e\), \(1\)] + \
\*SubscriptBox[\(e\), \(2\)]\), \
\(\[Sqrt]2\)]\))\!\(\*SuperscriptBox[StyleBox[\")\",FontSize->24], \
\"2\"]\)=\>\"", ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"UI", ".", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"e1", "+", "e2"}], 
            RowBox[{"Sqrt", "[", "2", "]"}]], ")"}]}], ")"}], ".", "UI", ".", 
        
        RowBox[{"(", 
         FractionBox[
          RowBox[{"e1", "+", "e2"}], 
          RowBox[{"Sqrt", "[", "2", "]"}]], ")"}]}]}], "//", "Simplify"}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<\!\(\*FractionBox[\(1\), \
\(2\)]\)\!\(\*StyleBox[\"(\",FontSize->24]\)\!\(\*SubscriptBox[\(U\), \(II\)]\
\)(\!\(\*FractionBox[\(\*SubscriptBox[\(e\), \(1\)] + \*SubscriptBox[\(e\), \
\(2\)]\), \(\[Sqrt]2\)]\))\!\(\*SuperscriptBox[StyleBox[\")\",FontSize->24], \
\"2\"]\)=\>\"", ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"UII", ".", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"e1", "+", "e2"}], 
            RowBox[{"Sqrt", "[", "2", "]"}]], ")"}]}], ")"}], ".", "UII", ".", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"e1", "+", "e2"}], 
          RowBox[{"Sqrt", "[", "2", "]"}]], ")"}]}]}], "//", "Simplify"}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<Checking if A*UI==\!\(\*FractionBox[\(a\), SubscriptBox[\(a\), \
\(0\)]]\)*\!\(\*SqrtBox[RowBox[{\"1\", \"-\", RowBox[{\"Cos\", \"[\", \"\
\[Beta]\", \"]\"}]}],MultilineFunction->None,SurdForm->True]\)A,----->\>\"", 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{"A", ".", "UI"}], "-", 
       RowBox[{
        FractionBox["a", 
         SubscriptBox["a", "0"]], "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "]"}], "*", "A"}]}], "//", 
      "Simplify"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{"Q", ".", 
      RowBox[{"Transpose", "[", "A", "]"}]}], "]"}], "//", "Simplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<A:(\!\(\*SubscriptBox[\(U\), \(I\)]\)-I)=\>\"", ",", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "A", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"UI", "-", 
          RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ")"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.881244783244616*^9, 3.881244816146305*^9}, {
   3.881244854269371*^9, 3.881244862142115*^9}, {3.8812449431365433`*^9, 
   3.8812449702302237`*^9}, {3.881245012687002*^9, 3.881245224760789*^9}, {
   3.881245317489141*^9, 3.881245409565054*^9}, {3.8812456274078693`*^9, 
   3.881245663632607*^9}, {3.8812457101292048`*^9, 3.881245782107373*^9}, {
   3.881245868556406*^9, 3.881245921782802*^9}, {3.8812465448220873`*^9, 
   3.8812465970005827`*^9}, {3.88124687678265*^9, 3.881246925984421*^9}, {
   3.881246975446127*^9, 3.8812470061252317`*^9}, {3.8812474913075857`*^9, 
   3.881247495941368*^9}, 3.8812479784613647`*^9, {3.88124801154093*^9, 
   3.88124803803671*^9}, {3.881248097068709*^9, 3.881248163667691*^9}, {
   3.881248200173285*^9, 3.8812482321153927`*^9}, {3.881248351655451*^9, 
   3.8812483775194397`*^9}, {3.88134440382366*^9, 3.881344459345931*^9}, {
   3.8831226410434513`*^9, 3.883122645542571*^9}, {3.8831231670963497`*^9, 
   3.883123200456394*^9}, {3.883123234145829*^9, 3.883123255127322*^9}, {
   3.883659348015753*^9, 3.8836593913232737`*^9}, {3.88365998044556*^9, 
   3.8836601311917477`*^9}, {3.883660741036509*^9, 3.883660765478025*^9}, {
   3.883661258134156*^9, 3.883661280332079*^9}},
 CellLabel->
  "In[2045]:=",ExpressionUUID->"927b7a3a-ab4b-46d2-aa52-522138ff64eb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"], "0"},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"], "0"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.881244959956789*^9, 3.881244971169394*^9}, {
   3.881245393514352*^9, 3.881245410252685*^9}, {3.881245646519867*^9, 
   3.881245664252371*^9}, {3.881245748403713*^9, 3.881245754667302*^9}, {
   3.881245908774735*^9, 3.881245925908814*^9}, 3.881246928392893*^9, {
   3.881246989713293*^9, 3.8812470068025227`*^9}, 3.8812474973225183`*^9, {
   3.8812480315704403`*^9, 3.8812480386765213`*^9}, 3.8812481054700527`*^9, {
   3.8812481539288807`*^9, 3.8812481643941298`*^9}, {3.881248207893997*^9, 
   3.881248234839066*^9}, 3.881248378212241*^9, {3.881344434868887*^9, 
   3.881344459962633*^9}, 3.881346991894044*^9, 3.881348394377275*^9, 
   3.88134850893254*^9, 3.881841868506318*^9, 3.883122422937849*^9, {
   3.8831231893030367`*^9, 3.883123210789647*^9}, 3.88312325593892*^9, {
   3.883659376432745*^9, 3.883659393148058*^9}, {3.883660123257646*^9, 
   3.883660131807287*^9}, {3.883660746806066*^9, 3.883660766054961*^9}, {
   3.883661277657992*^9, 3.883661280842126*^9}, 3.8903127711717978`*^9},
 CellLabel->
  "Out[2047]//MatrixForm=",ExpressionUUID->"cd9aaeee-5884-49e5-9320-\
a294d9a010c1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        SubsuperscriptBox["u", "x", "2"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        SubscriptBox["u", "x"], " ", 
        SubscriptBox["u", "y"]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        SubscriptBox["u", "z"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        SubscriptBox["u", "y"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        SubscriptBox["u", "x"], " ", 
        SubscriptBox["u", "z"]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        SubscriptBox["u", "x"], " ", 
        SubscriptBox["u", "y"]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        SubscriptBox["u", "z"]}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        SubsuperscriptBox["u", "y", "2"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", 
        SubscriptBox["u", "x"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        SubscriptBox["u", "y"], " ", 
        SubscriptBox["u", "z"]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", 
        SubscriptBox["u", "y"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        SubscriptBox["u", "x"], " ", 
        SubscriptBox["u", "z"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        SubscriptBox["u", "x"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        SubscriptBox["u", "y"], " ", 
        SubscriptBox["u", "z"]}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        SubsuperscriptBox["u", "z", "2"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.881244959956789*^9, 3.881244971169394*^9}, {
   3.881245393514352*^9, 3.881245410252685*^9}, {3.881245646519867*^9, 
   3.881245664252371*^9}, {3.881245748403713*^9, 3.881245754667302*^9}, {
   3.881245908774735*^9, 3.881245925908814*^9}, 3.881246928392893*^9, {
   3.881246989713293*^9, 3.8812470068025227`*^9}, 3.8812474973225183`*^9, {
   3.8812480315704403`*^9, 3.8812480386765213`*^9}, 3.8812481054700527`*^9, {
   3.8812481539288807`*^9, 3.8812481643941298`*^9}, {3.881248207893997*^9, 
   3.881248234839066*^9}, 3.881248378212241*^9, {3.881344434868887*^9, 
   3.881344459962633*^9}, 3.881346991894044*^9, 3.881348394377275*^9, 
   3.88134850893254*^9, 3.881841868506318*^9, 3.883122422937849*^9, {
   3.8831231893030367`*^9, 3.883123210789647*^9}, 3.88312325593892*^9, {
   3.883659376432745*^9, 3.883659393148058*^9}, {3.883660123257646*^9, 
   3.883660131807287*^9}, {3.883660746806066*^9, 3.883660766054961*^9}, {
   3.883661277657992*^9, 3.883661280842126*^9}, 3.890312771173975*^9},
 CellLabel->
  "Out[2048]//MatrixForm=",ExpressionUUID->"5f066e94-7e62-4976-ac4c-\
7028b78d3828"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"A:Q-(Cos[\[Theta]]+\\!\\(\\*FractionBox[\\((1 - Cos[\[Theta]])\
\\), \\(2\\)]\\)*(\\!\\(\\*SubscriptBox[\\(u\\), \
\\(x\\)]\\)+\\!\\(\\*SubscriptBox[\\(u\\), \
\\(y\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "0"}],
  SequenceForm[
  "A:Q-(Cos[\[Theta]]+\!\(\*FractionBox[\((1 - Cos[\[Theta]])\), \(2\)]\)*(\!\
\(\*SubscriptBox[\(u\), \(x\)]\)+\!\(\*SubscriptBox[\(u\), \
\(y\)]\)\!\(\*SuperscriptBox[\()\), \(2\)]\))=", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.883123189344471*^9, 3.8831232108328323`*^9}, 
   3.8831232559807568`*^9, {3.883659376439166*^9, 3.883659393154461*^9}, {
   3.8836601232633543`*^9, 3.883660131814259*^9}, {3.8836607468126297`*^9, 
   3.883660766061984*^9}, {3.883661277669887*^9, 3.88366128084877*^9}, 
   3.890312771175847*^9},
 CellLabel->
  "During evaluation of \
In[2045]:=",ExpressionUUID->"8d2cf52e-7e39-4661-90c3-2c87996dcd58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]", "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["u", "x"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox["27", "32"]}]}], ",", 
     RowBox[{
      SubscriptBox["u", "y"], "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.881244959956789*^9, 3.881244971169394*^9}, {
   3.881245393514352*^9, 3.881245410252685*^9}, {3.881245646519867*^9, 
   3.881245664252371*^9}, {3.881245748403713*^9, 3.881245754667302*^9}, {
   3.881245908774735*^9, 3.881245925908814*^9}, 3.881246928392893*^9, {
   3.881246989713293*^9, 3.8812470068025227`*^9}, 3.8812474973225183`*^9, {
   3.8812480315704403`*^9, 3.8812480386765213`*^9}, 3.8812481054700527`*^9, {
   3.8812481539288807`*^9, 3.8812481643941298`*^9}, {3.881248207893997*^9, 
   3.881248234839066*^9}, 3.881248378212241*^9, {3.881344434868887*^9, 
   3.881344459962633*^9}, 3.881346991894044*^9, 3.881348394377275*^9, 
   3.88134850893254*^9, 3.881841868506318*^9, 3.883122422937849*^9, {
   3.8831231893030367`*^9, 3.883123210789647*^9}, 3.88312325593892*^9, {
   3.883659376432745*^9, 3.883659393148058*^9}, {3.883660123257646*^9, 
   3.883660131807287*^9}, {3.883660746806066*^9, 3.883660766054961*^9}, {
   3.883661277657992*^9, 3.883661280842126*^9}, 3.890312771177579*^9},
 CellLabel->
  "Out[2051]=",ExpressionUUID->"3e133876-cfcc-411c-a9e5-c2f8c594633c"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*FractionBox[\\(1\\), \
\\(2\\)]\\)\\!\\(\\*StyleBox[\\\"(\\\",FontSize->24]\\)\\!\\(\\*SubscriptBox[\
\\(U\\), \\(I\\)]\\)(\\!\\(\\*FractionBox[\\(\\*SubscriptBox[\\(e\\), \
\\(1\\)] + \\*SubscriptBox[\\(e\\), \\(2\\)]\\), \
\\(\[Sqrt]2\\)]\\))\\!\\(\\*SuperscriptBox[StyleBox[\\\")\\\",FontSize->24], \
\\\"2\\\"]\\)=\"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"-", "0.027211642036924187`"}], " ", 
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1.`"}], "+", 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}], ")"}]}]}],
  SequenceForm[
  "\!\(\*FractionBox[\(1\), \
\(2\)]\)\!\(\*StyleBox[\"(\",FontSize->24]\)\!\(\*SubscriptBox[\(U\), \
\(I\)]\)(\!\(\*FractionBox[\(\*SubscriptBox[\(e\), \(1\)] + \
\*SubscriptBox[\(e\), \(2\)]\), \
\(\[Sqrt]2\)]\))\!\(\*SuperscriptBox[StyleBox[\")\",FontSize->24], \
\"2\"]\)=", (-0.027211642036924187`) $CellContext`a^2 (-1. + 
    Cos[$CellContext`\[Beta]])],
  Editable->False]], "Print",
 CellChangeTimes->{{3.883123189344471*^9, 3.8831232108328323`*^9}, 
   3.8831232559807568`*^9, {3.883659376439166*^9, 3.883659393154461*^9}, {
   3.8836601232633543`*^9, 3.883660131814259*^9}, {3.8836607468126297`*^9, 
   3.883660766061984*^9}, {3.883661277669887*^9, 3.88366128084877*^9}, 
   3.890312771178999*^9},
 CellLabel->
  "During evaluation of \
In[2045]:=",ExpressionUUID->"d73e94c9-b51f-4e08-9397-ea8e8806f849"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*FractionBox[\\(1\\), \
\\(2\\)]\\)\\!\\(\\*StyleBox[\\\"(\\\",FontSize->24]\\)\\!\\(\\*SubscriptBox[\
\\(U\\), \\(II\\)]\\)(\\!\\(\\*FractionBox[\\(\\*SubscriptBox[\\(e\\), \
\\(1\\)] + \\*SubscriptBox[\\(e\\), \\(2\\)]\\), \
\\(\[Sqrt]2\\)]\\))\\!\\(\\*SuperscriptBox[StyleBox[\\\")\\\",FontSize->24], \
\\\"2\\\"]\\)=\"\>", "\[InvisibleSpace]", "0.027211642036924187`", " ", 
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
     RowBox[{"Cos", "[", "\[Beta]", "]"}]}], ")"}]}],
  SequenceForm[
  "\!\(\*FractionBox[\(1\), \
\(2\)]\)\!\(\*StyleBox[\"(\",FontSize->24]\)\!\(\*SubscriptBox[\(U\), \(II\)]\
\)(\!\(\*FractionBox[\(\*SubscriptBox[\(e\), \(1\)] + \*SubscriptBox[\(e\), \
\(2\)]\), \(\[Sqrt]2\)]\))\!\(\*SuperscriptBox[StyleBox[\")\",FontSize->24], \
\"2\"]\)=", 
   0.027211642036924187` $CellContext`a^2 (1. + Cos[$CellContext`\[Beta]])],
  Editable->False]], "Print",
 CellChangeTimes->{{3.883123189344471*^9, 3.8831232108328323`*^9}, 
   3.8831232559807568`*^9, {3.883659376439166*^9, 3.883659393154461*^9}, {
   3.8836601232633543`*^9, 3.883660131814259*^9}, {3.8836607468126297`*^9, 
   3.883660766061984*^9}, {3.883661277669887*^9, 3.88366128084877*^9}, 
   3.8903127711811457`*^9},
 CellLabel->
  "During evaluation of \
In[2045]:=",ExpressionUUID->"65f00c7b-9371-4013-b10d-c9d06f7c91b6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Checking if A*UI==\\!\\(\\*FractionBox[\\(a\\), \
SubscriptBox[\\(a\\), \\(0\\)]]\\)*\\!\\(\\*SqrtBox[RowBox[{\\\"1\\\", \
\\\"-\\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \\\"\[Beta]\\\", \
\\\"]\\\"}]}],MultilineFunction->None,SurdForm->True]\\)A,----->\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "Checking if A*UI==\!\(\*FractionBox[\(a\), SubscriptBox[\(a\), \
\(0\)]]\)*\!\(\*SqrtBox[RowBox[{\"1\", \"-\", RowBox[{\"Cos\", \"[\", \"\
\[Beta]\", \"]\"}]}],MultilineFunction->None,SurdForm->True]\)A,----->", {{0.,
    0., 0.}, {0., 0., 0.}, {0., 0., 0.}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.883123189344471*^9, 3.8831232108328323`*^9}, 
   3.8831232559807568`*^9, {3.883659376439166*^9, 3.883659393154461*^9}, {
   3.8836601232633543`*^9, 3.883660131814259*^9}, {3.8836607468126297`*^9, 
   3.883660766061984*^9}, {3.883661277669887*^9, 3.88366128084877*^9}, 
   3.8903127711833467`*^9},
 CellLabel->
  "During evaluation of \
In[2045]:=",ExpressionUUID->"76eefb0d-c1eb-41d9-bede-cbc37d886d3a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]", "2"], "]"}], "2"], " ", 
   SubsuperscriptBox["u", "x", "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]", "2"], "]"}], "2"], " ", 
   SubscriptBox["u", "x"], " ", 
   SubscriptBox["u", "y"]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]", "2"], "]"}], "2"], " ", 
   SubsuperscriptBox["u", "y", "2"]}]}]], "Output",
 CellChangeTimes->{{3.881244959956789*^9, 3.881244971169394*^9}, {
   3.881245393514352*^9, 3.881245410252685*^9}, {3.881245646519867*^9, 
   3.881245664252371*^9}, {3.881245748403713*^9, 3.881245754667302*^9}, {
   3.881245908774735*^9, 3.881245925908814*^9}, 3.881246928392893*^9, {
   3.881246989713293*^9, 3.8812470068025227`*^9}, 3.8812474973225183`*^9, {
   3.8812480315704403`*^9, 3.8812480386765213`*^9}, 3.8812481054700527`*^9, {
   3.8812481539288807`*^9, 3.8812481643941298`*^9}, {3.881248207893997*^9, 
   3.881248234839066*^9}, 3.881248378212241*^9, {3.881344434868887*^9, 
   3.881344459962633*^9}, 3.881346991894044*^9, 3.881348394377275*^9, 
   3.88134850893254*^9, 3.881841868506318*^9, 3.883122422937849*^9, {
   3.8831231893030367`*^9, 3.883123210789647*^9}, 3.88312325593892*^9, {
   3.883659376432745*^9, 3.883659393148058*^9}, {3.883660123257646*^9, 
   3.883660131807287*^9}, {3.883660746806066*^9, 3.883660766054961*^9}, {
   3.883661277657992*^9, 3.883661280842126*^9}, 3.8903127712031097`*^9},
 CellLabel->
  "Out[2055]=",ExpressionUUID->"742dc969-4d8d-46bd-98db-e3f1960ce677"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"A:(\\!\\(\\*SubscriptBox[\\(U\\), \\(I\\)]\\)-I)=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"-", "1.`"}], "+", 
    RowBox[{"0.23328798527538527`", " ", "a", " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}]}]}],
  SequenceForm[
  "A:(\!\(\*SubscriptBox[\(U\), \(I\)]\)-I)=", -1. + 
   0.23328798527538527` $CellContext`a (1 - Cos[$CellContext`\[Beta]])^
     Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.883123189344471*^9, 3.8831232108328323`*^9}, 
   3.8831232559807568`*^9, {3.883659376439166*^9, 3.883659393154461*^9}, {
   3.8836601232633543`*^9, 3.883660131814259*^9}, {3.8836607468126297`*^9, 
   3.883660766061984*^9}, {3.883661277669887*^9, 3.88366128084877*^9}, 
   3.890312771205118*^9},
 CellLabel->
  "During evaluation of \
In[2045]:=",ExpressionUUID->"7fb5c9b2-3e58-47c3-9886-8a2476826af3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Clausius", " ", "clayperon", " ", "equation", " ", "for", " ", 
     SubscriptBox["\[Sigma]", "100"]}], "*)"}],
   FontSize->18], 
  StyleBox["\[IndentingNewLine]",
   FontSize->14], 
  RowBox[{
   StyleBox[
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[StyleBox[\"U\",FontSize->14], \
\"I\"]\)\!\(\*SubscriptBox[\(e\), \(1\)]\)=\>\"", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"UI", ".", "e1"}], "//", "Simplify"}], "//", "MatrixForm"}]}],
      "]"}],
    FontSize->14], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<(\!\(\*SubscriptBox[StyleBox[\"U\",FontSize->14], \
\"I\"]\)\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SuperscriptBox[\()\), \
\(2\)]\)=\>\"", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"UI", ".", "e1"}], ")"}], ".", 
        RowBox[{"(", 
         RowBox[{"UI", ".", "e1"}], ")"}]}], "//", "Simplify"}]}], "]"}],
    FontSize->14], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[StyleBox[\"U\",FontSize->14], \
\"II\"]\)\!\(\*SubscriptBox[\(e\), \(1\)]\)=\>\"", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"UII", ".", "e1"}], "//", "Simplify"}], "//", 
       "MatrixForm"}]}], "]"}],
    FontSize->14], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<(\!\(\*SubscriptBox[StyleBox[\"U\",FontSize->14], \
\"II\"]\)\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SuperscriptBox[\()\), \(2\)]\
\)=\>\"", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"UII", ".", "e1"}], ")"}], ".", 
        RowBox[{"(", 
         RowBox[{"UII", ".", "e1"}], ")"}]}], "//", "Simplify"}]}], "]"}],
    FontSize->14], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<Unit vector along \!\(\*SubscriptBox[\(U\), \
\(I\)]\)\!\(\*SubscriptBox[\(e\), \(1\)]\) is \
---->\!\(\*OverscriptBox[\(\((\*SubscriptBox[\(U\), \(I\)] \*SubscriptBox[\(e\
\), \(1\)])\)\(=\)\), \(^\)]\)\>\"", ",", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"UI", ".", "e1"}], 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"UI", ".", "e1"}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"UI", ".", "e1"}], ")"}]}], "]"}]], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", ">", "0"}], ",", 
         RowBox[{
          SubscriptBox["a", "0"], ">", "0"}]}], "}"}]}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"q1", ":=", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"UI", ".", "e1"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"UI", ".", "e1"}], ")"}], ".", 
         RowBox[{"(", 
          RowBox[{"UI", ".", "e1"}], ")"}]}], "]"}]], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", ">", "0"}], ",", 
        RowBox[{
         SubscriptBox["a", "0"], ">", "0"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"q2", ":=", 
    RowBox[{"Cross", "[", 
     RowBox[{"e3", ",", "q1"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<q1=\>\"", ",", 
     RowBox[{
      RowBox[{"q1", "//", "Simplify"}], "//", "MatrixForm"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<q2=\>\"", ",", 
     RowBox[{
      RowBox[{"q2", "//", "Simplify"}], "//", "MatrixForm"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["Q", "100"], ":=", 
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2", ",", "e3"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\!\(\*SubscriptBox[\(Q\), \(100\)]\)=\>\"", ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["Q", "100"], "//", "MatrixForm"}], "//", "Simplify"}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<Checking Orthogonality of \!\(\*SubscriptBox[\(Q\), \(100\)]\) ,ie, \
\!\(\*SubscriptBox[\(Q\), \(100\)]\).\!\(\*SuperscriptBox[SubscriptBox[\(Q\), \
\(100\)], \(T\)]\)==I--->\>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["Q", "100"], ".", 
        RowBox[{"Transpose", "[", 
         SubscriptBox["Q", "100"], "]"}]}], "//", "MatrixForm"}], "//", 
      "Simplify"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<\!\(\*SubscriptBox[\(F\), \(M\)]\)=\!\(\*SubscriptBox[\(Q\), \
\(100\)]\)\!\(\*SubscriptBox[\(U\), \(I\)]\)=\>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["Q", "100"], "*", "UI"}], "//", "MatrixForm"}], "//", 
      "Simplify"}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{"-", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          FractionBox[
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Sin", "[", "\[Beta]", "]"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SubscriptBox["a", "0"]}]], 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"a", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Sin", "[", "\[Beta]", "]"}]}], ")"}]}], 
            RowBox[{"2", " ", 
             SubscriptBox["a", "0"]}]]}], "0"},
         {
          FractionBox[
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Sin", "[", "\[Beta]", "]"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SubscriptBox["a", "0"]}]], 
          FractionBox[
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Sin", "[", "\[Beta]", "]"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SubscriptBox["a", "0"]}]], "0"},
         {"0", "0", 
          FractionBox["c", 
           SubscriptBox["c", "0"]]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.881264187170179*^9, 3.8812642136165247`*^9}, {
   3.8812646033498*^9, 3.881264716012775*^9}, {3.881265321380224*^9, 
   3.8812654264122477`*^9}, {3.881265465594831*^9, 3.881265485665856*^9}, {
   3.881270008387663*^9, 3.881270080506219*^9}, {3.8812701526903267`*^9, 
   3.881270178184696*^9}, {3.881270212728531*^9, 3.881270249483862*^9}, {
   3.881270284613744*^9, 3.88127029978127*^9}, {3.881344869340554*^9, 
   3.8813449128098392`*^9}, {3.883661965487883*^9, 3.883662055698229*^9}, {
   3.88366209145173*^9, 3.8836621770718517`*^9}, {3.883662210665118*^9, 
   3.883662359682612*^9}, 3.883662787155966*^9, {3.88366282157848*^9, 
   3.883662962380765*^9}, {3.883663182309269*^9, 3.883663220497851*^9}, {
   3.883663312220963*^9, 3.8836634033286123`*^9}, {3.8836635026447487`*^9, 
   3.88366352912164*^9}},
 CellLabel->
  "In[2057]:=",ExpressionUUID->"297d840c-c84d-45b5-9435-eb4232d6528d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[StyleBox[\\\"U\\\",FontSize->14], \
\\\"I\\\"]\\)\\!\\(\\*SubscriptBox[\\(e\\), \\(1\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"0.11664399263769264`", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}]},
        {
         RowBox[{"0.11664399263769264`", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "-", 
            RowBox[{"1.`", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(\*SubscriptBox[StyleBox[\"U\",FontSize->14], \
\"I\"]\)\!\(\*SubscriptBox[\(e\), \(1\)]\)=", 
   MatrixForm[{
    0.11664399263769264` $CellContext`a ((1 - Cos[$CellContext`\[Beta]])^
       Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
     0.11664399263769264` $CellContext`a ((1 - Cos[$CellContext`\[Beta]])^
       Rational[1, 2] - 1. (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
     0}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8836622590939827`*^9, 3.883662288267231*^9}, 
   3.883662361401265*^9, 3.883662788331341*^9, 3.8836629329106617`*^9, 
   3.883662964367083*^9, 3.883663183214467*^9, 3.883663222046772*^9, 
   3.883663326131227*^9, {3.883663380592676*^9, 3.883663404029965*^9}, 
   3.883663530807756*^9, 3.890312771219851*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"0ce37035-44c8-4909-8948-8b20aabb0304"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(\\!\\(\\*SubscriptBox[StyleBox[\\\"U\\\",FontSize->14], \\\"I\
\\\"]\\)\\!\\(\\*SubscriptBox[\\(e\\), \
\\(1\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"0.054423284073848374`", " ", 
    SuperscriptBox["a", "2"]}]}],
  SequenceForm[
  "(\!\(\*SubscriptBox[StyleBox[\"U\",FontSize->14], \
\"I\"]\)\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SuperscriptBox[\()\), \
\(2\)]\)=", 0.054423284073848374` $CellContext`a^2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8836622590939827`*^9, 3.883662288267231*^9}, 
   3.883662361401265*^9, 3.883662788331341*^9, 3.8836629329106617`*^9, 
   3.883662964367083*^9, 3.883663183214467*^9, 3.883663222046772*^9, 
   3.883663326131227*^9, {3.883663380592676*^9, 3.883663404029965*^9}, 
   3.883663530807756*^9, 3.8903127712219257`*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"77038bcb-6cc1-4994-93d6-110ec813b387"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[StyleBox[\\\"U\\\",FontSize->14], \\\"II\
\\\"]\\)\\!\\(\\*SubscriptBox[\\(e\\), \\(1\\)]\\)=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"0.11664399263769264`", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", "0.11664399263769264`"}], " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "-", 
            RowBox[{"1.`", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(\*SubscriptBox[StyleBox[\"U\",FontSize->14], \
\"II\"]\)\!\(\*SubscriptBox[\(e\), \(1\)]\)=", 
   MatrixForm[{
    0.11664399263769264` $CellContext`a ((1 - Cos[$CellContext`\[Beta]])^
       Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^
       Rational[1, 2]), (-0.11664399263769264`) $CellContext`a ((1 - 
        Cos[$CellContext`\[Beta]])^Rational[1, 2] - 
      1. (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8836622590939827`*^9, 3.883662288267231*^9}, 
   3.883662361401265*^9, 3.883662788331341*^9, 3.8836629329106617`*^9, 
   3.883662964367083*^9, 3.883663183214467*^9, 3.883663222046772*^9, 
   3.883663326131227*^9, {3.883663380592676*^9, 3.883663404029965*^9}, 
   3.883663530807756*^9, 3.890312771224249*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"16fc522d-f8cd-437f-b68e-8dfcf11e2fd4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(\\!\\(\\*SubscriptBox[StyleBox[\\\"U\\\",FontSize->14], \
\\\"II\\\"]\\)\\!\\(\\*SubscriptBox[\\(e\\), \
\\(1\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"0.054423284073848374`", " ", 
    SuperscriptBox["a", "2"]}]}],
  SequenceForm[
  "(\!\(\*SubscriptBox[StyleBox[\"U\",FontSize->14], \
\"II\"]\)\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SuperscriptBox[\()\), \(2\)]\
\)=", 0.054423284073848374` $CellContext`a^2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8836622590939827`*^9, 3.883662288267231*^9}, 
   3.883662361401265*^9, 3.883662788331341*^9, 3.8836629329106617`*^9, 
   3.883662964367083*^9, 3.883663183214467*^9, 3.883663222046772*^9, 
   3.883663326131227*^9, {3.883663380592676*^9, 3.883663404029965*^9}, 
   3.883663530807756*^9, 3.8903127712259283`*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"02b886ce-ed04-48dc-bfbb-eec0f00ced17"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Unit vector along \\!\\(\\*SubscriptBox[\\(U\\), \
\\(I\\)]\\)\\!\\(\\*SubscriptBox[\\(e\\), \\(1\\)]\\) is \
---->\\!\\(\\*OverscriptBox[\\(\\((\\*SubscriptBox[\\(U\\), \\(I\\)] \
\\*SubscriptBox[\\(e\\), \\(1\\)])\\)\\(=\\)\\), \\(^\\)]\\)\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.5`", " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}], ",", 
     RowBox[{"0.5`", " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "-", 
        RowBox[{"1.`", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}], ",", "0"}], 
    "}"}]}],
  SequenceForm[
  "Unit vector along \!\(\*SubscriptBox[\(U\), \(I\)]\)\!\(\*SubscriptBox[\(e\
\), \(1\)]\) is ---->\!\(\*OverscriptBox[\(\((\*SubscriptBox[\(U\), \(I\)] \
\*SubscriptBox[\(e\), \(1\)])\)\(=\)\), \(^\)]\)", {
   0.5 ((1 - Cos[$CellContext`\[Beta]])^
      Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
    0.5 ((1 - Cos[$CellContext`\[Beta]])^Rational[1, 2] - 
     1. (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8836622590939827`*^9, 3.883662288267231*^9}, 
   3.883662361401265*^9, 3.883662788331341*^9, 3.8836629329106617`*^9, 
   3.883662964367083*^9, 3.883663183214467*^9, 3.883663222046772*^9, 
   3.883663326131227*^9, {3.883663380592676*^9, 3.883663404029965*^9}, 
   3.883663530807756*^9, 3.890312771227438*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"17b3cd41-b473-477a-8102-a9c229f601bf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"q1=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}]},
        {
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "-", 
            RowBox[{"1.`", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["q1=", 
   MatrixForm[{
    0.5 ((1 - Cos[$CellContext`\[Beta]])^
       Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
     0.5 ((1 - Cos[$CellContext`\[Beta]])^Rational[1, 2] - 
      1. (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8836622590939827`*^9, 3.883662288267231*^9}, 
   3.883662361401265*^9, 3.883662788331341*^9, 3.8836629329106617`*^9, 
   3.883662964367083*^9, 3.883663183214467*^9, 3.883663222046772*^9, 
   3.883663326131227*^9, {3.883663380592676*^9, 3.883663404029965*^9}, 
   3.883663530807756*^9, 3.890312771229166*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"b93d9e4d-9678-4285-a0fa-e081c297a8f5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"q2=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.5`"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
          RowBox[{"0.5`", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}]}]},
        {
         RowBox[{
          RowBox[{"0.5`", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
          RowBox[{"0.5`", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}]}]},
        {"0.`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["q2=", 
   MatrixForm[{(-0.5) (1 - Cos[$CellContext`\[Beta]])^Rational[1, 2] + 
     0.5 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2], 
     0.5 (1 - Cos[$CellContext`\[Beta]])^Rational[1, 2] + 
     0.5 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2], 0.}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8836622590939827`*^9, 3.883662288267231*^9}, 
   3.883662361401265*^9, 3.883662788331341*^9, 3.8836629329106617`*^9, 
   3.883662964367083*^9, 3.883663183214467*^9, 3.883663222046772*^9, 
   3.883663326131227*^9, {3.883663380592676*^9, 3.883663404029965*^9}, 
   3.883663530807756*^9, 3.8903127712308197`*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"6dc96bc7-46e2-4944-a3fc-7ebc5485448b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(100\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"0.5`", " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}]}], 
        RowBox[{"0.5`", " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "-", 
           RowBox[{"1.`", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}], "0"},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.5`"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
         RowBox[{"0.5`", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}]}], 
        RowBox[{
         RowBox[{"0.5`", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], "+", 
         RowBox[{"0.5`", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}]}], "0.`"},
       {"0", "0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(Q\), \(100\)]\)=", 
   MatrixForm[{{
     0.5 ((1 - Cos[$CellContext`\[Beta]])^
        Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
      0.5 ((1 - Cos[$CellContext`\[Beta]])^Rational[1, 2] - 
       1. (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2]), 
      0}, {(-0.5) (1 - Cos[$CellContext`\[Beta]])^Rational[1, 2] + 
      0.5 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2], 
      0.5 (1 - Cos[$CellContext`\[Beta]])^Rational[1, 2] + 
      0.5 (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2], 0.}, {0, 0, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8836622590939827`*^9, 3.883662288267231*^9}, 
   3.883662361401265*^9, 3.883662788331341*^9, 3.8836629329106617`*^9, 
   3.883662964367083*^9, 3.883663183214467*^9, 3.883663222046772*^9, 
   3.883663326131227*^9, {3.883663380592676*^9, 3.883663404029965*^9}, 
   3.883663530807756*^9, 3.890312771232399*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"bd621d28-4474-45b2-83e2-969dee5ad022"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Checking Orthogonality of \\!\\(\\*SubscriptBox[\\(Q\\), \
\\(100\\)]\\) ,ie, \\!\\(\\*SubscriptBox[\\(Q\\), \
\\(100\\)]\\).\\!\\(\\*SuperscriptBox[SubscriptBox[\\(Q\\), \\(100\\)], \
\\(T\\)]\\)==I--->\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.`", "0.`", "0.`"},
       {"0.`", "1.`", "0.`"},
       {"0.`", "0.`", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "Checking Orthogonality of \!\(\*SubscriptBox[\(Q\), \(100\)]\) ,ie, \
\!\(\*SubscriptBox[\(Q\), \(100\)]\).\!\(\*SuperscriptBox[SubscriptBox[\(Q\), \
\(100\)], \(T\)]\)==I--->", 
   MatrixForm[{{1., 0., 0.}, {0., 1., 0.}, {0., 0., 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8836622590939827`*^9, 3.883662288267231*^9}, 
   3.883662361401265*^9, 3.883662788331341*^9, 3.8836629329106617`*^9, 
   3.883662964367083*^9, 3.883663183214467*^9, 3.883663222046772*^9, 
   3.883663326131227*^9, {3.883663380592676*^9, 3.883663404029965*^9}, 
   3.883663530807756*^9, 3.8903127712519197`*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"7bee7d6e-eef4-480f-8f35-671f7668c1b3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(F\\), \
\\(M\\)]\\)=\\!\\(\\*SubscriptBox[\\(Q\\), \
\\(100\\)]\\)\\!\\(\\*SubscriptBox[\\(U\\), \\(I\\)]\\)=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"0.05832199631884632`", " ", "a", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}], "2"]}], 
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"0.11664399263769264`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.11664399263769264`", " ", 
            SqrtBox[
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]]}]}], ")"}]}], "0"},
       {
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.11664399263769264`"}], "+", 
           RowBox[{"0.11664399263769264`", " ", 
            SqrtBox[
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Beta]", "]"}], "2"]]}]}], ")"}]}], 
        RowBox[{"0.05832199631884632`", " ", "a", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]], "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}]]}], ")"}], "2"]}], "0.`"},
       {"0", "0", 
        FractionBox["c", 
         SubscriptBox["c", "0"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(F\), \(M\)]\)=\!\(\*SubscriptBox[\(Q\), \
\(100\)]\)\!\(\*SubscriptBox[\(U\), \(I\)]\)=", 
   MatrixForm[{{
     0.05832199631884632 $CellContext`a ((1 - Cos[$CellContext`\[Beta]])^
         Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^
         Rational[1, 2])^2, $CellContext`a (0.11664399263769264` - 
       0.11664399263769264` (Sin[$CellContext`\[Beta]]^2)^Rational[1, 2]), 
      0}, {$CellContext`a (-0.11664399263769264` + 
       0.11664399263769264` (Sin[$CellContext`\[Beta]]^2)^Rational[1, 2]), 
      0.05832199631884632 $CellContext`a ((1 - Cos[$CellContext`\[Beta]])^
         Rational[1, 2] + (1 + Cos[$CellContext`\[Beta]])^Rational[1, 2])^2, 
      0.}, {0, 0, $CellContext`c/Subscript[$CellContext`c, 0]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8836622590939827`*^9, 3.883662288267231*^9}, 
   3.883662361401265*^9, 3.883662788331341*^9, 3.8836629329106617`*^9, 
   3.883662964367083*^9, 3.883663183214467*^9, 3.883663222046772*^9, 
   3.883663326131227*^9, {3.883663380592676*^9, 3.883663404029965*^9}, 
   3.883663530807756*^9, 3.8903127712538433`*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"fcee2a73-fde7-41c7-91e9-37edfe1b0b2a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Solving", " ", "the", " ", "System", " ", "of", " ", "equations"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     FractionBox["a", 
      SubscriptBox["a", "0"]], " ", "is", " ", "abbreviated", " ", "as", " ", 
     
     RowBox[{"x", ".", " ", "\[Beta]"}], " ", "is", " ", "replaced", " ", 
     "by", " ", "b", " ", "and", " ", 
     SubscriptBox["\[Eta]", "M"]}], "-", 
    RowBox[{
     SubscriptBox["\[Eta]", "A"], " ", "is", " ", "replaced", " ", "by", " ", 
     "n"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"K1", ":=", 
    RowBox[{
     RowBox[{"-", "0.3785"}], "*", 
     SuperscriptBox["10", "8"]}]}], "\[IndentingNewLine]", 
   RowBox[{"K2", ":=", 
    RowBox[{"1.19695", "*", 
     SuperscriptBox["10", "8"]}]}], "\[IndentingNewLine]", 
   RowBox[{"K3", ":=", 
    RowBox[{"1.53824", "*", 
     SuperscriptBox["10", "8"]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eqns1", "[", 
     RowBox[{"n_", ",", 
      RowBox[{
       SubscriptBox["a", "p"], "_"}], ",", "b_"}], "]"}], ":=", 
    RowBox[{"n", "-", 
     RowBox[{"K1", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["a", "p"], "*", 
         RowBox[{"Sqrt", "[", "2", "]"}], "*", 
         RowBox[{"Sin", "[", 
          FractionBox["b", "2"], "]"}]}], "-", "1"}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eqns2", "[", 
     RowBox[{"n_", ",", 
      RowBox[{
       SubscriptBox["a", "p"], "_"}], ",", "b_"}], "]"}], ":=", 
    RowBox[{"n", "+", 
     RowBox[{"K2", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           SubscriptBox["a", "p"], "2"]], "*", 
         FractionBox["1", 
          RowBox[{"Sin", "[", "b", "]"}]]}], "-", "1"}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eqns3", "[", 
     RowBox[{"n_", ",", 
      RowBox[{
       SubscriptBox["a", "p"], "_"}], ",", "b_"}], "]"}], ":=", 
    RowBox[{"n", "-", 
     RowBox[{"K3", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["a", "p"], "*", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Sin", "[", "b", "]"}]}], ")"}], "2"]}], "-", "1"}], 
       ")"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"z", "-", 
        RowBox[{"K1", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "*", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "y", "]"}]}], "]"}]}], "-", "1"}], 
          ")"}]}]}], "==", "0"}], "&&", 
      RowBox[{
       RowBox[{"z", "+", 
        RowBox[{"K2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["x", "2"]], "*", 
            FractionBox["1", 
             RowBox[{"Sin", "[", "y", "]"}]]}], "-", "1"}], ")"}]}]}], "==", 
       "0"}], "&&", 
      RowBox[{
       RowBox[{"z", "-", 
        RowBox[{"K3", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "*", 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Sin", "[", "y", "]"}]}], ")"}], "2"]}], "-", "1"}], 
          ")"}]}]}], "==", "0"}], "&&", 
      RowBox[{"0", "<=", "y", "<=", 
       RowBox[{"2", "*", "Pi"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "Reals"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.88134492417308*^9, 3.881344963724988*^9}, {
   3.88134637387433*^9, 3.8813464569231777`*^9}, {3.881346499746573*^9, 
   3.881346587858713*^9}, {3.8813466249547567`*^9, 3.881346736367753*^9}, {
   3.8813468436298733`*^9, 3.881346909368698*^9}, {3.88134697260187*^9, 
   3.8813470278691072`*^9}, {3.881347689938294*^9, 3.881347696888174*^9}, {
   3.881347756941765*^9, 3.8813477985969954`*^9}, {3.881348337392087*^9, 
   3.881348368581636*^9}, {3.881348485286255*^9, 3.881348502485632*^9}, {
   3.8813489713155622`*^9, 3.8813489932064*^9}, {3.8813493685684633`*^9, 
   3.88134939443425*^9}, 3.8813501815646276`*^9, {3.883130375056315*^9, 
   3.883130387339429*^9}, {3.883130472761285*^9, 3.883130484726912*^9}, {
   3.883130624372838*^9, 3.883130624544158*^9}},
 CellLabel->
  "In[2070]:=",ExpressionUUID->"7923d041-4019-4405-b320-97bbd5dfbb50"],

Cell[BoxData[
 TemplateBox[{
  "NSolve", "ratnz", 
   "\"NSolve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 2076, 53, 18288612828343996680, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.881348369600277*^9, 3.881348394518325*^9}, {
   3.881348503738806*^9, 3.8813485090943403`*^9}, 3.881349019981175*^9, {
   3.881349381566613*^9, 3.881349395215014*^9}, 3.881350182847681*^9, 
   3.881841868745508*^9, 3.890312771352105*^9},
 CellLabel->
  "During evaluation of \
In[2070]:=",ExpressionUUID->"120ec882-d9d1-448c-892e-16f841e14a5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "1.`"}], ",", 
     RowBox[{"y", "\[Rule]", "1.5707963267948966`"}], ",", 
     RowBox[{"z", "\[Rule]", "7.450580596923828`*^-9"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "1.3263767875756005`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.6963690752573387`"}], ",", 
     RowBox[{"z", "\[Rule]", "1.3625967525893018`*^7"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8813467461257563`*^9, {3.8813468975238743`*^9, 3.881346910290653*^9}, {
   3.881346981269823*^9, 3.8813470288307323`*^9}, 3.881347750160118*^9, 
   3.881348313005357*^9, {3.881348362450136*^9, 3.881348394525342*^9}, {
   3.881348503753085*^9, 3.881348509103113*^9}, 3.8813490199908257`*^9, {
   3.881349381577755*^9, 3.881349395225906*^9}, 3.8813501828603287`*^9, 
   3.881841868766464*^9, 3.890312771358141*^9},
 CellLabel->
  "Out[2076]=",ExpressionUUID->"c77ab817-1760-4a95-b608-a166bb075c84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "16218.732487944388"}], "-", 
  RowBox[{"K1", "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.3213696495211946", "*", 
      RowBox[{"Sqrt", "[", "2", "]"}], "*", 
      RowBox[{"Sin", "[", 
       FractionBox["0.6125456040075239", "2"], "]"}]}], "-", "1"}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.881348469264473*^9, {3.881348512985772*^9, 3.881348645705378*^9}, {
   3.881348893718959*^9, 3.8813489186504498`*^9}, {3.8813490288181562`*^9, 
   3.8813490832097*^9}, {3.8813494034982557`*^9, 3.881349425841103*^9}},
 CellLabel->
  "In[2077]:=",ExpressionUUID->"c1dc6fbd-512c-4350-809b-d7b6f3487c6a"],

Cell[BoxData[
 RowBox[{"-", "1.6540553178482428`*^7"}]], "Output",
 CellChangeTimes->{
  3.881348509114238*^9, 3.8813485587023773`*^9, {3.881348600421755*^9, 
   3.8813486143433332`*^9}, 3.8813486468160686`*^9, 3.881348919762867*^9, 
   3.881349085741708*^9, 3.881349426824855*^9, 3.88184186877608*^9, 
   3.890312771363761*^9},
 CellLabel->
  "Out[2077]=",ExpressionUUID->"42de13f7-23d5-4b3e-9724-1a5fa4e156c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.5707963267948966", "-", 
  FractionBox["Pi", "2"]}]], "Input",
 CellChangeTimes->{{3.881350206831749*^9, 3.881350212434536*^9}},
 CellLabel->
  "In[2078]:=",ExpressionUUID->"b1ecac4b-79a5-48c1-a40e-58f57471a23f"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.881350213164402*^9, 3.881841868795455*^9, 
  3.89031277140259*^9},
 CellLabel->
  "Out[2078]=",ExpressionUUID->"267ef8a7-2665-40c4-81c0-f924fbb2eb45"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   StyleBox[
    RowBox[{
    "Extracting", " ", "the", " ", "Stress", " ", "vs", " ", "Strain", " ", 
     "data", " ", "for", " ", "LESCO"}],
    FontSize->24,
    FontColor->RGBColor[0.5, 0, 0.5]], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzsvft3FNeZ95t1znvWOj+e/wA1QuiCbSAYrEAAAzbBNiDhGHACOAmXTACv
IPwisGNgYkiCyBjZmQhnIjETwxsgM5YyY/CMRWKJN8ITxIxRsgx+QdhINlix
uEmAJYwkUt/T1de67F21q7uru9X6flYqumD1rtr72fvZ+6nnEli54cnv/l9f
+tKX/uf/G/y/J7+zZdZzz33nha//f8EfFn//f679m++vWf3Y9zet+Zs1z5Wu
/L+Dv3z5//nSlx78H1/6UvB/XwIhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEKIA4FReaFrdF7wMn6NfB8YZfg5col+Z7scPieQZ/4s
ts/22T7bZ/tsn+2zfbbP9tk+22f7bD8V7ZORQ0KyYpEXkawGDJfS57F9ts/2
2T7bZ/tsn+2zfbbP9tk+22f7SbZPRg5S+bHa1Ay/s/5NSIbyxLIm+11glF0W
2T7bZ/tsn+2zfbbP9tk+22f7bJ/ts/1k2icjh9j4i2TQ6TLKW55APt0+zyp/
bJ/ts322z/bZPttn+2yf7bN9ts/22X6S7ZORg0kGLHIQMPxss6MJ5E8kX6LL
Zl9j+2yf7bN9ts/22T7bZ/tsn+2zfbbP9lPQPslNhHLgJBdusqjwWbbfs322
z/bZPttn+2yf7bN9ts/22T7bZ/tpap/kBtYxdpQNhX8LSL4P/ez0eWyf7bN9
ts/22T7bZ/tsn+2zfbbP9tl+GtonuYFx3J1kwVFunGxtLn/L9tk+22f7bJ/t
s322z/bZPttn+2yf7aezfZIbiGTAVd4c/nvZf+N4sX22z/bZPttn+2yf7bN9
ts/22T7bZ/tpap/kBk5ypfpvNnmzylWe+e+t8sr22T7bZ/tsn+2zfbbP9tk+
22f7bJ/tp6t9khvExjhPMNZ5mR1vqwzr92iU0+g9E/9Q6X+Ogb+o9D/HwF9U
+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
bXzF4TPDYz4Vz1Q34fIAd8kk9Sjt/0bk+TY3sZ4jbGfyvJE83sF96+ndeETm
O5dnuGz/Nhlr6j+hLYOMcIbQXf893OdkvxCuPwGMX/cmrifRstb3EY6//hKe
eWisfP7qXxeO7D0t8YZ2uSFsyxCs//mzfogTPYkl69T6zuHotnKME+hf01VY
SXsGGSb0o/PtH2HpBMH7etP6H8C4sp+g6fKdxJsa7MKJn38HU2V7MlH7I9ae
cQvt9S/gcf1dg+P+P5lxuYPL7/xE+D7DPP7BNub9AA3nb3G/TFKK6/yPfCW5
gdCGLdAFIxbtLPY+VmTrD9u6Pyry7iwayzluIxpvZfrmCckCbjVi4/3yNUa8
/hShrLY9Jc3r58S3tsfPibb2R+yelnhm8Cz2LZkgWf8fx87WnuQ+X7uGUz/7
Jr7stA+jfwYZDgRlubX6m+H4DpvvnXH+6Gfml9GaoB3QzBB6T9didWmh8L2c
rf2RuPYPXETjdovdVDI2+bNeStg+G2YIPS0vYY7j+Ee+Ly7H9rcvghlDSapw
nf+jRmr8QW4itVnRnhGhF82bSuX5cSX9lb/sELozfeuEZAWR2idu78tM82kK
NjZeS+E99KPjjQ2YJpqvI3FPSxJgAJcOrcZ9kvV/THktLqbiBaN+Dtz9dZP9
zaR/iuifQbKcgQ9Rv36GqTaG9Jq4AW91p7IAcTi3zd8ulOS2Gclrvz4u6xzG
xagfi5ej7ryXuDkZ/WivXW5+nyBtfwbW/8tHzBVKUoLSnnNEn29zC+k7Usvv
Ri79aKuaK+6XPMn3o8L1S1KpoQkZvnShfuUE+57JyUdjVCk2N/Wm+D560bZn
McZZ22fNPqLC7SZsmRSQrP9jMWfPn1PnL611obFipvDcEaB/BslmtI9xRD8z
y9Z30/r7Faw/ctmfOIOed/HTsvHO7Y8ke0bUlqGkfydgae3Z1PlKDIT92pT0
v27TeOMj+mmQpHFff0b6+Ta3iI2rdW2hP06EQXTWLXaOxxT8G+uxEhIl7ONk
1Cs2/WJbf0qxJeX2jCAD72Nv2Thz+8yfQVy5hxtHnnXIA/MAVhz6JLVN9r2L
nbMK7f6ytGeQbEXgWyR6FxT9et/Kel/9WLXut/CcodaxTf+MFHuG9jGOrpsp
P99Z9G/+7N1ou5tKK5OGgfd2x+JO3PX/DDz75scpbJ+MRNzWn6j8kdzA9Wye
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
bGMkZjZNj0iygOvBdX2ai/wLfp5djbMZtcdp+Lzpx/j6goUo29AAsUeCvu5/
Il9/Hdd/fd0fELY72Pup6/xzWv/lc9NIl8n/QWZXsl1p9PsaatqMEkf9Lzr/
TcDq+k/Tc4MkJ1CV/+QYQm/ryygvMsixqFa1KOZEUEfZ6V7HhWwaKfbTuPtn
7C0fL2h/LKZv/h1ueFmrB85i35IJgucvDH7W7719VgKo9v/IRbdnPOVR/oZJ
vIl2Gx1N/4i/XfkYJiYz/wq/iiUb9uA373bwvSER0IPjm0od5ci+/uj1TTzE
m1jiot3jTVSxx8qo6x+Zn1bYRur8/C7zLyffK2Yvuu/PIwnsP+JX1K6RjjxZ
7ahbUGS/B8X5V7LJagvUMHC5GT9bNRsljs9fgElLXk39fotkJ1+0YNuDoxXl
Py5/BcsOD4PcjjfjPoWezx+y/d9Q/N2Yq/4Tr/9KdnpD7S5P8z+dOqWzFmUJ
PH9m8siS4Yqq/CdOUDdefB3fEuTdNbc9AbPmL0TZgkfxlUKX/1Zwv/F7LcTU
9b/F5VRtIbQuHKuYKcyzM+bxV/H+3QQa6n4T6yeK8uOMx5M1f4KfHmAq/ep7
PZusZtBW38Rd/rI93uQurp4+iK1lkwVyrPtgLMTqDZXYUrk5eFWiYuVizHuo
WOH5g/vZshdx+MwNhXcIZOQQ989wjKs2XV7iTTTcPb0bj1jOZKk5VXnIZWrT
P7J9rYc1RdZftGekF7ccdtL9R3yvHpX94pmrsfvwu+j0LXe52Z5hbd9t/pWY
cunq757sfrTy5w9g3NJfoYMKIOcx1qnwIv8Ttv4B2e/RGV/3lXP7u+7/9Li1
p9Q/T9CX7npNw52mLZjg0P+y9os3NKLfn86009+IjWMT0H/3b8HxO1xciBqq
8p8wd/8U920w2Usmo+z7VTjQ+B4+tPlU6X5aXWhvO443arZitTGfZp74HgOm
+JivYP3Ry0n2jM4gPjm0GvcZ51m0/bzHsLPVi3+0kQFcCn7uONH8Tepz3RGt
Gykd72GPub6JLXeRUP6C+qwuS+0Z2jW01X4X00Txk6VrsLfpI/SJ1IXWj65T
9di1bFrMBiJ9/lAOmJPwmM2R5CwSm4BTrmcv9gytA4dWTHI4kyWH1teND08f
w+vblphr/bnqHye7Ztifub3tDzjyy81YFDwvOq2/tvVnIWuypJc7OFO90C6v
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
bPs1F1WnFeeCwZ8uFbnevOFe37Bg2WGkwmvP+Pky2+iIzwdap6Bv0iYbfhO2
YdTv3YrVcyeG3nnb5a8AE8ff75x3l/tjEiMeeyzKMS1ef7z6v15F44b4mpkx
/4wk9oiyeBPmA80xBrvRVr8Lq2aOU9a/QvnyEO9qzHfkOv8oW8QVDbeOhGum
edkb6TJWvOEY3KrnZB9e133v9VpV5r+7XtPwRdMWTHDof/H8H42Hdpz0KeeU
gKE/YoflfKW0/t2/Bc13mKuYqKEq/9nKUCQfqDC/zIPbcOILxbnQfSgWtyKe
Z37Uao2i275nCedzrP3JO3AqBYuPabwdfAVHLmb7udQH2OTDlGZ7xuBNdHV2
oLPzY3T1DiT0EVpfB949/DIqFky22SnCz1WAL8/9LnbuP4a2rj4MGM9etue3
zL+F9F8e2dy07QVl/u7xn73mjQvur4/G99fufrkpfhah/HuzZww1C+qbyNZ/
njnTx5VmvFq5GVsqd6H+QupqpUftGqsjdg0n/SvUP3nfxIHLagYNa+0cx/lH
2SIqdB/GMwEF/W+95tWgfdgdSSMxkynf/w2a4k3c5n+xSl4oPf/eGIf+l/y+
uCKNeTb7G7HRkrdU5fkLVzb4E+NPchJV+c9O7qH70LdRIJwbAYzf8DZUU5IO
nYzUSZH6bQX328rx3V4Jr3EBp/YD38bh7uQNGtZ1xKaT8rJ5vNOBuL5JrN+E
sU1FKE9bvImG283PY3Ko3clYd+QzT3+rx3Y3hGK7x0rGP4CSWevxi6aP0GfY
g4Te90mfPy+t8SZa/yX81xvVqFgwBfmFlTieU7n5B3Hz8gc41ViPAzVV2LZp
LVaUPYFZD72AZt9eptzGmZql4fOPaWwTrVEvqdeaZ5cVU/4Mr/nJDLmT0uKf
4Sr/3uNNim3zT7L+p2xO3UNf53/it3rO7pWL8bWHikO6suShR1G+7Fns2NuA
dztu+16XLDn60HW6EQeqXsS6ZQsxK5rruLAU88qWY/2Lf4cDR0+h00O+YxOx
HOPjsPR11XhVdbT+D3Fsz7cxVXQmdPIbz1OvsSiMN5HNv4zZM4Ky2BGRxe9E
ZDEvLIuLdFmsGQ6yKEfrC+qp+urwOwO9hkzaXoarMIjeoJ5pbWww65nSHzjo
0/OoKy9SzI1suPS6gLeH2yj22P0zUrL/M/v/us1/1/omOtpHOLDkfnn/y+Z/
Gu1M2oUaPO6o/0XP/wBWHPTrHbKRVO9/SKZQlf/s5DZObJsumRczse2E6v54
KGQXGePQF4FR04Ofd8un5xjC5f3fdPTnD6QojszaVzJdNHJxrtdq/D4Q021p
jEXUPsah5eMj7Zdj74W7an/Wfw5vVa3GrEKH8c+bgqerfo/LA3YlN2j1zzA9
v6V/fMkvdw93uk6hYc8GlEXi0UPtFw33WoMaBns+ROvRX+GnlatQFjpfWsYn
eE57/Fu1OOPLfngIvS0/DNcLsa07i7GvM5HOjdc3Ea0xYvlLIN+6HiM4JezD
WrzJY30TrQvNr76ILZWb8YP9pyGfRYL8GVL5TzB/hkLsc/L5M8L1N+oqy/Fl
Q3v542di4cJHMNWY7zdvIuat/Xs0X842L/E7uNSyD5vLwj5l0vUn2qeFs7G6
qgFtV9TWyBiGmmn+vR+8iystu0O1h5XGf5S3OWLz/XGaf2mvnXMvIouRGrd5
Bllc8KhNFh9b+3M0X8o2WZRxD/0WPRW6skBPDd4I65ndVj0TlY2Qnqlz0DOD
+GT/8tg+1XX+xX43H6+cSaGfU1pwyJ+R1P5PkD/DYf6r1SEfwl8OrkShtP8l
839sBRr702HQ0NB/rCJmu1c5f4SuMStx+DO/jYB+7H9IplCV/6zk3n/HahVZ
nyF/TjXOKL+eGcAFS20Te37Up7DPR1vdkOV9ir391NRXss1ZyVoycon7ygjz
4wr7K33xJn89W41HovegpI/u4HLTHnzroUKxzojZMmZg/RsfQha9EvNfdvIR
9MV/uQ9dpxqw5/tlpr1v7CqszPg+MSEGu3H27VpsX/m46XwZvgIoLl2CzdW/
RuPpDvQO+bXn0DDQeRBrJowWjmdAfz+RkD73EHsce/ZE1rePcXjZA6G/L1ba
9xm4WIsnQ/JUEKoHJ89X12ur1SKXfz3PvYd4k6jPk+TzTOtPMnNKu44z+ysw
p9DYxngs2nUcV6Kd1vchGncuwjhj+4WP4rnDHwRnYObR+j7Abyoedewv2djk
T1yE7W9+JF3bbETsGaHPvG8jGn17txzcS7e+jEVF9tpRYv2j+4iqxWQp5wPV
+yyd9U20GxFZDBjmU1AWq4KyOBjuZ80ii6HnL3wkJItZmxlQC+up6qiesvZz
YYbsGUE9cyaoZ/5WomdKSpdiy55f45iuZwYV5Pyzw3hmjLf5N3rU/fjG/ovD
zM+mx+SXl7r9n8We4bL+K/sd3ngT60skNeik13xUn02HnekOzlYvcNH/9ue/
b+2buOHrffm1/yGZQlX2sxHtfA2eyBPNjclYXX/JwydZ9qyitdpn2bb6Htvb
T00NDfNnitpx+H2e5HvB2hQQ/T5r/XyM2O3n7s+fLnvGNTRvmh5v320fql1D
655vxvdX0nd0E/B07VnH/X403kRp/FNhzzD46o526v/gPnH4xJvovhjn0FS7
GeWCmgeBUeMw6ztV+M27HUjLa5O7bdhbPt5h/icRb2K0Z7jKn34lEG9iyG2h
9h4rSnAeVUbm0agHse6IU6blXum+1i7/Xv0zFHIcRH+f6JlTXwN2fz18Noz1
/2hMrvgP3LDKmHYRh1c8aGl/PMqr3kVvBg8jWs+7+GnZ+CT1T/DMvFvxOUw5
xktR0XjVx6cbwKVDq3Gfkv7V54hazVZrvVbH/klbvMk1nIzIYrx9mSx2xGQx
/vy6LJ7AzSw6GIdiH6MxJU7yp+uptMWbhPVMrLaObfzH4eGVu0J6ps9zX17F
cX0P4nH+FX5nuOVBuGnKaZ26/Z8htlw2zw2XehxlL05sm+m6/zb/+wNY4VtO
QCOfhN87OOp/6+8ewc6TqtkCEsS3/Q9RQUX+1eafiv43/3v28QXaaxYJYzTy
Z+/G6bteFupraKyYYu4Lm93QX9kebLbnWzS3X4jHaz5I2sYdG1fr2Dv8bLsU
/GOtchX9mv1E4hs9PX867Bka7p6uCvtmRNqfuLUFUhck/RxT9XXT+1bT/Rt9
mcpew3mXdzPC/bHsSnh/HI0pqTD76jr1/zCxZ2h9H6G5rhKLJhQI5l8BJi1+
CfVt3enLN45uNG2eHa9nI5z/ifqkxfNnWOe/fP1JxD9Dw1BvFzo7OvDx1X7F
tVHDwPuv4olYrddy7G13ikfodYydSWYdMNagcF1/E5lTmn5+fNJyfgxegaVB
XSZ65mDftO7EdFv7E9RtAakmZMuYkCL9U4rvvtHh3mZnHcpibQQwYUOjch6u
hPjiD9j24Gjn8Q9dj6KqTS3uwiRbbvMvHfaMkF3tybhdLdq+LosXxbJ4t3VH
WBZNlwe7lG/oMSWtoZiS8olj1eQvTfkzQnpGt2NMKBDIf1DPPBXWM8moTK2j
Fk8G5M8sfH5f/Zz8wMHHMKn9n31/6bT+e7HTaxft4+I8//W1TT3HYMLcakTF
fQFB+/LnH1Nei4u+iouf+x+igor8q80/Vf0f//us4+4pVM0uND17OBdxKdYf
uezx3G+ojSyz++Tp9gz/FJIxllrcvr62HU/6vOMqGw7tW/8m5hNr6n9n+ct+
4vW01J8/HfkzPkHDqimG9sdhyX5ZrrrwO7/7VeZ/3pTgfPmLa+tGe5vr+Hvd
H1t8dT3JX9blWbNyB5ebf4Y10ZoGtmebjjW//COupFVt9qPj4N9gkuv8T7F/
huPakJp4OlcM731D1/itOOEoPxG/Y6X1T4838WjPUF1/Pec4uIOO/d8JrwGW
NsYs3o9LMgX51/9G1dQCe/t5M/Dsmx97uoOkGTiHA8snpVT/jC5Ziwa3mGxr
DfiC7/gcx63XN5vtrn/HrEHDNdX6Jor257wE1mvP9OPi/pVxfWSUxSUOsnjv
vXA8sW38w7KY9tOx1o+u1qCe2hDXU8ry57vd/QtcCumZEnH7KdUzup/oDI/z
T22f4R9DuHnqLbx1XjW/rCAPdEr2f0PO8SaW+e8tz/VttFU9YX/H6zT/J3uo
AZkQGu6e2IYprvrf8Px5T2D3aT+tLH7vf4gKKvKvNv886P/IlV1o+LzphUiN
B+N9B3DfioNy/SjFYM8Q9FnoZ5/jH7X2Gjzh1L7ntU2MaHwDoyQyJPq90/qY
5/yZgWy0i9mI6BtPz++3PWMIV45UhNffWPsOue6767G6JCDsf9v9B/fI9dfd
98hK++OYPUPNN17P/37KGlPiVf6y2D9D6/s/aNg8P+4jY+n//InfRHXrtTTv
y4P7i7M1eLI4/r5EPv8TteHeFMbvCeUv1n467BkR335D+2OWHYZzhaCb9lot
Uvn3tg4Y36G7rr8e403unqkJ55q09X8BZlS9J/frwo3g804Tz7+S1Th8KbH6
0N7pR3vtcnEOiCT0jx7fMGVbCxyjxvX8GabnL8Qju0455IxNFokN3fIM+WW1
6FBcLETxq9L556s9I7jenNmLJ4sCgvYVZLFymnic0yiLpjolicqfn3Z3Xc9U
LsA4Sfv5E5bhlZMp1jPBPcYaa74Gl/mX7/s7dxn30Hvy71BeHLyP4ifxo6ZP
FHLp9Mhj0JPa/5nrmzjrX8V6rQa0G7/HC1MLHdY/6/17qZuQCL04sfVhBf0f
/bkQ0yt/52PejHTsf4gKKvKf6vNn9L/LKrSPsH/x/eZ7HBXWcYc+SUTHtaNu
YZG5/6xzz++8g53hd0LS9kel0J5h7TeD/cupfdFltYnJYqCi/232M2iyZ6g9
v7/xJlr3W3iu1OLXmier36vHYZUL47CMYxX7/oGtOKHwys8a6+84/kr744s4
sDjis1A4DUsrdmFffTNOt59D29t/jzWlhWr9X5SN9gwNAx1vYfuC8fK+Kt2A
+o705+zXbvwOL3xlrOL8TzRnkKDWnUz+Yu37bc/Qx2Q/nonswWNn+11O5yn5
s4jl39s6MGSsb+K2/no5c2rtOLB0guReH8R6x3whkVpbkvXvvlVvoDsdZ5LO
X+EbltofJaVPYt2Lu7C3thZ1tf+AV3ZsxMq5E01rnZv+CX1f/CyO3nAYdYM9
I9Z+yffQkIJ66TKi/m9y/VuEJ2rOKp9JRflApfPPz/omBlm0t++Wu8ap7lsg
KIv1LrbIVGDRUxt+YtJTq0vNebal8ueLPUPPZ/jv+NsF8hwA+SE940cW1bBt
eJxI/0vn32PY2aqW/yV1RHLuFhvtabJ4OyM37X550jUlgfwZivtv73v+Idx4
5weYLrhv8fwPYHyFjzEnt97GxvsCDu2bn3/01B+g6YZ/62x69j9EBRX5T/X5
M/p9NnH39G5THoHw9SC+tf+ceg5zExfC/hl5Dv3i93tg4x5KMi6psmdIx9yl
/eh/Y5M5yWeIruxHnq9J/vw+2jMG2nF4Vam9/Wm70CYsynAedWWCmp+yOT+1
CqeV7BmCeCjZ+CudvT7B0Z07se/tNnzaZ30QDV/IfBSt7Wcqb7wUff9Ug289
JI+rDhQvxd4zvket2tE60LBanvfYPv8XJ5w/w5ZzwlXn6LUb/LNnaD0t+NG8
Ykv7E7D6jS7XZ7HGzsjl31vOZtuZ02n9VfbP0H25NsR9uWzXXFS51P12yk09
Om8OtrX4nNlPu4T6VVGfrQDGzduIuqaLkhy5d3G17V+wY/EU53fnJvkrxUan
HJ+Geq3xqxBzdrzrU60Xs0+gcPwDS7FPmGdC8okO9U0Sly3vz3XlqF0W4+3P
xe7TzrJoew7T/EuDLEb0VF1QT3X1WRWlQE/J5C/lemoIN4N65hmrnjG2X+S3
nulCY8VMs73JZf4VPPYq3veU2y4Z+tHZ+EOUGf3UXOq4xem1++VJ138v+78h
e71Wh/U/oT2/dhUnts2V2AEF8z/fr7qoQ/jsULyOrLP+19e4BdiZaj8iI2nb
/xAVVORfbf6prz/Rz84atHOoKy+xPPdoTFr9LwnEmUQRxJtY55/f5ybhHsq+
tiW76hjlRBpvpLr+uPybqJ3sx65v3J/fr3iTazhpyOlpvIrWHsUt0Z8MNmNz
obz/beNfsB5Hb7lPHFn9P2HfpMJ/eagF28YH3Ps/q+wZwT3myZdRLvTzj/bX
VxLI75MKbuNMzdLwGBYvxSsvr0Gx6/xPTf4MR/mL/eyjf8bgWdQtmSBofz5e
OeNWr8659qxVNks2qe8/TTlp3NaYeTVoVxGakH4052ox9/9T7j607TV43OEZ
xyx+PQld685A9H3FqLGYtu6f0aHykmLgI9Svm+Hulxb6WohH9vxZPgctuji+
f/Lr/bIkriLWfnB/s+E/4GV2GNdr1/nnW7xJWBbl7bv7c2sWWbRe+U75N9KB
rqcecK6TGUi53T1e51euG4N65mga9EzfKbxSNt79+WPjX4zHq1r9rwGtXUNb
3XcxLc/Y/ngsqmlTjBvrtdc3cVj/S5TjQuL181T238UbGhOrUTxwHgei9YFc
9W9wPazyIZ6u/13snFWoqP8fxDOvJ/o+WoV07n+ICpk4f0b/++xA/O4pP2kf
pbg9w9Q/xv72O97EWPNe1P6o1MabjJa049R+ojJnvLKffrRVzfX4/D74Zxjr
LNqusXikWrIfH2zGlkLV+9avUmw8dsX5XqL1ElXHPyX743gMmOOVNfkzNAxe
3I9vOdaAL8T0zX7GhsoI7n//8BLmhOR5Ap6uO4t+ST4U8/xP9P3Ep2hYaY93
kF55YTn0w56h9fwnXom+u7deYytwzLUw7h2crZ6vvP4VrlSsS6jXHtm5AGNU
118l/eOSe02/xqxGw3WhY1ecjrrweV62/uUtwKtn/PBhR8g3oyHkmzEW09b/
Fpe9HMgGzmLfEjW5c9SlDs+f/F5DwN14fRPh+EtrgMiR2Z+F1+w9OJvyg6+G
L1rcZHFNUBZdnAOtuVltsrjQP1lU4gL2BfeOrvuflOkpDQMCPWNuf2xYz6TL
ztP9FjZa42Edx2wmnlXykUgMrbcN+zc8apH/8VhU9a6HWr9q6370Ul73rf62
but/EnspTWHfFmsnsBh7z6VyHvXjfM3isH5zbd/vmkXp3v8QFZTkX3H+qZ4/
o1dWcON32DJ1bOz+Q8+QEt/tC/GzkyQeJ5C3DAcu+x8/K21/lD/xJm7xSsb2
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
i4ORvN6he5qARbtP4GZCyvLzUI3X0aNmY2cr/etTS1AWW7bbZdG6/nj1z5Du
/4Ky2JapurwR/wyVeBPP8TAWPSN9/qCeOes2F8U5B+zrfzlea099nDMhqYP7
HyJGdfwTYyhsyygKSGVIVRaFtjjD2u4ml4UrDuMviex7Bj9E/bqZgnsJYNwz
B3EpgY/UepqxfVah4PnHY1H1KV/iTKKo9j8hmcUhf4Zx/mciH6geK3ZkPYpc
1x8V/0TDPtNp/StYj7dieefD+tzL+pea9Zf+llnNrUZsvC/gPP4q/hn9wc8Z
66J/J21DS7qPPVoXGisiujhvCpZW/ycSlUatux5rSgKZz2maq9x+OySLjuuP
ij3jTlgWHfd/DwZl0c1s7BvttrzVwvmXkJ4K6pmjQT3juv/VfSrc3hvfRPOm
Uttctq3/Bc+yvgnJcrj/IWJUx987GgbO1+LpYpe8UF7z0zr5CEnlshQbGxOv
B6v1nMDusvGC9seH3g/1eln+B3T7yIx4TvbY56UnBli1/wnJLAZ7htP8TyQu
WYiGwd5P0fnxVfSrTMFIDn/n9UdF/8X3mU7r3+iyWnTG7ksSo5JITixP66/+
foL+ltnLVRzb4GIbUzlDRupEyvXvaEzZ2gK1I6THeSX9mKvhGu+hPewMPJtM
7q2BdhxeFemn2dU4y+ObD1xFo4osuvksdAZl0XH/51UWu0KyeCdlY26wZzit
v4nGRQpqxYj2t5ub3N4b3xTbzS2flx/UMx2cDySr4f6HiFEdd29oGOj4Zzxb
OtYsMy45V1xjX/Ik3wtk0/Rvk7fhxBfJLdJaz7v4afl4QfvjsajqXTWbxmDc
lmG+9/TlM1Ptf0Iyy4WYPcNx/iebD1S7gbMNVVg7d6Jh7zkL39rxG7RddTox
fYT9ix9wWX8exLoj3S43EPfPkK9/BZhR9R7ib5EHcfXMCTQ3HUdzczOONzUH
vw9+bT4e/hr9OfQ1/N+E/z38tbnp9zhU+YjC+vsIthz6XfgzQp9zAmevsJZf
NvNFSzjmJCCSy9BXPdbe5RDZUYtyR/2r4N8fmle7sfbRiciPtl/0VTy99SBO
O84rEXfiucQTtmVoGLrZgdNv/xJbyqbEnm1i8CycsRItOY2Gu9H4J+n+T6E2
aMS2Jt//6XFPbrEmQVms3411wTU++h4pEFzjnwmt8ck6GRnygcr2n5E4r+OJ
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
FWOp5t+Bnjx9uYaGHzcXCB/q68vA/EFkUV9fBtY3AAAAAAAANxfZA9b75eZ+
va1n7FN6RonSM9516xlFxaJl2HrGBlPPOESHWc84coSOHTsqmoboGb/+SqdP
Kz3j6pWrdJn1jAsX6ALrGR6aAe+fa40hVD2DRM+4QBdD0DNYq7isHzfrGObj
t/UMpVUE0jOums/b1UB6x21E6RkNfS+Ak/p6M/B7fWThnjeJdmsaUVjfAAAA
AAAA3DREL7hs1hX70OxbOHz4MH300UdS/fv3pzZt2lDbdu0oMTGJkpISaVxq
KuXm5Um9//77NG3qNCooKKAFCxbQgo8X0MKFC2nJkiW01Ki1a9eK1rFp00ba
uXMn7di5gz7btYv27NkjxdqH9HIcPUbfffed1KlTp+iHH36Q+te//qV0iosX
63lIdn/GZYeeIfv7rD1cvWL3Mlj9FbZuIT0Z6qnh/63LOkuj+jsu+y1H31ag
folb0Ush9xp6RlgR7Pd6Z3YriAxCmS2CngEAAAAAAMDNgfe5VS/GJdUD4Zqt
OHbsOK1cuUp6L7p160bPPPMMNW3alDp26EgdO3akd955l/r360/9+vWjnr16
UY+ePaV69eLqRX379JXzuEaOHEnx8fE0ZsxYysnJkZoyZQoVFRVJrVixgjas
X08bNmyg2tpao2po27bttHv3binWNLi34+zZs0EfE+sE8pguXZQeEA33XVy6
pIpnW65cDaw3eD5XV+2eDa2FsOZzyXjunBpLoOXb59N1LR80Prz8IaNdmRfY
v40cPPULt48G8mwAAAAAAAC4Kdh6xkXZN79i9i9ojh8/TitXrVR6Rtdu1FTr
GR07SLGfRr/+Sq9g/aJnj57Us6fSMljf6MN6hnn+CEvPGKP0jGy3nqH9NzZQ
bY3SM7Zv99Uzzoieca6eR3WVLpmPyelrwXoN+3VwXa2nfyLQc3VV92+Y/RXi
NXLpoqtnxHv51rnSJ3LtyweND69+DMybRC6BPFJ8dA3oGQAAAAAAANwUZJ+c
9/EvX/L0iPjxhx9p69YtRm2lzp0704MPPkgPPPAA3XvvvUbdR88//7xoFFyj
Ro2i2NiRRsXSgAEDjRogMyq6P2PAwIEUE2OUcag1joHG34MHD5bi2xg7NsGo
sZSUlCSVnJRMKSlcKTR+/HiaNHkSTZ48hQoLC42aLr4ec+fOpTlGrVmzhjZu
2ECbN2+mzz7bbdRndPDgQfruu5Myu6K8O34VTeTM2TN05swZmUnhhgn+5zNz
Iv6ovjMhV83LOSUIewbFPo2vr+ddWDtx+2vw3+cvnFceqAE8Q/TylTepmgFy
Ll8v02v5IHwI5AvJf0dDz4g4QvFKwXwRAAAAAAAANwelZ6i+Ba+d4p9//pl2
7dol1aljJ7o7+m6Kjo6mu+5qYtRdMn+SlJhIiUYlGMVaBPdfxMTE0CCjWNfQ
2kXfvlx9qXfvPuIpytW1a1fp++BZlt69esv5XAP697e0EH3asKHDaMTwETK3
wsvgSmX/jtwco3Jp9uzZ4vOxaNEiqqysoiqj9uz5nI58c4S++eYb+uH7H8ST
9Ef2Jf3lF/rll1/p999/F88J7a1heWnoTBWXnkG6gqD0DOVHyrMtKjfF9tfg
v88by/399/M+pzuXo5ev+0mkp8SxfB8vD+gZYYvzt/po52/16M+ISLy8MrC+
AQAAAAAAuDXw/rDP/rKLX4z9fj3v0alTJ4qKjqbo6Chq0qSJ1NPPPC3eoKxn
6J4KrmHDh9Nwo4YOHWr1XwweNIgGccXEyDwKV+/eXL2lWLvob+oY3LfBfRzO
/g6+Lb7dESOGU1x8PMXFxcuy0jMyjEqnoplFVFpSIlkrq9espjVG1dTUKL/R
z/fQwQMHpF9D565wnTr1nXhycHG/xtkzqm+DPTrOGcV6h/YXuXhJ+WTIc0Wm
tODol9BwjwfPoFy6pC6rs2Ct55z1jvPnpUfD7SOqtQqdtWLrGZfNZZo6RpDl
g/DBszfD4zQQGQTrx8H6BgAAAAAA4PZgTjbIfr3e93/99U70n//5n/R//+//
pf/zf/6P1BNPPCF9EmONmjx5MhVOL5RZkKKimTRzpq4iOdSncc4rZ6FwTZo0
mfLz84zKp4TEBBotsyujaczYMVLci6H1ENY39AxL927dqXt3LtXbwT0eopH0
7i2HPXr0MM7rYeokShNh7YTP79Onj/SPcLEWk5eXa1QeFRQWyH0rKS6hJUuX
SFVWVlj9KayDcN4Le4qo/orf6V+//Ubnzp2j34y6Ys2DuGZUgugNrH3ofJQL
Fy+Yesllx/n++Smg8eCZ2Ynf6yMWv5xWr+PwzwAAAAAAAOCWonsFfPSMTq8r
PeM/ffUMNWMyVvSM6YWFUraWMZOK+LDI1jZ89YxJomXk5eVTQoLWM+ItjcSp
ZwzUesaA/qJldOuuNA3RM7p1M/s9elOvnr2oe4/uomn06tWb+nN/R/9+omXw
TIuvnpEoWkZubp7kzM6Yrjw5dMZsZWWlpWcccugZrGX8fv53+u2336TOnftN
8krc8yhWz0WAIFU126I0C3tG5ZLP+e55FdB4cGoZ8AONfDx1Kw8dCwAAAAAA
AHDrUD0BV2T2gr0njhz5ht54ozP913/9F/2///f/6I9//KPUU089SbGj4mjU
qFjRJqbPmE7Tp88QTaC4pJiKi4ut/BKrZs40+zimK19P82/2+8zOyZbsE92z
kZ2dTWlpaZSamiaH8ve4caKhcI0ePVr6OeJl/iSO4uLjaOSIkTTQ9CMdOJD7
OVRPB+sYaralF/Xt11f8PHh2hftCEhISaZxxuynjUig9Pd1a/rRp06i0tNR4
PKU0f/588edYuHAhrVu3ziiVLbtx40aputo6qtuyhXbu2En79+2nffv20cGD
PONySOZc2LuD65wjb1Z5fyofUj1bcuWKuz/jCvSMRkrAnowo/F4fibjXsbsv
A3oGAAAAAAAA18e1eC1wrwDPP5w+c5qOHj1q1Lf01ltvUZTxnZzrT1F/oj/9
6U/UrFkz8cngYj2Dey+4Zs0qo7JZs6isrEy0jZKSYioqLlL6hlE808Gnz5o9
m+bPn0fz582X41rzYB8M1hGKi1U/x4yZM+Rvvl5xUbFoINwHMnXqVKvXg/WH
3Lw8ysrKkr4OzocdMmSI9HVw9e6r9AyZR+neQ/o32Gc0xjy/j/E393NwD0fP
nj0kd1ZnsAyMGWjeToz0ioyKi5U8F+7vYB2ESzJoc3Ppgw8+EE/ShUYtW7ZM
sm65vt77Ne3du4+OHT/u+ZxLpskVV1bK1St+/hug8eAzc4B5k4gnkA+ouzcH
AAAAAAAAcK04MjHqgfNGefbhzOkz3nrGn1jPiBI9Y5hTz5ip9YxZNKvM1DNM
7YK1DKVnFJkaR4lkksybP196H4odekZJaampZxQbt6c8N/hvfTu6p2OapWd8
YM6t2HoG92koPSNGtIi+Zn9Gz149Rcvg6te3n+U92lvOVzMrPXr29NUzHMV6
Ruwo1jPiRM9IcegZuQ49Y/FCrWesopWrVtJe0TP20rHjxzyfc8l1vXrFZzbl
qvhroD+jsRIorxP5nZGJ13wJ1jcAAAAAAAA3F51L6tMM4PCu1LMPnPvBsyY8
c/L222/T3XffLXXvPffQfffeK3pGTIzKLMnMyBRNg300WMfg4j6N2bNmiW7B
Mxtaj5g+fboUaxf6spxLMtss7u1gTYQ1jaIipYOUlJZQWanq9yg0fTrY86Kg
oJAKjUPRQsz5Fq138DJ0zwjPjnBNnTpN7iPXhAkTRAfh4lmWcamplJySInMs
XNyDMXz4CBoxYoTKZpGKsTQQ5elhHA4YIPpHD9FA+tOouFFyXZ5nGca5LMOG
0YcffijLX7JkKZ08eUKK/URVX8YVumzmmMh6MWF/0PPnL9D5CxccGa1XVG6K
zKZcUasQ+SZhSaB+DPdcAogM6vPNQH8GAAAAAAAAN85VU8/wyeLQ2RxuPeOw
8gN95+236Z577pG67777jPozNW/e3OpbSEtPF31g4sSJVMoaRamaOWGdgkv5
UKh5E9YiCk3fUD1bMnfuXJo3dx7NmzdX9XfwzEpZqdXfIbfH/R7GZdX1Tf8N
s0pFP1HX08tnbWTevHlSrKno84pMr1LWF/S8CvdW5GTnUGZmhpU7y5pGbGys
FPdlsJ7B+s0AyZUdIPMqvUxPjnfeeUc0ny5duohfB1+Gz9O9INw3kp2dJTM2
rA99c+Qb8VtV2pLxnF82/TMcvRisZ2jvUZ3lKpc1M2T1OkRea3hi5XRGBf69
Hvu3kYN7tgj+GQAAAAAAANx82JfhqlvPsPaXTQ/KK5fp9OkzkunB9baxv37P
vfdKX8Z9f75PivszBpj77tzbwH0O443SPResKcyarfozihzeoNMKplHBtGl2
tqtRrGmUmtfTPhvaP1SK51VKlH8GZ6tyFZq9GVysc7CeUWbOqnDxzMucuXNE
KxE/D/H0KLXvB+sZU6bQFKN4VoX9L9iDVHmDjhOf0DGjR0sNHzFCatjQYTRo
8CBVZm8KVzcza6Vnjx40YKDyImUvDs6U5RwWmUsxniNe7r79+2j/vn2iF3G/
heWTYRRrGqxVXLx0UXJTzhiX4eIejfPnz9Pv//oXnfvtnNTv//qdLhincV1k
DerixQZ8VQE37jmDQBknIDIIpRcH8yYAAAAAAADcGLonwKlnyL602SOgOXv2
DB04cFDq3XffpQceeEBK9WfcR08++SS99957UpwxkjouVfo0Sh3+FzqnddrU
aeItwb0Q3MfBxT0RGRkZlJGeIb0L4qmZky3aQl6uUXm54vHJx3k+xJnzysU6
BM9xcPGySktKRfOwsmIduSoy/2L2cPDl+P6xn6i6LxOt29QzMzKPMnGCtXzu
O+HSsylpqalyfzmXJd8o0UCSUyR3VnukshcH92tw9e3TVzJWuO9j+fLlRq2g
Y8eOWetCc+7cOcmG5fryqy9pz549UpyXwvX111/T559/LvXVV1/JcfblEJ+T
b4/e1tcRCE5I8ybYv40Y3Lkm0K8AAAAAAAC4+XjNm+jegMsOPePMmbN04MAB
KS8945+sZ3Qx9YzR8ZSa6qFnmP0XrB1oPWOipWfkiJ6RblR2VjZli56RY2kZ
eaaWkJebG1jPmOrQM0ptPaNoZpFLzyiVeRPu2dD3T/SMieq+eOoZxul6+U49
I9XMjuX7O37CeOM0U89ISZGeDi89o0+f3tSnr9IzVoiesZyOHTtq+WdofnPq
GV/66hn7vfSMvQ494yj0jHAi2D4t/DMij0Dr2J1tAwAAAAAA7kzOGvt67DkA
bgyZLSGP/oxLF8WzQXPmzBnVF7B/n+yT//d//5Ue+stDdP8D99P9998v/Rns
GcHeGpwpwvvqKSnJ4tHJXp1T3p+idIrsbNE62GuT9/mlJ8Mo1gA4IyQxKVGu
m5ycTMlJyZSWnkbp6enqOnyaUaKVpKVJD4g+jS/DnhesgUydNlXmV3i506YV
KP/PgmnWTMqM6coXdMb06dZ53B+ib4vvCy9D9Zio5fNp2kuD729mZialpabR
6DHsFzqGxowZQ2PHjqUErsQE6c1gzw32D2U9g+dOeou/hq1rsDeo+KHOmE67
d++mn3/+Weqnn36SYu1o7bq1tG7tOlq6dCktXLiQFi1epHo6Vqyg8vJyOb5o
0WI5n48vX7aMNm7cKAXCh6BZF/BTiDi8Zku8NA0AAAAAAHDnsX/ffmrfrh11
MArcfNgv46LpM6lhfwf+7X/f3n3UrWs3evjhh6UefPBBevCBB0TP6Ny5sxT7
SoxNGCv6xBSzv4H3/znXNHbUKPHTHDxokBzyfj8X+1LEjmS/zZFSI2NjaVRs
nKVxsDYwcuQI0UpGDFf+FawTcA7rEON2dGYqF/dOTDG9MLQnhu7n4OLeEOkP
+eB9q9eCdYqhQ4bS0KFDZDkjjOXw/eHZGe434fs0fPgwWSYvgy/PGoZe/qBB
gy0/VL4O6xxxcXGiZ/D95cuxf2hMTAy9+eab9KbxPLFHqPR3pKbR5s2bTb/V
w3TgoOqDqamuUbkthQVWD0uu2Z+ie0b4eG5OjszJ8OOQrFzWambOaMBXEHDj
6Z0R5d+zASIDzBcBAAAAAAAvKoz9vscefdT6PpiUkNjQdyniYA9QpWfY/RlK
z9hHe/ftFa9LrWc8wHqGUaJnvKn0jKHDhkmvAu/3T/bRM1R2Ke/bDzL1jETR
M5TX5kgzP0TVSLlskqlRiJ4xYqTSM0aMsPoeBrOeYBRflnUP0TMm2XrGlGB6
xvu+esaQoaxnDJVlsKbB92M06xnx8fL38GHD/fQMvXx+PANjTD1jdLzcX0vP
GKH1jBipt958U54n7tVIM+dVWM84fETlxyifkgNUXVMj/SSsaYh2kZMrmoZT
z2DfUtY0JE9mkqlnzFT9JyB8wP7tnYWzBydQbwb8QAEAAAAA7iwKCws89wGW
L1ve0Het0cPzJjxnwhmhzuxPztvg4+fOnqUjnC1qFOeR/tn0zXj8H/+gfxjF
+SZt2rSR6tixI73++uvSg8D7/Fw8k+HUBlgz4J6K9PQ08dngOQ99WT7O+gdX
ujmPwvv8ekZF5j4SHXMp5gyK9hPl/Xvtt5Gfnyc+F+zDofsbJI81J0f8Pfn8
PON8XhbftsyVGLenb1v7Y/DtSy6JUXqZyclJctynUnyPp6Wp2Zj4+NE0bNhQ
mTFp2bIlvfbaa9SufXvq1q0rde3WTTxKq6qqqLq6mqqM4sOKigqZN1m7di3N
nz9fZboUF/s8Nq3HOD0/9GkgfPDzUfDw08D+beTgnjfx9NLA+gYAAAAAuCM4
e/YcDR08OODvXFwH9h1o6LvZqGHtgj1AVaaJ7aWhMzfYq+Sbb76lb7/9Vnwy
7r7nHrr33nvpiSeekGrevDm1bt2GWrdpLZpG27ZtqUOHDtKjoIrnNkaLnqH7
NPh09qZQ/hkp0tPBlZmZYXlh8N+ia6SnGZdJVboCaxqmppBi6QZpxu1kyuXZ
m1PNYdiZKDmmhsGZKfpQ6x6sd3CmCt8XXg77fnA+Cd9uRoa6f3x6aqrSNni5
vHy+H2lyHVVpaer6nMUqHh/G5bUew3qO8gYdRq+++iq98sor8jwpz5F3xLeU
ezQ2b95EFRWbqWJzhRzftGmjUZvok08WUFnZLNE9RI8xiu+3eJZKTVZ6xuRJ
krHCWSsgfAjkBYp5k8jErWNEu9d5FNY3AAAAAMCdgPbKCPQbl/7e+FyL5nT2
HPxBQ8HKaHVkaYieIRmtdn8GmT0bXKxnHDmi/B04w4Q9QDnf5J///KcU92e8
+tqr9Jrsq6v99VYtWyp/CaPYm0J7Sah5DjVP4vQDVT6aiZSVlWXpD1mZWZRp
HFeaQrqpKyivztTUcVb/BOsOfD2+PGshzl4M/lvpI9lymJWtfEn5OGsCSs/I
tvo7+PbHmZ6jevmsqaj7mm71YfDytV6RbvqGpqeli47BfRnpVp9Jhug08rhH
jKRWrVpRy5atqG3bNspL4603ZaZk3fp1tG7deqVjGLVxwwZatWqV1Lx586hE
+jOKRKsYnz9e9AvJqJ36oczOsOcqz9bk5+VL7wYIH+rLNUG+SWThmWfj8RkG
AAAAAAAiF7dXRn2/b7JPJaif8+fP0wWj+FBz1aFd6D4N1jcuXrhAF4zi3I39
+/dL9enThx5//HGjnhAdg6tp06b0zDPPUFOjHvv73+mRRx6hv/3tb9SuXXtq
3769+EV06dqVunbtQgMGDBDvDNY4lBaQQanmnAf3PrCOoXSGPIcm4Zwhybcq
N9fuv5CM1+xsS6/gnousLMff5qHWGFirULMnua7rqWIdZJI5u8H+FOPNvocs
U98Q/cS8/QzOOxE9I030Dz6Pl6XvH2sfiYmcj5IoszidOnWijh06Sg9Lh/Yd
xNPzo48+ktqwYYPU0vKlksHCGShTp06zfD9Y++DZK549mW9eh2dRdGaLzroF
4YP7d3mvfVzMH0QOATUr6BkAAAAAAHcEnLcZSL/wzAcwvy+yTwIIznlTy/DS
M9g/47JoGZelVyOonvHE47aeYRTrGVz/+7//a+sZ7duJnsFeGl1Fz+hq6xlD
h1g9D848Vu6hYE8L7jPQ/RWiZ/DfebnqPIfewXpBrtYzjGIdQRVrFFkOjUL9
rb05srIy7f4NuZ55uSylbfC8ykSnnsHLHJ9v9Wvw9ZVuoW5Tz56o0zOVJpKX
a+oZqVb+iqVndOyg9IwO7eV+aD2D+zI2bNxIS5eWO/SMqT56RoHoGUXG5efL
dUoceoaaqcluwFcYcAM/0DuLQPNE7tMAAAAAAEBkwXMN7JURbMbc73SHrsG/
W4PgiF5x6bL0XzhRIyZXzXkUVZx1wjrHr7/+auW1cnZHu3Ztxc/y3XffpXff
e1f2y194/gV64YUX6G+PPUYPPfQQ/c9f/0ovv/wyvfLKy9S6dWu1H2/U22+9
pXwj3n2H+vXrR/3796O+fftK3gdnmLJvpp5JYc+JYUbp7NTR8aMpOSlZ/DbY
T0NrE6IvZKq+COWjYRQfmr0S+jw9u8JzJXwZ7dPB+oXoFFlOnSJLaSVcOXaf
SKbp05HJsy2mhuJcRrZ5m3Lb5nWccyys6XTp0oXeevsteV7atGktszes0+Tl
59HHH38sVVZWauWz8FwJaxrTpk6T2ROuTxYupNWr19DqNatp7ty5VFpSKj0b
OeZ9BeGD53tZlOsQ+7cRg7Ve3R4a6McBAAAAAIhYDuzfTx3YKyPI979Afbs8
l8IeiiAETN3i6tX6L6o5c/o0ffXVV/TV11/J/j5rD3379DXzSIdTz5496bWW
r0luB/dlsLfGX/7yF2rRojm1aN6CXnrpJSv/pHWr1pLx0co4bG/2J/DMBfdx
cPG+fo8ePah79+5WT0evXr1owMCBRg0w9v1jRVNJGJtg5p2mOjJRMixPDi7R
HTJsrYM1CPG4SE+T8+0ZFFP3YL3D1Ef4fN2zobUQdRsZ1ryJ1d/h8Opwzsho
zw6+D3q2pl/fftSnT296770u4g3KviOs58THx1GcUTNmzKSZM2aIfqHnargv
Y5rZl7F06VIqN2rN6jWSiVJVVUkLFy6k2bNn06xZZdayQfgQSIt16xsgMqh3
3iQKegYAAAAAQCTBWsRjjzxa7/c/v++IRrEGcmDf/oZ+CI0H0+vTmWNSH6fP
KD3j66++kv343r17UZ++vU09YwT17KH1jJb0qI+e0YKaG/XySy869IxW4hXa
qnUrc95CVXv22jDWpdYzuETPMI736tVT5lQGDhggOa+sZ4xNGGvlobJGobUL
9uhMN+dYRJdwzIZwae9Ot14hmoej34NLzZ9kyfW1hmH5b8i8iiNLhf/OUdkj
Oc45FjOnRWss/fr2pb59+tB7Xd4TPYM9VPv27WdlwcjcyMwZNE3rGXl5Ss+Y
No0KCwpkDoU1De7LYC2DNY2Fn7CeMYtmlc2ylg/Ch6A+oJg/iDi81q9XRi8A
AAAAAGj88P5gqN//9GX06TybwjMqIHRUb4bqz9C+n3x4keviRdsPVB836ptv
vqFly5bRsuXLRDsYMnQoDRs6TLwmeJ+ffSFiBsXQoJhB4qfx8MMP06OPPkIv
vvAivfjii5LfyjoFV9t27aQ/g7UPnlF5/oXn6fnnn6fnnntOSs2ovCL7+m15
rqWd8uAQvaN9O+rYsSN1MKpTx070eqfXZY6Fc0Lefkdln7IOwv0irLmwTwcX
z63Ex8WLXhA7ahTFxsZKhmxyUhIlJSeJvmH7gKqcV6ULKL1CNI9MpWvozBN+
7Hmm36f2BJUZFnMGhXsztBdHjpkhy7fJ8zPDhg2j7t26U/NmzalZ82bS16L7
U+S6xuU4s2SuOVvC/RdLliyhJUuXUGVFJVVUVlJtTS1t37adtm/fTosWLaLS
sjIqLS21PD9A+BDsPS0a+SYRh9+6dc2fREPPAAAAAABo9LAO0b1rN5/vfPV9
/3POnPNv1eA6sPSMq6b3p6lfXLxIFy9dNE67bOkcFy5eEE/Qw4cPy/409wXw
vj97XLBGoPoTciglJVllsw4eIj0Z2g+UtQylZ7Sjbt26GtWN2rXVesZrSscw
tYxnWzxLLZ5tIZfn+ZSXX3lZdBDONW3Tpq35t9I32lk6RztT4+hAb7zxBr3x
+huimXQ1lsO6RkxMjNTQocMoNnak6BicmarzYpNYzzCKezyU9qA8M5ROYc+Q
cI6J7u/IMvs1WMPIE7/PXDWzIjMlmVZPho/HqCNDljNr+bnj+6f9VFm/adO6
NbVu09ryJGU9Q3uELl68mMrLy0VTqq6uNqqK6urqaMeO7VKLFi2kstIyKikp
lRzXSZMnN/SrDDgI5AHkfs8DkUEw3yf4pQAAAAAANH44J+O55i1C8v10e2jw
XMrOnTsb+iE0WkTLoKs+Ga1XLl/x6cu4Yuab/P777/T7+d/p4MGD0iPAHpS8
rz1m9GgaM2YMTTb2m7l4H3zs2ARKGDuWXn31Fck/eeKJJ6hVq1YyX8Lel6wr
DDKqa5eu4gfKxTkfKuujo+ml0cHKMG1vFPdecHXs1NHqy2hvZsCynuHUOLQX
x1tvvWnUW/TOO++YcyvdqU/fPtS/f38awDVggBTfH9YVuOJGjZLHw8W9Jklc
SUlW5gr3cKSkpFCyUanjzBkXyTLJsmZQ9IyL3Z9h92norFku9jZlPaVXz16i
/XC9+sor8lxxcSbsxAkTqLBwuuhHnNu6YsUKWrVqFa1evVr6Mmpra2nLli3S
m8HF66aktJRKSoppyhS1TkD4EMj3x/3+ByID52dZdJB1DwAAAAAAGh/Lly8X
/85ot9dnCN//OrRtRydPnmzohxDRsNZx5YrKOTl9+rQUe2dwhsbcOXMla4Pz
S3mmQTwojSorK6PioiLJ12C9gmdGeF5Ez5gMHzZcrjNhwkQzg0R5XLAmwF6e
qWmpkv+ROm4cxcaNUrkmw4aJTyYXz4/o22L9g/UOzlfhHg8u1gNeMvs6Xnrx
JXqRD7nH4+VX5L7Y9Yp4eLAG0qato+ejfTtTR2lPnd/srOZX3n5b+km6de0m
GbUxAwfSQKNGGfeP51bYw0NnsLLmMS6FM1fGWbkm3LcxfvwEyh8/3nq+Jk6c
JL4frJuwt+lL5v1U8zWvyXNWZDyPXJ988on0YNTV1ol+IVVTS9u2baOtW42S
w620xSjOQ5k5c6ZRRbJ+uED4UF9fBuYPIotQdHmsbwAAAACAxkdubl69v1MG
+v6XlJAEr4zbgPRvcF7rVQ89Y65Lz5g1S4pnHVjLED2ja1fRDV5z6hnDtZ4x
QfwnOL+Ui704JG9E6xlG8RyI0jOGWnpGD7ee0UHloWg9g/UA0S9MfeCll16W
v7WO8YpD0xA9g+dXHNVe6xlGde7cmd4y/TiUntGVevfpQwMHxlh6RnxcnPSo
WHqGZMiOU3pGjvLg4F6M/PH50m9h6xkTaexYU88YMEC0l5dffFn0GNYzXvPR
MxaYekYt1Wg9o1bpGbq2btkipfWMIqOgZ4Qfob7ngcjAT6P3mJfE+gYAAAAA
aDxor4xg3p7Bvv/NmzuvoR/CHcPvv5+X9XXmzFk6fuIEnTDq8y8+V36gRrGX
A883sAfl6tVraM2a1XL6ggULpIaPGK48LLp0pcFDhogfJ+/zT5kyRYr39Z0e
FOxZoQ7V3wkJidL7MHr0GEowrpeQkEBjxo6x8j+412PosGFS2u9z0KBBojVw
sf7Bmai9e/WmLl27yn3h2RPuuXBW586vm30aKnNFslM5b+Q15e3BebLKq6Md
vWFcVs/IsI9nt+7dqTtnypo5LLxMvXx9n9hLRD9+ni+x7r8549KvX181M9Ou
rcp9Yf8Mo1gTKjKKM0u490J6MLbUKW1D92vU2cWnsceG5KIYxVkoH34APSOc
CKbXOt//QGQQymwR9AwAAAAAgMaB9srw8/XX3+mDzJfwXMrOnTsa+iHcUZw5
c4Z+/PFHo34QH1Cu3bv30Lp1641aRxs3bqTNmzbT5s2bqaa6hmpqauS05cuW
i67BHhOsL/B+vOgSY0ZLL4buG+C+hSxTv1B+m2YvQ36e5JOyt2ii6V+h/Scs
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
QvVnVIpfRq25TnSPCq8LyT8xPUNvhp5x4uTJgL8vO7f//fvhgRMKbt03UMYJ
iAxC6cXBvAkAAAAAwO1BvDLqyRkM9psjzzKA8EFyWI19fD7k3gzu0WCPTekF
qKqW2RCVobFNeTZsUb4NW7aqjFXuE9C+F+o6Kk9U8jckg8PsuWCPDK1tmDqF
6vuwtQ/OO9HzLPp6vCztFSF6SK3SOrTGoa/D+/hLpD9jCc2YMcPMEsm09APW
Cvg06angXoq0NEpLTRNdQmsfujdD6x4qG1YfzzGfqzzL19O+jKPXw7gd7sfg
rNaRRnG+CRd7gtq5s7auoW4jx+e2OKP1rrvuorua3EXNmzczqjkNGjTIyoRh
HWezfs6rqs2+DVPjqayU50vW2Y4dN8UPVPJZPfa/3Nt2YUHBTXpVRjYhzZtg
/zZicG8z0K8AAAAAABoGyysjlBmTKPvQ/R2ONREQHrCXhJSxny7zJg49g3sh
WL/YZmaCai1jq6llbN2yRXlZmLkkuneiRusZW7ZanhluPYN9N/QcilR1jXUe
92jo6/AytXbCWob0b1h6SLVjH79KZk189IyMTEs7cOsZqWnK64J7LHSWib6s
1jBytH+nqVfwcyTeG5aW4atD6D4OS88YGUsJiSrL1a1n6P4MtawcH11E6xlN
jGrerDk1a96cBrOeUaPmfZR/SIXMl2jdyZ7xqZLnS2lQO8QL9PAN6Bk7d+z0
3P96+aWX/U5r367dTXxlRi7B9mmdmhGIDAJ+Xrp6nQAAAAAAwK3h5MmT1KFt
u+CzJF7Hg5y2YtmKhn5YwGDSxIk00aw5c+bQ3LlzRRPQ2oL1W/+27ZJBUueY
PeGy960rLA9PZ++Fvb9dZR937IM7Z0hqHHMl1a7T5PZqa3z7O2rs49wnsrR8
KS1dWi7+GexDwb0XWodgzUBlrypNQ2ejymlmxohf/4S7VyNP9bE4K9ejT4Mz
TuLi4ijeqMQkh3+GOafi9OmQ23DdptWfYZSeN+H+jC2mlmT5ilRV2c9Dja0V
bTF1IL7sF19+QV988cV1vz6cHjl6+3/s0b9R/vhJnts/v1eECzt37gxLn56g
WRfwU4g4gvU2RWN9AwAAAADcUnbu3EF/c+YaeOgTofzW6HU6+jQaHivfZPIk
mjdvntSy8mVWLwR7ZGzTegbrCKYnaK2pLbCOoGcftE+Gj49npZ1J4qNjVCkd
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
ClVOH1AfP1DWNHzmQfT8ierZ0HMqloZhlVqu9sTIcugkkmFilHP5Tj1EL//p
p5/x7c9o1pQGaj2jstLshzHzdM3nVulK6rSFnyykWbPKqKy0TD32EPQMngPx
2v5GxsZRekYWxcePpcysHMrPn0Rp6ZnG45hAH3ww1Xh+J0ifxlP/fPKGt/9W
r7Wi+Lh4KiubY6xP9pzdTp/u2k07d+6iXZ/toa++3kdffbWXvt63jw4fPmzU
ETryzbd0/MQJ+u67U/Tdqe/p519+lZmT+Lg4v+WHS25rqO9/IDLwWr9eGb0A
AAAAACA4/BusZBcE+U5l7W+E8P3Ly+ezXn0kKvhtei0fmsato8706uSskVrp
h1DzHXqehPWFzRUVZm0WjwY+TfSOrWr2o8acJ7FzXWutWRKfLI7aOkdfhTk7
4lh+nXiJOrQT3Xdgla19qJmLSitzhX0+lixZKl6YPG+i+yfs/oxcv3wSp9Yg
sx7SI+Hrn6E1CJkVMf0vJIfEzIPlwxzzuPb01NeR2RJHFopevurNUPMumaYe
km35kGaL/+ddd90l1bx5c6mYmBjjcTqez2rXc1pr58HwczBv3jyaO3eumrXJ
C97n5MxndW5/rVu1pmHDR1JiYopktCYlp8jcCXtnZGTkWLmtEyd9QD2797rm
7f+1V1+j4cbtf/jhNFq3nr1nq2njps3Geq41Xns7aMvW7VK7d39On322h3bv
+Zz27d1Pe/cdMGo/HT5yhL755igd+fao8Ri+o++//4F++PFH+vX0aVqw4BO/
ZXfvEh65raG+/4HIwG/duvR//RoAAAAAAACBOWB8/9deGYE8MNzfuer7/uU1
813fbV7v8pMSExv6KYxItAahdYgas+9h29ZttHXbVtEOOLe1wtQy+JDnQax5
FIe3p/b+5ONqpqTa9sOoqXF4gdpzIs7l62xWOxvW6a9hz7M4vSK0VqJzPbSe
oTJZlZ6RZ86baI0iK8vh/5nl25uR5ejPYG3BqV0obSDXOD/XylZ1Zq1q71FL
58jJ9ZlN0cvPEP8O5R2alWn3Zuj5FtEzmtxFTe5qYusZg2Ksx1pdbc/wOD1U
1WGtpWfMmaP0jNx69AwfjdPc5u6/7880fGSszJnExY+lpORxkm+SMi7VqAzJ
bc3Nm2g81gk0tWC66Bz1bdOvvPQK9e3bnyZOnEIrVq6mJUuX0yrjcP2GzbRm
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
U6cVipcGn8ZzJtybwX6g3JNRWjZHfDQWfLJQZk3mzJkvWSfLlq2kxUuW0po1
a2n9xk20ctVa2rS5UvoyNlVUSdbJ9h2fij/ojk8/k8xW1jN47oQ9NPZzbuuh
Q/TN0WOSc8K5raxn/PjTT/TTzz/TiZPfhZ1WEOr7H4gMQtH7MV8EAAAAgDsV
9sro0LZdSHqBl1YQ7ahr6bcI+fK3ePndu0DPuBE2GvuQGzdtNA43ip7BJXrG
tu1SaqZEZ6KqzFbJOtFeDjX2vMl26c/Qeoa/T0ZNjd1/YfVc1Ki//Xw1PPxB
3b0Z2j/DOW/i05+RmWnpBOIHmm33X2itgmdHuD+CNQZ3jom/P6iteWQ5/DP0
vEmGuUzWM0ZrPcP4W+sZmY7LZpq6htJJsh15rrmiZ/zxrv+gP/7xj9SiOesZ
zUXPkFxdU1/Sj5+zdLn48deZ5ys9o4RKPPQMnc/q3v5atmxFXd7rJhmtPG/S
u3d/GjVqtHHfk2nQYDV7kp6RKb0Z41LTKTd/ghxmZ+eLd8aE8ZOM0yZSQeEM
+uDDafT++1OppHQWzSgqocIZRTR33kc0Z97H0qvx0ccLacHCJeILurR8Ja1c
tYaWLF1Gazi3dRPPm2ygTZsqpT+jqopfHyq3dYd4n+6iL778WvSML7/6mg4c
PEiHDh2WOnrsmMycqNzWn+iXXx25ra73mM0NmNsa6vsfiAy8PrewvgEAAAAA
lFcG9437eWdGeX9HjnbMZ7/0woveMyPBvD4D6BXXs3yvZV3P8tGfcWMsXrSI
FhnFh6tXraJVq1fRhg0b7F4Acwal1pzpUOWbK1IpGkeV+G6wNyVfz5276pPl
6umT4coycc2n1NTamSbV1b75JrVyP6qMfeNy1Z8xU/uBZpjzJjlmvonHLInD
29OdfeLrBWqfb/lnmP0ZmWbfhe4JSUxKpNhRcTRqVCwlJiRQglHspeHMaLWX
6Z+l4pw3YS9Q9s9Qeoa5TmrrrOdKZ+w6n3/WM7g3o6i4iMaPH0/j8/Ot9c3b
i3tbe/D+B2jQoCE0YEAMdenanYYOGy6+GX37DaD40WNFy+DcVu7T4NxWzjfh
Pg2d25qRlUvvfzCVJkycQvkTJtP0mcX04dTp0qdRUjqbSktmiZ8G57bOm/+x
9GrwnMnSZStkBqXcOFy7Zr34g65Zt954PJUyb8JzJ7WS27pVZk541mSXZLdy
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
uroaqquqoLS0lOp2oUr7DOqx5uCH9eNvKnmCuq2/WzESA9E0nXZfaQaDwWAw
GIybAbyu+Lx+XXGi8w+7JoNyMDvZK2Oyoc/moYH7a85vXoJPP/sMPv0U6xr8
6c9/Jj7j6tUP4IpWv3/vfXjn3Qui3nmXNBqnX38T3nzzLXhdmyKfMTQ8KvpN
hkeguwczS0PEbSCXgb0mR7q6qd9k37520mWghwb2mzQ0Sg+NXVDfuJXyTeob
mqG+vgk2bqogv4zKylrSZhR6fJRxgvPQOyMrKweKvH7KikA+Y9XqtaTdwCzX
RYtTYenylTQf/UDJQyNVeGjMmT0Xnn/hBXhi1uOu48sjR45Yxsvk9zk0rHAI
ui4iHDH8QId1P9B+yWcMSi9QF/1FxNpj4u4PastujVjzXeXy1c8k81qNfpP2
/YZ/hug3UfNafQ59hc/BVShaC58131XtV7Hntarvh30mqM3I1MboyG0gp1FY
UKjtx4Ce12rqM4jL8Nr1GY8qfEaSzmekWvp1JJ+B2gyhz1D5jBbaBtXVNVBS
UkJ1O3H+rDUDxe34Q9+NqQK39Wc+I3Hhylu58FgMBoPBYDAYXxR9vb2mV0Yc
5x/quSh5ZWjn7YzJB8zIdduXV96/SnzGJ598RnzGRx//CT744EN47/33tboC
ly7/Hs6df4fqvFZvvX0GTp56Q/fQeBOGhsfIQ2N4ZEwbW45QjwnyGr19/aTT
aO84CIcOd8GhI12we/d+4i/QS2P33n2kx2hGrUbrTuo9Qd+M2roG3UOjknpL
yrdUk04jv1Abm3sDUFK6gfQZ6KGBvSbIdWB2K2ow0B80MysbXluYTFqNVelr
YenSZbqHxkLy0Pj1r150PZZXLF8OR7u6jPFwKNQPJ06c0OokjZn7tfsix9Wq
mYiomgn013D0i0TMbFabb4YzyyRifZ1bvomiy5D8ihzXh7XPp/qBeojP8Aj+
QeczLFklLpoLI2/EW2RwCz4lf8TqKyr4Dfm8Io9H2x8e6itBLiM9fY1W6XQ7
KzsLcnNy416+3Q8U803S0lL1/Bg9I7e/H/q040yu/6DSz7Nz5w7tOKqnnhPU
qOC2mAyolhkoUTQJUwVRNRk2LSAjMWDfx9GuizAYDAaDwWB8EVg87OI8/5CF
vSnslTG5MX/uPAcHdejgIdJofPbZdfj4T3+Cjz76GP7whz/C+1evwqXLl+Hy
5fd0D4134O3fnaO+E+mhcfKU8NDAfpNQaID4DBzfd3f3EpeBHhpHj3aTh0ZH
50HdQ6Pd8NBo27UHGpu2En/Rsm076TSw1wSzTWpqG2Dz5grqMdmoTTGzFT00
CgqKiOfwauNgzGvN1sbIhdp4FfkN8tDIyKTbyGcsWpQMK1au0mo1vPib2eSp
8dD3vu+4Hvztb/0TtLd3QJfCZ6De4uSJcTgxfkLwGf0ix3UgErHoJ4h/QI7B
0G24eWEMuPAc6n3FWyOiPt/eozIgOBNLv0lY9F6gH2goTNqM9v12fYbOZxAP
4bN5aJgZJpTbquskioijMHNW0bMTH5M+HKo/qHwe8QaY0arzGWvS06mIz9Aq
Nzc37uU7+Iwk0W8yNCj5jBDxGf39fcb6k05F35Y7d+6EeslnFE0ePgPhyEBR
fk/Re3kqwMKJc79JwkP933F4bfH+ZjAYDAaD8QVx/fo14iOi9ZbEOv/Aqqqs
ut2rwIgD6Ddo33drVqfDZ8RnXINPPv0U/vjRR8RnoIfG79+/onhoXIDfnT0L
b751Bt7+3Rl44823qN8EM0/QQ2NwaET30BggD41jx7rhyNFjwkNDu71nH/ZB
dJKHxq5dIt9kZ9te2LFzN/WZIH/R2NxCmo0NG8tJl4EeGhs3boYiXxA2bNik
3S6HAo8P8vKxb2E9FfaaYIZrfoGHtBnIY6SvydA9NJaRhwZmt6J+4z//82nX
MVPmugxoa2uj6uzsgI6ODjjadZR8PVEPECItQJ/IcXXz7VT1EpLbiISjeH8q
moyInfOwazJsOo8BJa9V8dEw9BlhwWegPqPW0GdY800smgiHp6c1M9XgNHw+
w7PTr76PwWfo+gxtWYXIZxTq+ow16aTRMPQZublxL3/mjJlWP1DSZ6SZHq16
hi7yGrLvB3mOAZ3bwH1Z39BAnIZ8z8mGKqnVUH5bp4onqNv30O3/h5EYcLsO
wvubwWAwGAzGzcA5W193rP4S+/nHA/fdT74MjDsD6Iti36ePP5ZE/SbIZxge
Gh/+AT64+qHhofHuu8JD47zuofH6G2+RRgM9NLDPZHh0DEZHTxCn0d2N4/4I
6RmOHuuBAwcOk0bj0OFjsGvXfthNHhoHRb5J41bYvqMNtm/fRTwGemg0b23R
xqCNpNMgD42qGuGhUaSNyYvRQ2MTeWdkZOaQVyjeRq+M1elrITevgHpPFi9O
hWXLV2jzM+ma/py582HZipXw7Xu/5Vh/vE4u8zzLy7dAc3MT1e5duykrQ1aP
XgOytwHzS3Q+AjkM1EbQ+Dqk5LpG6Tcx9B0Rp5eG7Dlxch2iwnYvD3wPqc/Q
/TOkPiNav4nhj+Fz8dIg3sJLegtrv4kolc+QryuS+gzUQRQWWvpNUJ+RnSWy
dGW/STzLt+szsJDPGNYzZdTtPzo2CmN0DI4a+o1du/CYaoSGhnoIov9oMHib
v33uuHr1KsyfM884HqeKJ2g0PYb9/4eRGIh1XsH6DAaDwWAwGDcK5CIMr4wo
2oto5x/oF8peGXceHlC9UfRCj4jPyEPjU60+gY8+/hiufvABvPee1UMD/TOw
7+TNt34HJ0+9ThqNU6df18aPo8RlDI2MaWPMITh2HMf+/dDTF4Kuo8cND42D
h46IPpO2PbB3fwe07dpL2gzUarS27qDsVvTNqKtrJB8N5DNKyzZBeUUV9ZsU
FBaRLyh6aHi08bPw0PBp42cfpK9ZBytXrSEPDZyPHhppS5fDam1MvTg5Ff7l
X/7Veozr6z4+Pk5cxhad02hu1j5PUzPs3r0bent6TE6jB6c9RnYJ5ZfIXpCw
0AqEdD4jJHtCHP0lESV7NXo+q6nfsPtsqNkmYcMXVGaqhIx8E6t/hs/QZ6jZ
q+75rD7dm5O4jKIig88QfSBe430EHyFeK7kPj85nFBp8Rrrpn0H9JjlxL9/B
ZyQJPkNk5A5btj9yGWNjYzCi8xmDNj5DZsROZrRu20bfzaniCar+/sT6/2Ek
Buy9ReyfwWAwGAwG44tC1Tp/LQaX4Xb+Ibwyrt/uVWDcAIzcVqXq6uoNjQZ5
aHwsek7ev3IFLv3+Pbj8e+Ghgd4ZvztzHs6cO0dcBnponDr1OoyfOg0DQyPa
mH6QeA30Bz12TPhQoIfG4a5j2hi7g/JODhw6QjwGajJ279lPHhrIYzQ0tZCH
Rl1DM2zS81prtc9VVrZJG+cW6zmu5ZBfUET9J8XrywxtRm6+Bwo8XuoxQQ+N
zOwc7XY2vPbaIli8OAXSli6De77+Dce5Mx7HiOL166nWry8mD8n6+jrqV8Ae
k75+4QNKXIVWOJ5GjYDsb8B+FNRMCC4jbPAapJuIKL4YLvyE6pth7y2xcyHG
lHparP0mA3qmivTPwKqtqSV/TtRMGHyGI5NE8a2QvSN6b4nsNSlS9BnCDzRA
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
Ik61GC76srrRPhzvyUQwfmZGZsi2sd9FtOPza9lTBAAAYqFSaB5nhO7x76/+
Tfv276O//e1vdNlll4lo3rwZ/fzn/0eJn1OzZs3ooosuVq7fm9NZjc6is85q
RE2aNDHyE1j3aNu2LbVv397QQziv45ZbbqG+SrDO8cgjj9DYP/zByKlg3wru
PTJnzjNCV9D9SrNMXhXZmo6g131wr5Xs7CyhLwi/D+01vFxWtupRqvdxYc9O
9TUrjR6rRs6FEvx6zlfhvBWRs6E8xrkXSzOXipwS1V8kj/JW5xk5Jzx+Tk62
6DV76623KJ/JReJz0etNWM+QYfhj2PQ64eeqquGfUZdwe/4H3sC6j+3mZgAA
AIBb9hQWBusOLuo9HLUBF8+F+GvEYfzMjEB+Bntl2PqBuBi/rnlllG+ZRO3j
/vm3o5tvGUCD7n2Ips17lfI27KS9R88kelMB8BzCa+P0aRH//ve/ad++YD2D
NQzWMoL1jAvorLPOEhGkZ7Rubatn3HJLX3rwwdH0yCOP0h9Yz5ga0DPmCD1j
jqpnmDwugvSM7CzRQ4X1Bc6rYH0jW9Mz9DoWoWdkqbUgq3J1PWOlpoOsEOvI
1p5fqa2LX8/HZw6hVfD6c3KMGhlDz8hbrYybY+R18Dp4uVtuvZUuFnrGRdR/
AOepDBD1JjKqtH6sdr1bq7TcGlB3cHv+B97APO9ymosBAAAAbjn09SFp71K7
2g6n84+jbhDOdzPG8Qu2FYjtKS4qMbYn0vH5dSXFkfVLqRW++Qe9/9d3KC8j
nZ4ccyd1tqvlifXz9yVTv/+ZT+t3f0kn5JcDAIBIMeohiE6cOCFqU44cOSJ6
j6xbu070JOFeq+w9yh4U7HUx68lZNHLkSBG/uf83NHTYMBo2bCi1adOGLrnk
Yrq0xaXk8/vJr8Qll1xCTZs2FcE9QFgjufzyy+mqq65Soo14Tdt27aidEly/
0q17N+rZsycNGDCA7lSCvToGDx4s4ne/+x2NGTNG6CG6PwbXrbDuwD4YOVru
hO7bodeVcI4G6xrqz1yhQ2Rkqj4iYhlTrgbnevBjKzXPDNYy9H62+jpVrUXV
UG5lPUPZRt5O7t3av/8dop5G6BYiFyPwUVdodUHsbyKDn2MPFFB3cHv+B95A
NgfB/gYAABAr3B+kc1KSs8bg4vwT9LjD8q69P12On78xX2xHfv6mqMcfkpoq
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
r114Bh/n33knzy157/33mGdMV3hFdLTI2/TPMwTTQC+GZBXCTxHPfShqHwc4
RYzlqxAzVeNsJf4mbhdj8hCRNypnwYJr2HmGmM9i4xk3i3mzbVrZecYdt9/B
c1iZZxiF+SyydwYsY/ZsMQcWPAMeE54Fa+Z2yNwPX56Ry+e9ZG9JzubNzDLW
rFnLuRoyU0RmiDLPyMzgzIwl6UuYaaDHRPKM1atXWzwDvow9xntYrnlG2BTq
+kcrMuS6HXLZLmlFpnx8GcH2S4Lti7g8VlNmaXJWxuAhAV+L67kg82edlaGl
paWl1VhCJqZz+xOIIzSWMDPl3ru7+Wwj5QzXb789z34I5Bs8o2aJ1nH7X5ft
b7D9D/gmI0VyRiv+Qw7oD1Z+hug32bZtO40ePZoLfRZt27alNm3a0C//4z/o
P4zC75jzcc211zLnwMzWO+68g35z72/ovt/cR/feew9nTKBw3W9+Y1x/32/p
gQe6cy/Hgw8+aFX37t25eB7K/b+l3/4Wdb/5u/E34/YPmCXvI34Xf5P3Vwv3
7d79fn4c8XjiMe+77z6677f38WM89NBDXJ07d+EeErzOa64R82bxepD5ieeM
bNPXXhtG7733HvM0ZGCAU/AMFGRkeBLZg8G9LybDkBmnyDbNWplFWVlZ3D+y
Y/t22r5jO+3aVWDULvZlyPwM+CuWLhW8Y9GixZYfA7kaW3JzmYHI26KvBPNQ
cLl+/Tqj1otM0GXLablRxSXFVFFRwaUVHoW6/tGKDDnfY3/bJq3Ik0/2Z4D3
P+D6wM++TVN7Hg4ePEj3KOe9fM75BHg993a7m06dOt3oz1FLS0tLq+XKmZuB
Qv9JOGTrezG3/w/8tjsNHTK4Qbf/wba/wfY/Rg4fzs/1YPXBsPw7NYakD+OC
6c34gS9/tDjH5pzNNGLEcPYigGP827/9f/Szf/sZs4z/+OUveK5Jq1atuDC3
9N///d/5Us48ga9B5oUiP/OXl15Cl13Wiq644gquK6+80io8xmVGyfuh1MfH
8p3VunVrq+Tt1Lr0ssuM5ckynlOry3j5/PullzGzuP766+n6667l5/7v5uxV
cJq2bdswL8GsFuSCTp4ymSZPnkyzZs4y+0lSLO8EMkWtmS0y4zTGuN3s2ezH
QObFpk0baePmTbRz5y6qqKykyopK9k/sLi6mwoICWr1qNXsrli5dZs1cRQYG
vBjgIHv2lHGBgcDTkbs1lz+PzDuMS+SboFYat4VfA1VsPL7mGeFVqOsfrciQ
ut0JtC3Siizl5+X5vNeB3v+A+y3Bcr+agGnwOa9gDMbPa8O5p/MRmjOmpaWl
pdU8hMwJ5/YHDD5c25/z355vsu2/X87hcj22yfCF4BxFpEqwjAu22SY//vgD
+zXANND7IHsrBM/4N/rZzwTP+MV/OHnGLwTP+IU/nnEJzwUBS/DHM8Af6sYz
UMbf27jzjFaXSpYhGEYrk21IzgGeccP1N9C1111HPwfPMEryjDZG2XjGZJNn
zJolGEZqisU1khWeYc1sMSotVfKMhbRp8ybazDxjJ1VUVlBlpeAZxcXFVACe
sXoVrVq9mpYtW2ryjEXMKTIzMhWesYf9HMjcAM+AL0NyD8kzshSeUVJs8oxy
zTPCpVDXP1qRIbdtkH6/I1uYoRboXEvQ/Y0Atw+WvdPQTAMeXfSzhLp8ZyEX
TUtLS0tLq7FlcXd1mzi96fox3YTcjqba/rtWe9FHAn6BfI5InWHilPRm/Ah4
4SLM3Hj11VeNeo2zMsAQrr32WnrssceswjwTVM+ePTgr87EePejhhx6hhx95
mB555BHO3UDZ7yPuJ//2O+Nn9HzY+0jUvhLRF/LgQ97+kIcelLc3bsu3ET0s
3JfS3dubwtd3727d5+GHHzbqEb5E/wn6YNBTIhlMu3btrNeEWbMihzSO0tLm
cH4FZrCCaSBn1MoFMS7TkJ2ROpu9GOj3WLZ8Gc9PXbNmNWWvXcscAgUmAUZ2
8GA1VVZWcEZJaWkp54CK2SZ5tG3bNq59+/aZtz1En3122KjPqHh3MW3ZksO3
x9xW8BL0nHz00XrOz1ixciXPPUG2Rl5ePm1Hb4tRWuFRqOsfrchQoONatbQi
Q8gjDzQPLdB3Ptj5Fr/7NY6s8oZiGuj/xX5QXZePv6FfWWdlaGlpaWk1lVKS
k322v+HeDuX5md/aWNt//I35RVIK53O0FH7hlOw3QbnJyzNetfEMzGrtofAJ
VK9ePalnr17MNMAxUI/+7nf06GOPcvF9uOwsRDINO6d4wJZt4VpK9obkGd0V
hoGfH3zAexvwFTCMRx5+SHAWo5CvgUyPexWegfwM+fzGjBnNGaOYtyLzODF/
dabJM6IVnoEsUPSXCJ6xjGtV1ipavWYN+yZ2FUieUUbVzCgOcs8JsjpLS0oo
J2cL5WwRs1q3mzxj//59dOjQQTrEPOMzrhLztmAf8HA4ecZK5hkiJzQPj7VD
ZHVohUf+1j/6+DYyZb3HbjMrdH5GRCkvAMsI9v7L29jyggPlePnJ9JL3R6bT
T5EzK6Muy+/dswfPdNfS0tLS0moqjVBmisg6HeZtEc5VN/b2H5khOI/RkvwX
wXRB5mdcsPMMObMVmZMvvPAivfjCC4JntG1LN950E//+wosv0PNGvfTiS0a9
SC+/ZFy+/DL//Pxzz9Hzzz9PLxp/f9H4/UX5d6Pw8/PPi7/j8jnb5fPWJf9s
PI6sZ58dSkOffZbr2aFGyZ/5d+NvRj1jXg595hm+fNa67VDrsVEvmM9/0FNP
0YABA6h//8etHpabb7mFmQxq7NixPGsFBf9Fatps7i1JTEjk2SXIyuCZLEbN
mTOH5sydQ0szM41/t4/43w7ZnZs2bmYvxe7du7nKKyqYURw8dIh5xd59+6iq
qpIKCgu476SoqIiZBQq3OXz4MNexo0fp6LGjVFJaSrmcDbqFFi9ZTAvmL+CZ
rcgZRaHfJD09ndIzMig/H3NTdvLcFK3wyN/xh+YZkSm/PF7dbun3+6KXT49J
qBVkzlEg5hms6jv3xM2zG+rykSuG3HYtLS0tLa2mFLY/zXFfuqG3/5Jf4BwK
MkO0fGXNN1H6TZCd8d1333Eho/Kpp56kJ598kq6//ga6vO3l1KVLF2s+aiLP
9xDzXDHXA8f4mPGRZF6HnEyZmZmcJK5L8ngEI4iLt2ad8rzT1DTLA8FswCjk
U8j5IfBFoNeDL2UZjyV/9ljXJdmWb1WyvBQzR/DYU6dO41mt4BbXXHMN1623
3kp9+vQ2qg+N+3Cc8RyN52o8T3kfPL/58+dz4WfMZ5VzVFEfrf+I9pSLGano
LZFVVVlFVVVVdGD/fvr000+5jhw5QkfBKYw6cuSo9fuxY8e4Tpw4QTU1J+nk
yRqqrT1lVC3nYXAeqFHIyIAPA14QMBPU2jVrKdOcjwKPh+xz0QqPQj0W0YoM
ObdZml9FnvLy8gJ/n0N4//3tv3RQ7+92jifIY9al90RkZUyv9/KxLdXS0tLS
0gqHmivP+Knb/149erLnEv2sZzW/CEmSZVxwXPe95BmrV9GTTz5l8ozr6fLL
L6euJs+ANwEcQrKDBNOz4PH48gxkZwruAebgYZYBpiF4hmAaqSYXsPEM637J
XnbhsfML61JlHQ6egbmp4udkLpHjCZ4x1Q/P6CN4xrgPrZzPVPO1OHkGP+85
Cs/4yJdnlO0pY5YBH8aBA4JnfKbyjGOCZbjxDLCMkydPMstgnlEuecZWL89Y
bvKMLTm0du1aysxcyjxj+7btgmcUaJ4RLoW0TtP5GREjv9ur9s1vm6tVdzlZ
RqjzWAN6Sf3dN4Tr3JYfCtM4Z2Zl1Gf5yMrI11kZWlpaWlphlK3fpH3z2beq
6/Yf21T4K9l/cVbzi/royNEj1nE05ziUlnKVlZZRaVkpz+iQx/bIzcDcj06d
OtP06dNperRR06PFz0YhIxO3xzxTcV00zZw5U3g5YuME50hKokTj0hOgwDZw
+9i4WH5MZG5auZsBSt5uRvQMY7kzeNn4HZczZ8wUl7hupvfnSZMnUVRUFPMM
Odf1lltuoX59+1Hffn1p8qTJ1jxWzgA1ih8jWixLvmY832WYKbJsKWdmyN4P
9HkUFhVyn0l1dTUXekhkFgb+/aU/A+zCWceOHrMYx0n2aZyksrIy2rhhI/ey
yPkmGRkZtGHDBi4sH79nZGRayy8qLAr3R63FKpTjj+ayDtb66fJ3nt65TdO6
+GTlfLVz9I7585AGeP9D8VoEYiTBlh+IaaC/914zK6Ouy4fv9VTt6ab7R9fS
0tLS0nLRSPAMx/bvVG2Y8zOqDwbd/mP7izko2dnrwv58I0XIathdtJsv169f
x34Mzq/MFrM/Pxw3jvM7UfAuIF/ilo4dacqUKVyTJ02iCRMmGjVBMAXjOB+c
Y+LEiTTJqGnTplk8wepHMf0bXJ4kwTES0YMSxxUTG2vxgmnTpynLmkyTjOWp
NYVnqE7hOarydlOmTmHfxTSjrOumeH+eat4GP+N5Ms8YM5Z+/vOf86xZzDd5
vF9/evzxx/l28InAhzHd2D/E68H98HpRWIbkNiuWrxC1wlvI9sR81oKCQuYY
yFyDN+PwEZGJIVkGvBg1NTVUU1vDl9KTgduAe+Dy5ImTzDiKS0osXrJk8WKe
BQuPBvI6UDI/A7NesWy8t0XGe6wVHoV6/KEVGQp4bKjf74tWQXtM6lqBZrS1
t18G4hqByi1Pw8rKqMfyse+os8e0tLS0tJqDkCPg3O41m/kmSt3WpSvzi3XM
L/T5gMZQYaFxrFtYaFwWMr9YvXo1Mw38zDxj7IfmLJMeFs/oqPCMScwzjGP7
iVHWnA94M8AJJk5SeMbMGRbLQFk9JEmCZyTKTA2jYmNj+HFmzIi2+AF4BLwU
Tp4xmXmGUVMmWyyDmcXUqTR1msozFJah/DxxovBnjBk7ln4BnvHzXwie8fjj
1B88Y4rkGXOYrag8I8qoqcwzptMM4/WBXyxfYWcaXp5RQIcOHeJinmFmfKr9
JbXgGTW1zDFQNTaecYROnBSejRKTZ3xs1GLmGQt4NqvFM1ZmCX9GZobCM7Q/
I1zSx7ctS+qxoT82r/NALy7lu+yfuHJKx/se6P1vKC4SbPnSp/Hted+sjLqU
zsrQ0tLS0mpO2vDxBp/t2ehRo8L6nLB853YW50O0GlfIfkCeJed1GvsryKLA
7+Aaq4x655136Ne//jUXek0uueQS6tChA7MG9k8Yx/eSKcCrgHxNZgkmM+Bj
/WjBJtB3IplFkszSULgGro9jnhEr+kvMx1e9IMwwHJeTbL9PdvnbZJ/byuvA
XcAmZL/JpWa/CXhGv/6P899kRofsN5luPKeoqPHMQfBvhVmpKJmpgVq4YAFz
BnglkM+JWaoHDhzgAp/gXAyjwDMk16gxOYZVNSdtvSeCd9RwHsfmzZspxyj4
MphnGJfr162n9evXM8PYu3evUVX05Zdf0ld/+Yq++uov4f6otViFevyhFRkK
dA5ev98Xn+S5lmD5Xv76TYLd1m8PitOr+hOWP+qDP9LQIYPrtXz4YsN9vktL
S0tLSwuztEpLSpmvq/lPzu1fuHyEWK7b9v/cubNheT4tSWmzMZ8jlY/LZVbn
7NTZlk/DjWe0Z54heAOO7adwv8cU9kMwy1D6PMAzos1ci7i4WDMDNN5iGDIj
FJey3yQ2JtbMwoh25RmTJk+2MQzRhzLZ1b8h2YV6H1tNhL8kij788EORn9Hq
UuYZ8GaAaQie4eGsUckzphmvCSwDlWb8uy1etFjwjAVenrFA4Rlr1q7ljFDk
gKo8A3X0yFGLZ7Ano8brzcClnWfUMs8oM3kGCnNaF3K/STqzjHWSZ1Ttpaq9
e5ln/OUr8Iyvwv1Ra7EK9fhDKzLk3I75HJM2o8wqreCy8tND6fdo77sf4+/9
93v/9n5uE4bl9+7RU/f2amlpaWmFReADgl+k2POrg2z/MtIzwvJ80efv3P7i
eWs1vubOm0tz5841L+fxzzg2R9YkCn0Y3bvfT93vv5+uuupKat26NXW8paNx
XD+TZppZnZwLGi18GMjJkN4NkZc5k2JmxVBMzCxKiE/guac8EyXJY5+7ahT+
jjki8GggYxP3m2FmeoaSB1qfQp8KPBrjxo2jyy5rxUzjZskz+j3OPSXy+aEP
Bt4RvEZwFhT6PLKyVjK3QJ8HasWK5bR82TJavnwZcwxkdG7JyVFmtB4VvKLm
JOeBcu/JkcN04sRJnzzQ48eP0/ETx+mEcSl9G3vK9lizWdMz0vn9wnzWHGYc
ObRnT5mYj3L8GH3zzTf0j3/8g0srPAp1/asVGXI9V+5yDKl1cWikmZ8elAsE
6icJgUW4ejEUttDUy0ev77fnz4f7n19LS0tLqwWpBPwiKZmeAb+o5/YPvsJz
TTzn9OzZc8Zyu/lsf9dlZzfp82ipQv6CrOXLl3Pmw5o1a6i4eLdRxexH6Nu3
L9dNN91Ev/rVr+j2229n7hAfn8A9JMjvRCWCVVhzSpD9qfxsXsrfPYlylgmy
QBNdZp4k+sw9cfIPjzK3lWe24nbW3z3K/FZ5vcf6Xc58hX8EPo1x48dTq1at
uJAP8nj/fsw0wDpk1ofvHBYP51Xk5+dzFfBc1ALKy88TPGjDRtq2bTv7JZBT
cuLEceYT4BQi+7OWfRky71POaJUs4rhxKfNCUcw2jEK/Se6WXNqyZQvPVEH2
54qVK6nQWHZBYSHfHxzjm//8hr7//gf68ccfjboQ/MOg1SgKdf2rFRkK9by6
1sUh6c8I6m0Ixixd+IFrPnCgHpUmWj7OMWlpaWlpaTW2MG8L2xw5q6Shtn8j
h41o0tdheTmVAldBj4xW48uHZyxfwfNNincXmzxjpuAZffrSjTfdSFdZPEPk
YIBnxEqewXmfiRaLSLQxCSefSHS/PlFkg3oSHbfDYyc5eYWXcajXS27hsXlA
nDzEY+MZ41We0akjzzex8QyeM5vo4DWJzDO2bdvm5RlGIfcFPGPDxg20ffs2
2rVzF+etSh4heQb6R1SeAX5x3GQZkmv44xlbcrdYPAPZnxbPMEryjP/85j/p
hx++pws/XmCmoRUehbru1YoM+T1H7rhO6+KQLT/dnwciSJ9HoOts17f383MT
LR/7XiXFJeH+J9fS0tLSilBhzmNmeoav97ERtn+B5pY3pDhr22X5+txA02nh
wgVm1sNC45h4Ba1alcU5DJWVFUZVcn9I//79udrd1M70Z9ymeC88gmMYvyOD
A3NNOV80JZVSUo1KSeH9QVxK5sDMAp6MBMEEEszyKCwiJSVZ3Nd4DDwW8ko9
FudIdF2+5fdQuYjCRpy/4zI62oVnwJ/B+Rn9Rb+J6eWQz1kwFnHdps2bmCGA
JYAzlJXtocKiQtqam0u5RmGuCNhQaWmp1UOCWay1p2qptraWjh07ykwDPSgq
77D1mziuLysr5b4SFDI78G+zaOFCyt2KZW5lPvK3v/2NCxzjwoULRBe0PyNc
CnX9qxUZst5X57ZN+3EuWsm5IIFYgM/3O8j7HzTHIgD7bIzlo8dXZ2VoaWlp
aTWksF3JyEi384sm3P6tW7uuUV8f5qK7LV/nZjSt5s2bxzXfKGRAwJsBzwHm
Y+zbt4+P2Z8YOJAGPvEE3dQO/SZXsT9D+hzUGSWYa4r8jXlz5zHXYLaROlvh
EUnMBsAtJMdITERmRqKZqSF8FngssAzcRzISlD+fR2IgD0iix9Hb4vWN4H7T
XXhGJ/CMfv3occd8k0Tz+arzZpFhUVS0m3bv3k1VVZVGVbGvJT8vj30auB5Z
NuXl5WbOp5hRUmt8vwXPEB6MY0YJXnHSZB6+801OmlmhZWVltHnTZtq0aRNn
ueJ14N9+06aNfN2nhz618Qyt8CrU9a9WZCjotrm95hkXo8A03GaBBN3/8vP+
+9ymve99rJ4Q+XsjLV9kZYQnD15LS0tLK3IEfgGGgO0KPH/NYfsH5tDQM0/O
f/utjy9DLX1+oGk1n3nGfGYaK83sDPAMsAwU+jwGPjGQBg4cSO2s/IzbbH0d
yUliRonkGbhMmyMYRCrPghVsQu0TEWxAqYREzr+QM09we+YZRtl5huQW3r4W
6dmQngw1qyPRh3PYmUc095tMpvHj7P0m/U1/hne+ifc54zHETJYkysnZQruL
igTPqKyiyqoq/hkZGnl5+YJnlJawdwO+DOSAYu7qKdOfITIyRG+Jyi7EfJMa
1+vgz4AvBDV7dhq/buS5bjIZBzJH//73v3P9eEHzjHAr1PWvVmTI7f11m9Gr
dfEJ24tA76m1vxXC+++WcxZ0/6x94Mesz/LDlQOvpaWlpXXx61TtaeYXoyW/
aKbbP/gl0OvSEKo2HucZx7wVdfl6xnnTKzVNeCBmp82mpUuXch4oPBqlZWVG
lXIeaM+ePalnj5507bXX8MzWLl26Wr4HNb+C+0OMAo+Aj4H7SdT8TIUvcA8H
53cqj+G4XaLHwTvMHE+R/Zlk9YHY8zOUfAyP/XorN1TmgRrLmDJ1Cnszxo4d
K+a1GoV+kwEDBnBhHqzsmUFmCGawYP5KXGwcF3pz4MPI35ZPu+HTKCqi7du3
W7NGCgoLmGmUlJSYfSVHuHekxpy9Kj0XJ2uEb4OvU+a0ihyN43wp719SWsrZ
GVu25NLChQuZH2HOSWFBIfe9fP755/T9d9/Rd999TxdI95mEW6Guf7UiQz7v
rdy+OrbfWhenAvaetHf/2e39d+s5C/aYfvf/6rF87HfCO6ilpaWlpRWqzp07
S+uyff0X4d7+3WM8F2yfZ82YFXD5uM3pU6fr9dqrqw/y6w70XPM1ywiL4J9g
npE6m5YuEzxjzeo17AFAXwPyQHv06MlM49prrxU8o2sXy+tg+TQ88CsInpHE
PEN6GWSmheqlcMnx9CR580OV2zv7UezZnh7b8tV5J75zUDzWctS/WTxjzFi6
tNWl1EryjIEDuMAz5OvCTBcx1yWOc1Dj4mItnrEtP5+zMlDbd+wwecZmztYQ
PKPYwTNq2KcheQa8FzW1IiPU4hknT4h8ULOOHBVZG/B7CJ6xxeIZyJwpMPNA
Pz9zxuQZ34nsDK2wKtTjD63IUMBtrn6/I0KBmEao73+g2wScdVLH2atu99VZ
GVpaWlpaoQhzT+E3wHavt3Es+FO3Pw21/bu3293MFuANcW7P8HyDLX/o4CGU
aRw7BfNs4O84xho6ZHDQ7W/+1vzGfCu0AojzKdATMlv4M1auXElr16zlXEv0
SMTExFCv3r2od+/edO1119HlbS+nrl27+s4u9ShzRYyf5bE/+zQUtiFZhZMr
eBR/Bm4jGQbzA/gijEvO6UhKtrIr1BIZHkkuf3NcZ/bGyMeZOnUq84wxij+j
0y0daeDAJ7jHZvKUyZRi9svIuSvyeaF4vsn27TyXVc64xXzWrVu3coFlgAsh
P+OowjPYk3HypJWpoXoyThw/7uPJQGEGCgrZouLx82jJ4sU0b/58ysjIpMLC
Aq5Tp07R+fPnucA1vv/he/r+++/D/VFrsQr1+EMrMmSbkx7gvde6uIV+XLf3
OdT3P6T9vyB/q8/ysf93voH7iLW0tLS0IkPnzp6lPOO4HPyiVyj8oom2f/CC
ML/IXsc9LsFUUlLqm98RYBm4LTJLRw4bzpfgJaFuf3k2mPY7hlUymyItbQ7P
a12ZlUXr1q2jiooKLvRU8LxWo2644Qa68sor6bbbbrM8EAny2D4+3rxM4Jko
8C6whyE+3rpO5R9JCodIMpkDsjoSPXZeEB8Xb3oh4qxc0RRzdgr/bF6mmvmh
qdbfUrx/V26f6rgfeMa48eO438TKA+3UiZ544gku/B3/PnOMkgwkybiUr3/D
hg20c8cOZhjgDPDvgmHg9507d1G58W+4t2ov7d23j3MyOPvTkZUhc0B5Lqs5
70SyC2RhHDp0iD41CnNLUKWlZZSfL2bEYlbr4kWL+L0rLCyy5sLKPFDk3/wf
2Mb/6fnH4VKo63+tyJDrNk+/3xGpYD6NQO+/8/qfss8X6vL17DgtLS0tLVWh
+C8aYvtTn+2fl1/Uz0+I1zZy+PBG3f7iOZ47e66B3xWtusrLM9L4mDjL4hnl
Js+IpT4uPEP0bngo0WQYkj8kmF4K8IfYuFiKl5zDuF76G1DMBpIUvwR4hjJ/
VT5OPD+OyTMcTIIZBpd6fYrCLFJs11uzX5WaNnUajXfjGU/aeQbK5gcxX/+G
DZ/QDpVnlJYwz9jFPGMn/xuKWTF7Ba/wyzNO8IyTo0d9ecbBQ4eYaUieAb/H
NoVnLDJ5RlFhoY1nfGPUeckzzmueES6Fur7Uigw5t33++kW1IkNqvrnb7KJg
/cK2+7S3/+58nGA+Xn/Lx3kmfe5IS0tLSwvnOXHuNSUpxcq0bMztT122fyOG
j2DuXt1AuZ1SeDyeF9uA2188XkPli7YEYV+pMSW9B7hctmyZ6DfJzqaK8gr2
FoAp9B/Qn/r370/t2rWja665hu68807TVyEYRII5e1XkbZo9J4keKws0KcmZ
1enNs7Bu7/hZzfK0zSRJVPNCnfmhHlsGh/R6OHtj1Dkn06dP54yM8VFR1KZN
G67OnTuLfpMnnqDJkyfb57N4vLmiqM2bN9GuXbs4t2JPeblRok9nT9keKjMu
q6urLTYheYb0YVhs4/hxa26r6uFAz4l6W1nIapV5oAsWzOdeofnz5/P7tjZ7
LbOOstIyvt1Raw7siXp/RjB7Vn9n669Q1/9akaFQOb9W5Ih7T5wz54K8//7O
D/lkBrvsE7rdxt/y0SOM/DYtLS0trZYni18Yx2zPDB7SpNufYNu/kcMEvzhY
3TTHGMjztHyV9Xz9uL8+Jqq78G+X14j5Iqo/Y9my5bRy5QrKXptt+TPgkxgw
YCDP+ujQvgNngt51111WFgWO8SVX8PaPOPIskszrfOaM+PINb7ZokpV/kWT2
eSQmeGedqJcJytzXBKWs7I4E99vg5+joaJoyZQpNmBDFWaco8Aw532SSkgcq
s0ytuS7G88zhzM9CKios4n8vMKCKykqe21pVVUmHjxym48dUXuH1YBw5esTK
+lT/jp/hsfDWCb6UtwOryMnJ4UIWKP5t55j+GtRHH31Eubm5XFXG89i/bz/t
27+/Xp8PeLzwXdbf3for1PW/VmTIdfvo3G7qeTYRJzVPI5T3P9h+XyD+GXDW
nVJ4Tt/qrAwtLS2tFiMvv4D/wiXDsom2P27bP3gaMjIa3n9RH5UWl3IeKJ5T
7549XJ9/7x49+e+4nfY4/jTJf9PGOp6cO3euVbLfBOf4OT+jXPIMMeujQwfB
M34teUay4A9yBquV1ZnkyOm0cic8Nh+G27wR6dmwZXeaj5VgMQyZMSryRi12
4eQdkltYvyeYLMObUerlGRNsPGPgQC/PkHNorX4ZT6LFXuQMk8KiQv73wr9b
ZUUlcwQUfBnMIY4fs7MMs/zxjBM2nnHcxjPQ05KTs4V5Bt43/BunKTwDM1dy
c7dQ7pYtzFb27d1H+/btq/NnA+vEe+/u1qifv5agUNf/WpEhazvuNitdz+eN
aKl5GsHef3Vf0W29EFK/coDHyc5eF+5/Di0tLS2tJpCcwcE9Fc1g+yOXj1la
yUkpzAK+1X3vLVry84LjSuSaNLQ+2fAJZ1oiB+ITvtzAx8plZr9ELPIzeveh
Pn160003taOrr76a7rjzDm+epzKXhPMpeP6rkruZkix4gJNzWL0kii/DNosk
hZKVjE/0fPjOM/GdceI750R6RJJcZ6PMmDGDpk2bxj0nbUye0alTZ+rbtx/1
7dePoqKiLIZhm9NiPv/Nm3MEzygs5H8vVGVlBe3fv59LzmbF/BLJMI7KfAx4
N4y/oxfkpFHHTxw3Z5/UUG1tLdWeOkU1xiXuX1OD+wsWUlJSwssFS1m8eAn3
miBDA1muXCtX8NxdFDI8Cs1cjbqK++raS55W3eCfvZaiUNf/WpGhUM536P6i
yFUoGaEhZ6sFyY3voJT8G3LWm8q7q6WlpaXV9BL8IoNGDB9e56zOxtz+gF8g
lwPeBz1HS0uV+lnC56ShvaMbTIahFs77cwbEnjLBM/r0od5G3XTTTYJn3H6H
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
klZkyvn5R78JeMa06TNp9JgP7VkHyneoNMR8UDmHA5c49sUMUDAN8AzuN0lI
oL59+3Bdf931dHlbk2dIH4aTaST6n9fqUfiCMwfDyyA8LvkYXj7i00viXJY/
zuFn+WJeK/JAo7jXpHUb2W8ygJlG1MQJ3udlvsbU2c75JoIHYe4IavuO7RZb
AM/AfNXKikobxzh23OQZDpYBvmHjGce8t6utqaWamhrua9m4cSMX5rOCW6xY
sYI++ugjLuSBgmcsM8rbb1JEZ8+do3u6dXNdz77y6mv8efpw3HibP0N+/nTO
UP0V6vZPKzIUcN9Iv98RL1tWRh32k8X89enhfvpaWlpaEaFTtafZjwzfel18
FlaWZ5A8zvpW7x49KXr6dObeyOXX0moJcn7/pD8DPGPylOn09jvvuX7/4HOF
3zWYcJxbZOYrbMvPp7y8fNq+fTtngyJDIyE+Qfgz+jj8GYmJnJfhsXpOzJ/d
vBNqHoafcsv99J1r4vF7H4+jZyXU5UueMT4qitqwP6ON5c8YYOVnmDzEfI1u
+RmVVd48UPz7+fCMygo7zzjmyzNOmBkakmcctfGME1RTW8M8o8zkGRtMnpGZ
mcmXPv6MZV6ekbd1q0/+p6xBTw3iPpPRY8YJf8agp31uo+eb1F/6+LZlSd03
8nduRueBRp7OK1kZobz/zu9//ladlaGlpaVVX2EeNvjF6FGj+BioLuvf+pZb
xrtz/d+7p+YXWlrO74eXZ8ygKVOm04SJU+jFF192/Z5hplAw3+rixYutwjn+
lVlZtG7dOp5tUmFUQkKClY2J+SZenpHATAPH+ikpKVzIlcCxfmpqqp0hOFiE
xT3UmSbO+SQBfvbLJ3w4RvDly36T8ea81laOfhMxr9Xr7UCl+ckDLTPzM8Az
pFeiuLiYKsorjL9X+vSUOHtPnPkamGXCnEOZe4ICI/n444+4nwW9Jnjv0tPT
aVXWKvZmoPcEnjpchzy5HTt20vBhw1zXv4/+7jF6/4NR9MdRo5lnjGWe4dtv
ovNA669Qt39akaFA54D0+x2ZQj/ePXd3C3oO0G1/+h6ce9BZGVpaWlp1kuQX
8F/Ud/3rtwfQ2SsShIWo1zO/mDad8o3973NnNb/Q0oL88wzhz5g4cQqNj5pM
PXv2dv3+BcsHXbJ4icIzllNW1kqLZ8BT4J9nCH+G5BnJySk0Oy2VezGYZyh9
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
+jNMniH9GaV7ZL+JmQe6A/6MnT7+jLU++RnLKT1jua8/Q80Ddek3QX7GuKjJ
Dn+Gmp8h+k3AM3BMO2jQ05wP4bb+wbH/qlVZ5rzW/WJeq3Hcj7mlmPUheUZH
4/5xcZhfYc5rTUxkhoHrYnF9fLw9z8LvnBE/GZ/+8kD9XLo9dqjL9/abjPf6
Mzo4/BlJ/vtNdu0UPEP6M8A0CgoKaPPmzVycB7qnnG9zxJmfceyo3Z9h/s3X
nyHmm8jrincXs//j/vvuc93/fuThR+ipp56mwYMHm/0mL/nwjNfffJveelud
bzLa5BnjHf0mSh6o2W/i8Tj9GUto0aIMWx7o8pXmjBKnPwP9Jrn5lGd8J/Dd
sPJAuScH/34VtjxQ4c84ZvNnnLL8GZJnFPlsL0c0M3+G2zGS8/unFRly3X9z
mUHclMrPy/NZfrD9zpbg00BunM9MwhD4o/wd+xRaWlpa4RSYqnOdhfVa0yx7
eMB1p7/tH7wjgl9k0yk9B0pLq05ym9fq1m/yl6+/FvkZXyg840/+80AFz9hn
HM+K+SbFxXuoyDjm3GXNN9lp5mdInrHBmwea5cwDFf6MeQrPkPkZ3jxQt/km
473zTeDPeFfwjBGSZ7wmeAbmnfQ05y456/aut1JGRqZx/LmeWcaB/Qd4RinP
Lh3Qn/tNOC+z4y2CZ8TFUkJCvMkzEjhrA9fj0pZT4fEyC/c5rM5sC7c5J+pj
2eeb2GawOh4z2PLd8jM6yPyMvvb8jCQff4boNxE8o4K5BZhGYWER5eZuodwt
W9hLUVEuZsX48Iyj/nnGYUe/ierPKCkppoHGe+L2Ht7d7W564omn6KlB4BlD
aIjkGS+rPON1c77Ju/b8DMWfMcml38SbB+p/vklmpj0PdHWAfpPt2wvM/Ax7
HmhF1V6Rn3EgWB6o+3wTec60ucjfeV1naUWGrP04R8+wbb+uCXkGzt25LV/d
t3T7XEZ6Rij2oTkrI8Dr9/ddvffubjwHUEtLSyucgpfBbT1+tokyJjAfy235
zu3fPZJfrF1Hpxs4z0NLq6WJ+00c+3GqP+Oskp/xpdJvwnmgzDPMea0na/gY
S51vUmX1m2C+SVmAfpMt9nmtWWvMea3LeV6r8GcssfebsD8jyZaf4eUZU638
jFGueaDefhPmGS++TEOffY66//Z+1/XPIw8+RKtXr6Yq45iyau9e9mwMGDCA
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
0z3EZ9+ugXULZ31Ot7jD1yjuuusuuvvuu0W509cvnOV33nmXM/WKdyzZaVL9
QvvInsN117W4MU1X0Ic//GFR2KZixowZonB+Vu+YfG3mNtZHHG2E7UnYzoT9
Vurr60X58MEfpv/3//6fKIcccgiNHTuWjj/+eLrlFsdm5Ec/etKNeZHLRcJT
zlPi5SrheBjsZ4K4F6Mf0/EPsAPT9/ogfxz9YosYFyttGOI0Q8X4WRmfN2b7
fGKC8ri9WDsKtp/0csXK9Vc6RibbV+hihBZz/XmfPQX4rQAAAIhnT8BWos7V
M6any2mfsZ9evvdCkvN21JXEPoMZpt2/a6Ozx9UF9p+PbcNe+vMjXwvbWIw7
j9p/Z5ojtdL1a2B/E+n5W0t6hsoGwNczZp/u22c4eobj5+FoDwE9Q4z3b3P9
QdYH4luso2CsC0/PCC73bC828D7v8HSLOx094667snXkbDJ4uadr+JqGa6vB
dhxJ9XvxN1parvPjZ3zoQx+iD/3Dh+jY444N6Bnfdo9rg69nsF0Jx/NgWw3O
scI2HhwH9dhjjxWF/XLe9ra3icKxUzmnyeTJk/3vP/XUU44Pyd6wnrGbtYxs
2SNifO6DnmEJpuMfYAeq982qZSCZ/v4B6uzszOkXupiaGj+PuOuvXJ7SzEv1
8Jh70cKFtOCi+cr6WWsoVezOwaFBmj1zlvL8Kp3DlPWluXOaSnb9m7PP4UrG
PAUAAJtR2WdML6t9Ri4PSPj+fwqt7nmjRHW8TrvuuYROCmrnU5rpyVeSvSuG
//xDuuzEI3LP/NTJ9JV7+2j3qKpfgSK/ie35WnU4uT/30z333kvnnHOOKHV1
dcJGg+0XcnqEqw+4thDC3sL77PqjeLYQ8ufg8vWu/uDpDJ5vyQZX4+D5UOzN
292yzvFPcfxLcuvZV8WLsxFX/6233iJibHAOWM+mgvOpinigp04X8UDYH3vT
pk3ZOpw6V69eJfK7cuHYnrw9lwMPPFAU1jTOYR+dbHniiSdo165d9Pzzz/vX
lv1Khl4foqGhIRoe3h+59qxheDlNwOjHdPwF7MBvV3lsV2X2ODxO5tg91QSP
ZTk+JI9rpzVMMdIBlXE6Da5/YhwNadncxkYRA6PPtblgrUVVP2sPpfYF4XgT
np2GXPoH+ktaVyFwHNBQzpg8rz/7CxUSSxQAAIA5exX5Wsvpb7Ln9xvo/HGq
+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
0jXfvIZWrlxJHzn4YDr4Ix8R58m2KFx4nuN9cg5WzyaD56d96lP0qWy5//77
6b9++Uv69a9/nXithaRBjp6xd99ekbPV0z10uUy4H/7qq68ZvRcF1Ynp+AvY
gc7moJzt7WkZujJpQr3jW9Gj963gew3vJxTnUqEr1B9zLF37zW+q7S90JSnP
apGah9BapjRQ8/JmEV90cKgkEcKVsC+PXDfHAxlJ2H9HPoZ0hXO3AgAAqG5C
ekbK0TPKmd8EVIigfUaqNvSMPRzjgX0j2D4jO6727Ag87r2H7TPOFPYZPK5/
3/vfR+PHjxd2DWtaW0VuEMdW41ZqW8sxMJ04mN58m1vWakqbt21b7jtreX9r
b/X369mCiHVtzv7YB4TL9773Pb/c6i7jbblv15YtPG1Pp8W8V3g/3n6v/da1
1NzcLOJ8HuzaZ3CuErbB4MJ6xkfc/CXvfOc7RTnyyCPptNNOo9NmzaKHHnpI
aBm/+93vEq+1FzuDbTD27nX0jOH9w07sVUlL8mw6OAfKa6+9JvKhgNGJ6XgN
2EHERkEeu6dK294cs1OODeFN2S+ikBiV/QMDIkaEfB5Jfiyq3D1J8TJC30mF
P8fVz7YifIx8/iOZI0Ol44x03lu2xZCvPx8XAAAAoGOvF7PTf67C38RKXD0j
2P8av+TxmsnXynYab775lohDyTEs92TH22x/MGfOHFE++MEP0tvf/nb6u/e+
lz75yU+Kwv4YEyZOFDExp2T7l1OnTaWpU6fSySefHCnst+GVk0/2pifT5NB2
k3PTyZNp8mQnjwhP2efjpBNPohOzU45X4ZV/9uZ5/Ukn0if+JVhP9Dic4qyf
0jCFpk2bJo7ds7/4m7/5G3rPgQfRew46iD70oQ/RRz5ysLDVWLp0KS1dslTk
bv3LX/6SLf9H+/blfh1ejtX9+/a7MTP2hmxe9rv+JHuz67z8JsH1jt5BQudg
e5m3du9G+AwLMB3/ATswtTMoBd641s9pKsW7KNbPgvNSTHTzo6h+t6FzknOe
Jpy/zj5Dte86oV9MoeYVrF9sEXpLpeBYFSOdq0aG21W+RtNG2OcFAADA6EJl
nwE9w0J2pWsufkYQHkOzlvGW0DOcGJYhPeMDjp7x3r9T6xkNQs+YJnKW+rrB
ZNYrJkf0DFFO/oRYr9ccTnb0jMmfdPSME0/KaRoKPUOsy5Z/+Zd/yekZgfoj
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
6o8oD5fTnJ34jsoqqCTeQ71WVFQ4FaXXaDRidB2VlZVOVRiOBN9HI2rd8uXL
qacF80/iPWfFuvqqqyHlpgFwY79+0L1rt5j/fePXG/veQFqMSCRM3yUS4eOw
XyNQEa3wHK96raRjffnll6GhsREanaqrryd+B2vLlhqoqdkCtc77pqYmaGp0
qrkZmp1qdP5W4yn+h3tbSJtROJP0KKGQ6jfJzw8ZfcsLL7wAq1a9CmvXrjXX
BK/5Pue6ISdFPSe+64+ajP2a7zgsn2HB3E/O5w8chuf6oiGeF6j0myQm/DxG
sv+ad5brLRAIBALBFwL7NsKE7kegs+3c+TD//b8HSne17RPy/TFcwNHyGYfg
07VP+TQePF8+3n6GD2Hj+CBtex+YsJH5hLYe/+jBfEay59440fkmJTH5Jj1E
n8FvPM/SPT0F6IUBsfoMCPBCUHzGXti7Zw/sP3AkfMa78N5778GSJUtoPk58
htYXIJ8xf8F8mD9/PpSVl0G4nPmMSs1PKI4CuQ3iBKIVECU+Q3EHyBUoPqPS
5UCc95Goy2ds3LgRNm3aBE89+WT8//1yqlePnvCdzgE+Mvr9vffcA0VFxRDW
PAZ+F+ZUTGkeJVqh+Qx9vO5xVhCf0diAfEaDxWfUQk1NDfWG1NUin9FInEYz
8RmK2yAOJRzRfMZcw2cUzlTcBfEZeSHqw2HNhuIzVsFrr71mrgnxGaSvUXyG
//qjPgO5DNRwHDp0MC6v5YfqTVH3VqLxGUf63z9BYiDwWU3A8xyBQCAQCASC
1kJQXuuw4t8dzR5gV/E9sb9pOn8e/gyKTzDPgjvzbyfkXPgY23r8o8e+jeMD
8lpbsd+k8+fF93yxwc/XeZ5Jc9iD2E9w0PQVHODeAuI3bI1G3J3GzHE//PBD
+Pvf/w7vv/8+1NbWOlUDa1avhueff54K+Quca+NrdXU11UvO3P61tWtJP1Dj
fKYe5/bWHB81C5s3b3ZqE63HZbgO/S3r69R2tc78vw7XOZ9raGiwqp40EKR1
cAr5gvKyMris13fjP3f13P/usrTUGTQ+fif+brU1tfq9Gr9W6yzU8dWrY6RX
b+F64i7Ip7OBOIsmXc3IYWzdCtu3b3dqm7NuK2x1/kZOY9HixbB48SLiRbiv
pqi4mHp0sLjHBftMcnNzncqhbVGfsnz5irj3Rry+Ij8OHDhI9w1pNzQfwjoP
u4gLSUA+w8vLBnP4gsRAXM5K+AyBQCAQCARthH2WViCZ9RklR6PP2K/4hBOk
j8B+j9h92xqSth7/6BHkB5p8wvUZxTDM9/tT+IxDnkwLqoO6LJ8E2/+gpX6T
eECPjP/5n/+BP/3xT7Bh40bYsGEjLF+2jDQJOK8uLCiA3Lxc0hQs1nNz1E+8
vn49vP7669SDwXoE1C6ofow6zRnUGn6i0doOeQretln3ZjQ3NRMnsLV5q9kO
X2u2bIHNWzaTn8Rdw4Z7e6vizFcu+24vqIhGDT/CXIk6Dv+rLtRecL8IcSma
U8F1zvt65/OKz9hC+zLHvVVxF9u2bSUuAzmNrduYz2g2vBDqUNjvs6S4RHuJ
LCSvUNS3YP9Odk4O5GTnkC5k6dKldJ7j3RtHauDJ9w7yFZzFsm/vPvc9chmo
+UA+I8H9M+KVIDEQxHcGLRMIBAKBQCBoLQTpM45Oe6D0EZ7fN5/b8/8PYeO4
PmafyZ5jZD6hrcc/etgcklefcQK7PwLyTdp7XqvNZyhNBus09HvNa5CPArg+
CvZz+9h8E+WzgHPYzz77FD799FN4771d8Pbbb8Nbb71FPRVYyFtQf0Y4onwz
i4rJ2xPXoTZjzZq11AuChfN/nLs3NTUr3qC+gTQPxGfU1CquQGstiLNATYPz
GdwWOQJch3wB8hfoO7pNcwFNmuPA/SCPgP0cW7c2Q2ZGVuw9b70fMnAw9WoY
jsJ5bbA5C99yVQ3Eb9g8hpfbaKLvtWULak620N94rFs1/8Lfn/eNWauoT8Hz
g30s2EeD/Th4DtFfVHmPKv9R7C153ilcr/JfQsR9LCV9xnLjn+K9N8BkmBzu
HmIdzwHSZDi1n7UY+7XfxgGjzUhUP9Cg//21uTBBYsBcV38PrehxBAKBQCAQ
tBH2B+S1HlO/iV+b/rnwCR/E8a+I5TPabvyjB3qw9oz5PXiC+012eTNgLpZ8
E/MMHp+ZezQZ3G+iMzeDgOvYG9L14QDjB4r9Je++p/I41q5dQzwFaggyMjIg
PT2dMkVRO1Dk1Oo1a+D1Da/Dhg0bTL8FztuJd9i2zfRY4Jye+zawrwM9JbAU
H8D6i2baDjkE7EHBng+jnXC227lzJ+zYsYO4AtY/1Ol+D+Qb3njjDXjzjTfh
lVdegb7X9YmZl474+eOKY0FOotHlIxr1+0abq2hqVMs1X8Gci93rYi/HPhTm
cPA7YO4LFnEazvfCY1y/br3Ks126FKqrqqkoy7agEObOmatzXoqJ31BeI9VG
H7J69RqTBYMcB37HVStXKg9Y7YfBYL0FchHx7h2/vufggYMt3jOJiHjP6P38
hiAxcNh+k87CZwgEAoFAIGhdoJdDTF7rUfWbHIJP/H6cn5s+4l+waVwfT8++
motfA0+v/ftJMv7Rw5NvYp57t5I+w+43OW5/kS82Dmk/DNcr46Cn5wTnpYfi
PE8nb8gD7A3p+oqiF+jevXuIz8BcUcwwWbPGy2dgMZ+xsGihM89eDRtef536
ULDXAgu5BdJSbN2meiy2bae+i1rtn4Gaii26N8P2x9yqezOoJ0VzH6h7aKiv
p+2Qz8AiPoM+12R8LfAzb7yxE954cydxKcgr/PChh809k5qaangKm7NwuQkv
T2GqUfWUxC5v1JxHo+Yz6i0+oxnefPM/NJ/RTBoN5F2wJ2bdesVnVJHXSBXx
GVjoA4p8RXFxEWk2UIOBXiSkFWlooPNc5KwrtviMlatWulk2Fg1xgPwwlOYi
+N5xtTqs6TnIWp5DiaXBaAmB/SXiD5mwCLq+QRm9AoFAIBAIBK2FfT59RvIx
aA9wft4j4DfN8fcztJAvsuFfJ834R4t9+ni9c4AT759xp+/3Z3v3z+DMEpNl
oue07PfZkk+GyXDF14NqTvvZZ5/Bf/zHfzj1Fs3JX3zxRaqo7oVQ/RDKm7Ky
qtL0nmzZvEV5UNQ3mB4M1FowN8H+EZRPyr4UDW6PCfEe5Cmxzcz9cf5eqz1C
bW8L2sYp1FEYf9B67RHaoNYjh9LMvR1OhUL5lBuLfAP3q+D6Bssbo8H0nDQY
/qDB758R039i96a4fTTY94L7V2NtgzVr18DaNWvJc4RzXbCvZMFC5fc5f958
8vpEnwzkObDQR3Xjpo2U4cI+IytWrDAeoS8sWQIrli+HV19dbXgt+1rb15+0
G5rbcn1C7ZvBq9cwn9X7PKD9ZlnPk0hoaU6bbPWdCBIDMdeWfzv4fIIFAoFA
IBAIWgt+PuPizkfPZxx6ey7cGvCc7pKHF8Pfjuvo3oWKe3oG/EYeBvPe3nPS
jH+0oHwT3++/1ug3Geb7/Sl8htfb82g8Pm3wXHX3xx+TfycW+mNwNijOtXEO
jR6VyrtyMSxfsZz6JlBvYDgJzRVsY15CF87tm7QvBnMYyh8Tt9sGO3Zspx4S
1HDY+oxaS59Rrz1Dlb+G6vnA/o66unoP38AeoUo3oTwvVF6K2m67Mw6OxdxK
Q4Pl+9kQy13w8gbPNq5faIPvM7yuqYmPpclwFKi1WIj9IgsXmkxWrCLdQ4KZ
tKiFwUKeZhv16Wwnvgj9TlcsX0H5t1iYkbtyxQrSbBzu+ht/DMpwja/Zibm3
NJ9BmSfoqbFP+YUmEoJ8IYPmvILEQEwvURxdjkAgEAgEAkFrgbwcPL9RjsEb
4h8vwWPfCfh9c0cx7Dquo3sbSoZ2j81a6DIKVv6fNfdo6/GPEjEcEp3/Vsxr
5X6Tds5nuNmrR59ZYoO9ID/66CPywWA+A7mMmU7h/Bn5DPT9fH7x81ToQ4l9
E8xnsC6CeQ3mJYxvp+EZmkx/CXMfOzTHoPgMrc+w+k3qLX0GcyOKz6innBTD
PTS4WSjsc6GyVFTGKr7f4eEzAvJLWJ8RxGswt9Fgr2vwjM/L3R6aZnjR5jN0
ZomfzyhmPmOty2cgl4HnZ/OWLbDFKTznC4jPWEB8xoqVLp/R0vXnPFZVbs5N
i/cW7/PgIW9ua4LxGfHyb/z9CILEgCfHuYVrLxAIBAKBQNBaOP58EwcHt0NO
366xv3O+PxfePh5rvENvwswBXWN+G1/cNwt22jZ9bT3+USIor5X8M3adYD7D
9/uzvfhn2Pr/E4GPPv4IPvjgA/jzn/9M/RCVTuEcO5Sf71QIXnllGc2xkb/Y
rjUDyr+i2e0hMXN55UuB83H26azX/hamH8WXD2K201WnvTA410T1lNQTr8Hb
kP/GZjXP554T5D7YvwLXtzQ+8SH6c8yXNOj911nHgXwJ74P+1hxLne4rsd+r
jFbVX4Pj87FQ/ktxCb0aLYZzjtEDA4u3Qx9Vj++o/v7q/DbA2tfWQgQzZZzC
Pp+VK1eSR+jf/vY3+Ntf/wb/+r9/GS8Mb++J20Piv6dA96Ognwp6bqAOA8vO
AE5kHE6XIf0HiYXD6TLkegsEAoFAIGht7PN5Ux59vgnib7ByxPdif+d0ewY2
Hc+Eed9GmNAt9vdT9xEr4P9OqvGPdrfjzTl3n3e1Ap/h+/3ZbvgM+n/Hrr84
HFCXQXzGf/+ZNAJYOOfOD6ls0FeWLYO1yGesW2eyStiPs6m52aNlcLNLNY9Q
5/IU6HHhZoK421LfCG3vFvIjKnvE8skwfEad5jM2k3aB13n4jJqaFsdvaGyw
9lvvcht13uOoZz6DOQ7tZ6o4jFrTE8M+H6xJwfFtPqOEOI1iyi5BLQb6j8Tw
GZj1wpkrJnvFPbfoqaH4jLDFZ6xWfMbfFJ/B+TZ+PsN///Ay4jO0ZgO5C9Zh
mLyTdshnyPP6xIW/3yRGu9hZrrdAIBAIBILWxX5rbq1+nxxLFule2FV8L1zi
+22TnPwoLP7bcfjf/XcU7vVni3TqAcOLf+t70t7W4x8diEPy/f67uJX6Tezf
nz3Hb2oXea22T+ORf4b+v/KD1PNVeg5/gL0d3bkrZpn89a9/hV27dmmvhxdh
0aJFEHbmzTh/Rh5j02alHyBvT+wHMf0cDW5vBeWtKn0Cr2/QOghV9SYvhDw1
dQ9JvaV7qLd6Q5p0j4rHf9PSdDC3wOMjB4KZKVg4Hmsc7PFdPwx3fE9vieY3
GvT2DdZnjeakrt7SlLh8B/Ih/P3rtIakxqmKykoq5DCwj2fxosWwbBl6eb5K
Zfudcs4K7q+mtoa+I3JGeC7WrFlrtB7ow4E9QEVFCynnBGuF9tNQhX0rq2n/
q1atUvXqKljjLMf1q1a5y3Gb1Xo79ORYuXIF7Qv5EsyDRR4Fa9269ZTJm0ho
6Xm9nd0qSAwcSW+R8BkCgUAgEAhaE0H6jKPnMwAO7MyGfvZvGvKcHAI5Oz85
5mM70JQK18b8XhoC2QH7bOvxjwbsWdK6+oySduuf4ekXOIxXgsm0OHjQZLii
jyNzF3v27KH69NNP4ePdH8Puj3fDH/74R3jnnXfgv/7rv5x562tU619fb/I1
0K8Tc0d37txhskRUzwfmrdYqb0/tnbFju/KnoIwRmoc3e3woTDVwL0g9zfmp
P0R7ZdRT34abD8LeG+itgR4bqA8hX44m1d9CnhjOuLitOr4GGh9zXXc45Woy
XG5F+XVqr1Ltc8F+pdzvYbQklv+nyTJhXUe9m7FC+SvNOstF9+LgvtHHc/ly
xV/g+cRCHoTHf+utt6jwePn8oF4DvUyQP2CfEfz8rFmzqMaNGwcjRoyAx58Y
AcOHD4fhw4bDbbffBgMHDISBAwdC//79od+NN8KNN/aD66+/nqpv377O3zdS
9e17vVner18/Klx+ww03QF+n7M8MGjTQqUFwyy23wLBhw1r57j+x8D+v9/7v
r+gzEg2B/IXfR0PybAQCgUAgELQiPFqBTsxnHG2/iYPPtsBz37vY93vncnhs
6fvHeGQH4B9LH4Nu/mdAV02F2j0Bc9G2Hv8osH+jzz+jcyvrM7jfpF3xGbYH
Qgu9J1aGK/sfkCfCvn2UU7Fnz17Yu3cPfIZ8xscfO7Ub/ujhM9Sz+NfXv27m
3sgXKD5jp6tZqFN8BvIQ1GOh/UA5q4QyUZu5H8Xy2GxwdRCsdVB5pDXUu8H7
Jz5jK/MZzZrPcOb127dRzwvyBuzDQV6imkNhbQWOj/yL4jNU7wqNq/mHJt0r
w7yDOVarD0b1ezR59Rvs/1nv6jhYw0F5sVubdTZtk9knZsEgn7Ga+AzsLdlI
XA6P/9avFJ+xg/gMtX/iM15nPmOb5jNWE5cxG/mMsYrPeOKJJxSf4dRtt90G
AwcOMHwGcxfXX38dXH8d8xn94MZ+N9L765jP6G/zGX2J0/DyGYM0n3FrQvIZ
fj2G9JskLgyP4fPM8PAawmcIBAKBQCBoRcTwGZ2Pkc+AD6H2uRTPHD25UzJc
m9oIx9ZB/hE0pw7w6VgvhmumbIHPTsrxjxx4znv4fv+dcD5jl+ufwb8/sd+k
PfAZrmfjQcsbNBjs7Yj5q/u0LgO1GJ9++hl88skn8Mnu3bDbqb/85S/wm9/8
huoNZx69c8dO4gk2oyeFU8gxcA8EzdG3Kd0Baihqa+tMP4fiCdy+ja2638LO
MnF7NlwOwM42bWyIzRRptPpBlL9FvctdbN/h6j48HEKzGQvn/2+88QaVPT73
h3CmqvoOLt/R0viuh4ftder2nKhzo3pM8Hg4S0XxQptgk3Ne+furbRUfxN/f
9QdxfT7wO2FPTa1T2AOC2blYkyZNhqeeegp++ctfwl13DXfqLrjzzjvh1ttu
hVtvvQ1uv/12uOOOoU7dQTwHFy7Huu2222OWIWfBPMbFF18M559/Pnz729+G
s88+m+qiiy6Cnj17tuqtf6IR1Gfi/u+v8BmJhiPxSpH+IoFAIBAIBK0JM7e2
9BnDjqHfBJ9579meAwN9v2MvuWUu/O5Y5AyH3oRCX7bIxZ1vh5wdH52k4x85
/PkmydxvcoL1GcPaab8JaL3FIZ2zabwcA6D8IA8Qn7F3716qTz/5BHbvdsp5
Re9PrF27/mD0D+xTgb0bNdRDUuPxtiQNA/ZlOOt5Do7zcl7PuSPkH8GZJ5aP
pcdjwnhwNrr6B847afT7dDYYLQh7hKLmAnUiqH3g9dwvQr4c3G+yfRtpSrBM
b0u97Q3qjm80Fw2NgePTPnW538X9TuwJWlvjZq40b202fEpNzRY6p7gNa02Q
E+Jta/Q5xd4d5C3wPV4X/J5Y6BOKtWL5csrOxXpuyhQYM2YMcRrD77qL+AzU
TiB/MdSp4cOH0TIs1m/YNWyY9V6/DhlyM/S5rg/06XMdnP/tb8MZZ5wBHTp0
gC9/6cvw5S9/GTomdYALL7ywlW/+Ewv7WX1yJ9tnSPQZiYggrwy53gKBQCAQ
CNoSfv+MY/MD1Tj0X1AyrJf3eV3ywxD909HPmg/9KQr3J7vP+bC6DCuBd1vi
Jtp6/COE7Z/hFvpnnEB3zve8+oz2xGcYP0+nPP4Z/swKp5jDQO7iww//BR/+
60P4xz/+AX//+/+S7yfmemIWxtu/e9ubUar1AnZ2qMkS0fP1GiuDFOfchoNg
PsNwC27eKL5y7intY4ua26NnZ42uWu2fwVyJmtvX0Fx/y5bNpGtAzQh+hnQU
TY20L1y/efMWy0eUfTrrFB+AfMKbbxDfYueu0rFaWSzsRVpb6x6TGluNz8eK
WSqbN20mb1TWsWxy/nY/X6u33UI8D49fQ5oN7e2px8VzymO5GbC15j3rO9Ar
hMdfbvEZU6dOJQ+NMWPGwoMPPkj1gFP33Hsv3HvvPfT+wQcfggcf0q/O3w/p
7Xj5Q0498MADxINgoU/G1VdfDdc49a1vfYv4jI4dO8JXvvIVqqQOHeCCCy5o
u38IJwCB2oyAZYLEQEt6HLneAoFAIBAI2gJ+rcAx+2cQDsFHG56Fqz37uwzu
j75zlHkg++FPkYfhO5793AgTNv79JB//yGB6fDxzgHug9ET7Z/h+fyYKn2H7
YgThgNZb7D+w32x/4OAB2LNXeXsSzwFKm/GHP/yBCrUCZWVlUO5UZWUlVFdV
Q1VVFZSWlUJpaSmEw+VORSASDjuvbpWXl5vCz5eVlUNJSYnKHC0tMdthzijm
ZWAmBvIDqr/EzVZFfwulL9ihNAzO8WzctAmqF1XDoupFND7PzTGvA8coc44t
Eo1C1Ckcg8dXr06Vl+njKofikmJYWLQQFi5cSNtXVFTA888vpiwWzOFA7YOd
VcJ+naRFaeL+FMxqaYYlL74ILzz/AlRXV9FxYBXp/JAFC3D/Ec8xlZaWQVGx
s37hAtqGvUxxLOP10bxV+15sdTNVnOMgLYZzLhT/0kC5tpwZgzwQc0DKV6TO
7Bc/u2LlCpgzezbMnj0HsrOzIT09HTIy0ul60jV1zo3Kc41AmfM358TiOeN1
FZUVUFlRSfdCZaX6vkNuvhluHnIzXH755XDmmWdSnXXWWbrOhg4dkkingdzG
Wc66RILn+XwQpyHz24SCX5sR+Lf4ZwgEAoFAIGhF+P0zSJ9Rcoz6DMSh30HF
fZd7fuscta7h4BtQOLCb9RspGXrdF4b3vgjjHwFienxa0Q/U/v3Zc1xi8Bmk
s2jB4xMzVonPcIo1Gchx7NVZJeiZgcBlu5jPcObYOP8vYz6jGvmMSprnYpXr
+S1yGl4+I2zxGYpLKC3Rc+MSl894/oUX4NVVPj6jsUl7ZKhelR26X6JeZ5di
XgrmwCKfgftnPqNEcyU4J49GbD6jXHMyLqdRrl/xeIoW+vmM5xWfsX4daSvq
fX0j6Nfh5sq6nMaLyGc436fKOUclznf18hkLaP+RiD4mzR3g+oULfHxGvdv7
YjxSnXL9OLT3aU0t6UXYi4P7dpr0OSQ+w8qj5e3QP2M28RmzISsrG9LTkM/I
MBwV8Raaz8C/kfPB88TXNRIJ072AfAZmxyKngd/1ZuQzbtZ8xhl+PuMs6Nih
A2kzEpHPsLkM8QNNfATyVgE8lkAgEAgEAkFrgfUZ7m/RY/XPsPb522K4v0ey
9XvnRpiw4Ui1Dfvhn2vHeTQWyT0egZLfHnlGaluP3zIwN+Vn4M9NST7h/SZW
XqvJN0kcP9CWMljZ4/Og9s9AHQe+379f6Tb4Y/sPHIDf/va38LZTmI3BfAHP
ZXFeqzQNRVCE5czJi4vxtZjeq79LiF/AubCZ2+tteG5MfMbzi2G5ziFF7oC1
BFTocenMyVmfsIX6NzbTMVVrPiPsHBNyAQsXLjDj4/5R+1Cm5+J4nMhX2MeC
83TUcRCfoNdHSdNRAYsXL4bXXnsN1jmFPSrG50LrNFAjwVoI2zeD+YxqzWeU
OuPgeZo/fwGdP+QLSBPiHB96cc53as6cOaSTQG5B9cyo787+pk3MaWxt1poL
pdGg3h29ba3uL/HnvuCxKg9QxWcw34Hfjb//zJkzIS8vD0KhkDk35WHmKyqg
Al+pKsw1w88yR/PkL5+EH//4UXjkkYehR48eVF26dIFOzr+rTp06wZVXXgl9
+vSBa665Bi655BIq7EE57bTTWu8fRSsgribDpwUTJAb819ivyxA+QyAQCAQC
QWtj30a/l8Nx+GcYfALvLXkS+lq/by5JmQG1Hxw+aeTQP9bDs9d3tbI/+sHo
F39/lPPuth6/JfwLaqekBDzXGgw5Oz8vziQAut/E/v2ZKP0mNkx+ie2TcYRA
boM9MLEXpLCwkAp1DMhRIAeA83A1F59N2Z+U/6mf+WPNmzdfzdmdefxCrX9g
HUQR9S6oZ/2LnLn/yy+/7NRLsH79etJekO+G9q5EHoH9KchnYuNG0k4sWryY
eAfiVvR+eY7N/R34OnfuXHNMC4n3cLbVfAsW8RnIzTiFegTsCVm8eBGsXfsa
5c3isTC/4uozGi3NRIPxBVF8xvNQVV1FfArP+/EYsPj7z3POSX5+ARQ4lR8K
Oe/znQppPkMVcRW1da4WxPAaW42XiNKruB4irMNgfqNWe4tyVgp5oO7YSd9p
0SLn/DmFx8Pnp1jzT3hOF+v1L764BF566SVYunSp5nui9J1ycnMh16nvfe97
cN5558G5554L3/jGN5z6Opz3rW/BZZf1duoyuOfue+DRRx+Fhx9+GK67rg9c
1+c6yjz593//6gm8+1sfHk5W+k0SHnZvif3fEr82RyAQCAQCgaC1sP9z9c+w
8SHsLLgHepnfOl3h+pEvwK59Lcwv974DS0f2g0vMZy6H4QVNsPsLOX4QDsG+
9yLww57JAdrsbjAwte5zHMuHoH6T8RvhBCpC2gQuh8Gen0f+WdRrePiMgplQ
WFhAc37mAObMdfmM2YbPmGPxGfM8fEaR1kDgnB4/j74X5U6hzkLxGS/D+vWv
UyYp+4jSHB35jEalS0CtBOaVIp+x2OIzigyf4ec0vHwG/s3blpSouTtpOvTx
uXzGYuIykNMgPqNW8QT1Fp+xzeoBYZ2Erc9gLwqbz+Dvj+eloCDfqQIIEZeh
yuUzXD9P1H6orJcmpQnRfIbJREGuYos+V7a2Res2XI/UWt23s4O+E3I2+D1R
m+LyGSVGO8PnFz1BmM+IWHxGbiCfcQpxGt8iPuMyxWfco/iMRx5+BPpcdx1c
51TyxRfDV//930/Yvd8WCOIugrwVBImBoP4Sud4CgUAgEAjaEraXQzL3mxyP
f4aNQ/8Hv1s0BgZ2596PLnDVPTNg6c6/+XQBe+F/dy6BGfdcQ1wC/V7qNgjG
LP29s+YLPD4fxif/C7t+1QCrip6B4Vd0ieulltz5ahg+vghe2/E2vP/B5zGy
BSuv9YuWb6LoCcVNHDhwUNXBA/r9AU9+iSrVT3JAZ6/alMa+ffud2kfr/MDl
+BwfPSvQ12KOnu9WVlWR/gDntjXavwF7RJBjQB5iw4YNpji/BJcTR+HU685y
7BV5ff164i5Ij+EsZ+4CM044o5Xn5g317I3Z5GaeONthRgh6dW7WHAfuZ7Mz
HmeVuPkmOlvEWsb5IVh4jHRMTm3Y4HwHzadwXiv1fOg+D+43IU/QJnUcnMmC
OhI+B3QsOrdkM2WYbFJ5JvqcrFm9GqIVFVS2PgKPm85FbY3pG2nU/AnqNHh8
9PgkTcYWb6ZLc1OT9lN1tRyNje4xv7ZuHfWarFyxgvQtWOwhUsyamXCYvD6X
LFlCFY0oXxTsQ3n8iREw4onHYdidw6Bnr17Qq2cv4i7QGwP5jH79+lHdd+99
MHHiRKcmEQ+GnFZ+KB8GDRpEddmll5K3RiIhnh7D35cgSAwczjdD9BkCgUAg
EAhaGyY71Pw2+bz0GYwDsPu912DWTwdYvqNd4Mqb7oeR48fDhPEj4KGbLodL
zLpecNNPZ8G69z46ykySk2/8mOyYFn7/xV/3OfmEon+Gb4wvDp/h9o4gD8GF
XAXyGuSPcUhxGYcOuq+8nd1zglms+5wib1Af9iOfsXMnPc9Hr07WXaCWYunS
F2HZsmWwfft2ygBFjgHnyvVmXl+vM1frjZ4B598qm8TNMcX5Pc7zVZ5rHRVn
eeAr90uwhwT1W2gfDdQpGH+IejW/x1fuS8FtcTvcnrw6m9Tnt23danQVrHnA
/XCPB+sckKfhnFjkCHh8wyf4OAYen7NZcR/2duzN2aCzaF/f8Dp5fyxaVE08
AvfubNF8huozaaQsWPz+DdoHtM7Kva3Rea7MK+Ercxhb6Xuq70/fQ2eivPrq
q06thmXLl6l+ksXKT5WzWNgfA30+mc+IkF9GGWkyfvjDH1LdNGAAfPvb33bq
W3D22WfDWWecCeeed67xA/3JT34CmZkZkJGZSf1JkXCEOI0hgwfDkCFDoPfl
velziQST0+nxlJb5baLC31sk/hkCgUAgEAjaGvacO7mzyjc5Xj/QYCCvUA9L
56bCmJ/cC0P7M4fQFa7sfzvc95PxkF3yMtS+99EJGPtkGL+NsUv1m5zs/hmq
R+SQf6HOMAHDVxwkfsP2+fRpNA653AaAm3+CGgylzzhodv/pJ5/Axx99BP/8
5z+pp2O97usoKCyEmYUz4cUlLxK/sXrNGp3voebp7ENZr/NA680cvMHDAbA3
JesjVH9FrfGCUB4RzcQfsN8laSSYp3CK8ztUdmq9q4+oqze+nA2Up9pscktJ
o+As454NpQFx8z9qjJbD5QhYf9Fk8Rk8HvMLjXbuSb3OUK1V35G/P3EiWlvC
x4EaDvIzdQp7PJjPQD0Haklw/AYrm9XlheoUL6TPYa32zODvz1krTc2udyju
C/eJvTrLlr0CLzuFPTGcX4IeoOjTiseh/DEi1FdCvSWRKPXBpGdkwIwZM2Do
HXdQob/nBeefD+c7hV4YXbt0gZ49esIDDzwADzr11FNPQX5BAfXUoAcqesgi
nzFgwE3EhWAfyjfPOadV/z2daPh1ZvEyTgSJgSPR4ki/iUAgEAgEgtbE/o2+
7NDPxQ9UcNLBzjdhPmPcyeefYbQXBw8efuMjBGoxuM8kCG+99RbNj7H34skn
n6TCvoFMZz6bmZlJvRLoqYHaDe6dwO1Z87BVZ36o12bv35pHYF0E6xuIf6jX
PRGcR1rf4PGBqNN+EpQ9yvqP+oaYHNU6K/OjRuskWHOhdCD1WitSZ3pE3M/U
Gl6DeRT2ynB7PjRXQtyK4l1YE2JK98ywFmT7tu1ay7LdfH/sR6G8WVufMXeO
c943UM8Lalfs71SreR/+/rgcx2nUWhRbl4HnG7dTfT8b4ZWXFX+BGbTsk4pe
J9nZ2U5lUb4Jjj933lzjsYo9MKmpqVTf//734aorr6QM1g46b/Wcc86h7BKs
++67D0aOHEn3ivIMUbm+2JOEVVVZRRm4yGdcddVVzr6ugu7duxMXkkg4on4T
md8mDGzOIp4WR663QCAQCASC1kRMT4TwGYmJ974Y+oyDhs/4fLqNEJjDyrqM
IBCf4cybkc94yvAZk4jLyDgCPoP1AVu3Kp2FzWXg3+TtoOf0rsahUXEZFndA
83iTReq+0ny+jvtZYvkMzvUgbgJ1FhaXgX8bPqTO5UWYy6jzaR7YP6PB4jFU
Dmqj6Wnx8xno+9Gk9RjY77Ft6zbDZWBvDn8G+QxXn+H2mygPjw2k0+DxWYtR
w3xGneYzmmL5DD7/yNNs2Kj4jGWvWHzGQuWRinxGFvEZ2S6fMXeu8gB1jon4
jBnMZ9xCPATxGR07QFJSBzjn3HOgM/EZnYnPGDVylOIzykqpMNvV8BlVXj7j
yqsSl8+IN6cV/4zEQ7xr7M+2EQgEAoFAIGgtGD6js/AZCY1dvnyTzshnbDrp
+AzkHlBPgb4YLcHkssZxOeF1+Mr9J8iT7NnzGXz22Wewa9cu2LhB+VhmZGTA
2LFj4emnn4bHHnsMHvvpYzBu3Dj9LD8bli9f7my7gTJVlV+lq1tgn4ZG3/zf
Lnvuz1qFpuYmk0dqr3e1FPWWTqPO6DTijW90DfUu7+HRWtiF21v7aPDxI4bT
4M83NHp0GNjPYWep2t+fx/cfAxbyGexPEY6EobSklPwrVL/JFjd71ZdXgvwI
c0fqvdJi8GfWr1tPPUKvrnoVnn/hBeIxiC/RWTScu1tAvSA6L1bnrGBfyeTJ
k2HylMnw85//nHwuhgweAl26diHPT/TLwJ6Snj17Qv+U/pS/ijV58hRIT0+H
rKws6k/hTFfuZ+G/kc/APhWsbt26JZ4faEtZF+KnkHAI6i0J4jQEAoFAIBAI
WgvGD9T8HhU+IyGB+gzf788eJ6E+w/W3aJnPAOYpyDsjaLX21Th4yPiBIr/x
0UcfOfUxzc1VZmgIhg4dSnmaN/S9wcxX0QshNyeHsjnx+T16ga5cuRJ27NhB
RT6Zmndg3UOdpakgXYVer/gAVVvNnHyb6/OpuQ3kCoxnBGkoaj2cBu7Pz4vw
5xq1nwfrF5qs9Sb3VPtqcG9Is9GPxI5v+3QYHqPR5V3Ie1N/D8WPNNJxUs6K
LvT5xL9ZC4LaiaUvvQQvLX2Jsl0j2rcCPUlVf4nrL0L8jeZw3njjDXhjp6qd
O1X+DG7DmTKYefuSU6j7KEWPz9ISyHGuW1pqGqSlpUFOdg7k5GRDKJRnMlVC
oRBtk5WVSdcbc1UH3DSA9BNYp512Gnztq1+FU045BW688UYq3I45rnmcQ1tU
BNVV1VDlfB/0FKXeloUL6D3yHMhn9L2+L/Ttez107daV9ptICPTO6Byr2RAk
BqS/SCAQCAQCwckG0We0E7xXHOifcTLyGfuPgM9AbsLlMwIJDepZOWStxxfF
Z3xE3AJmaeLz+aFD71R8xg0+PsOZ72ItWrxI8RmrVsKO7RafYbQIdea9rSsw
OgVLo8H5G9yXYWeOUBaIpbNw+RHNa2CWSaPFZxh9h1cDErPety17dXJfTND4
Nq/B/SS2V+hWKzOF9SKsmfAX985gH8hLyGe8hHxGldE1II9BnqnGm7TG9Nlg
7XxzJ3EaO998w+Tp+vkMLOSdOLMErxtyGVjZOchn5BCH4fIZeZCbk0v6iocf
fgQefuRhGDDAy2d8lfmMfprPcLbJzlJ8xlybz3C+S7XNZyzQfIbWZ/Tt25eq
a9duCctnyPy2fcDW4MTTZogfqEAgEAgEgtbE/g1+P9Bk6P3kGvi4rQ9M8Pni
VwUwMKbf5OTzAw0CZ57gC/WiOHU4v1DkMVjr8f7771N/yW9+8xv40Y9+RHXb
7beRNwLWHXfcAffeey/cf//9MHLECBjhFPafTJ8+nWrFihVGa1CrvTPR+4L7
H7Zq/wbKD2lUfIHJVK33+l64nhMu98DcBW6j9B/Ke8L4c9haC1NNPu2F1bvC
67W/hEc3wt6fqBvh/hMrr4X5GbtPxPY3DRrf5lN4f8TXaA+NX/3qV1Q733jD
jIkeJOSb4RTyO67fhvLcsL0+eRw87tWrV8MapyoqosQnLFxYBDMLC6ifBD0x
mK/AjBHU3yCHgRkl6IkxZcoUGDNmDNWdw+4k/qJ///7k9dnRqTPOOIPyVLEG
Dx5MHhkPPfSQ8fnALBT0xVDeGFHyx6iIVgTyGag7qXS2Q75jsM5r7fXd78Kp
p57aSv9qWgcxPgoBfhoyv00c+PtNAr005HoLBAKBQCBoRWC/SQ//c5bkOyB1
y/tfiLmu4Aiw921Y/NM+Mb8/T0b/jCAQnaH/D/mM/UfAZ+D6/TrTBPmMd999
l+bUOEfFGjx4EPTq1cupnsRnPHD//fDggw/CyFGjKLcC/TOYz1i5chX5anIv
BPptIjfBPSOuF+hWM7c3eaqGG6incns2Gs0rel0yn7Fd97Nss/iMJtZPNLv9
I00x2osm36vrUap0I1oDUVOrM0PqrKwVl4swHIzFZzQ3674Ui1uwx/d/H9Zv
MDfz61//mgo9Vfn7Y5bqBu1fss3KQmEOxD2vW833x/P/6quvUqFPBWofsPJ1
3xByGi6fUWCWq8ySGTBlymTS3WDdfvvt0K9fP+oDOeWUU+G0U0+lHBPmMzDf
5OGHHoJHf/So6SEpKy8j3gL7SyoqK4nPiFZUqGXVVR4+Az00kPdAH4+bb76Z
6ruX9ko4PiOeF6j0myQm/DxGsv+ad5brLRAIBAKBoHWBea09A3+T9oC+9zwB
z4wfDxPGPwMTxumiv+fApv8VtuPkwfuwMX+yuk7j+Rrx+yfgvj49An9/9vii
6DPA1WdQ9olThw7F8hmo49i9+xP4ZPdu+OCDD+DPf/4z1eo1q2kOWl5eDrfc
cgvc6tTAAQPhet0H8OiPfgSjRo2C0aNHw9gxY2Hs2DGU18rz4FdXv6o8IJyi
/BCdgUrcAesjmrxze5Ojqvsm2GPT6DIaXY0G8w34ulVzBzZPYftX2F6g9J69
OawcU+Y0mA9gj0/cP/d+4N88vj2OyXU1fEa92lfz1gAtRoOb06JzZJnDsXte
sD/kjZ1vEk/BfqnICXFWjOpd2er1+8SME9KS1JAP66aNG2HNmrXw4otLnHoR
iooWkh6jsKAQ8vJyIS83j/QYs2bNphwT1GVgzwn2mYx3/j2MHzcennjiCbjr
Bz+AHzh17bXXkl4COa0LdI9J165d4ZprrqH68Y9/TLwH3gvox4G+HMhXYIYJ
5rJGtfcH9syQPsO5v5BjQQ1HSXGx6TdBbmPQoEEwaKDiz047/fQ2+Bd04nC4
XBPJN0ksBObZBOg0BAKBQCAQCFoLsXmtcZ67sHaDfrvcAyXvfRFmwu0Fv4PS
od3j/saM9/vzZMxrPR6gJuPdd96Bd5xCbQD2JmANGz4cLr30UirMqejZswek
9O8PjzzyiFM/pFxW9EPAngJ8TzmtGZmUe5Lu1Lp165y5vOILOAO1pqbW1V80
Npp5Ps/xcR1uQzmoVs+JX0OBZfw/6+pc/4jaOpOzqrJW6yxPjVpaz+8bGt3M
E5djaVa6hia374THIp2I1lBgsTZCZZ5yj4zro6G8RdX35+9sj79FnxPyAt28
CTZv2kyZJZvwddMmylw1fS51bk4sV5DvB/airNZaDMp4rVZ8wbx586iysrIN
35RB1yyDuAvsM8H8EvTFSEtLh9QZM+C++++nXiLsLTnnnHPgnHO/Cad84xvw
la98Bb72ta+RTgMLt5k+fRpMnzaddB/h8nLiJapIk1FFmowI5ZeEobxcFXEc
1IOi9Bq4LhKOQGlZGfl4ILfCfqI9evSgnpZEgv+5fLz//REkBuJyVsJnCAQC
gUAgEAgExwXkM94J4DOGDx8Ol116KRXxGT160txW8RmPQGZGho/PyCAug4v4
DO2lyfqMmtoaM/dHLsHjH9GotRC1Nbq3o95oNDy5I5rXaCDOQvlbMF9if871
4XC5gFqLE7A1G0G9J8aHwhm3Xms1FJ+h1m1HXcT2bcR72P6m3G9iekuaGs06
e3w+J4rP2Kw4DeuVuQzqdfHksap9NJHnRqNHX8J8Bl4/4jOcQq7A8BnZWZrP
SKXrhddN8RkFxGkgn5GenkbrkafAfiLksM459xw455vnaD7jyzF8xrTp06hi
+AynUJtBfEUkQlqfcFivr6rUnhoVhu8oK/XyGf2Qz+iemHyG+IG2H8TlyH3L
BAKBQCAQCASC9giVWaKzSeBQcHaJ3g59NNAf409/+hO8/fbb5NGAPQgzZ82E
Z8Y/A3feOZSyWG+66Sboe8MNxGH85Cc/oXr66ach05nzZmVmUU9AeVm5M/8s
pd6F3Nw8mg/jXBi9JFeuWGH0Bva8nLNaXQ/OZuMPwRqNOu1FUd+geA/ba6NZ
+2wiD8E9Iay94JxUXMdenKi3MNuxVqO2zuPp6clwbVQ5qqqULoN7OEzvS6Ob
VYKftcfn4woav16vx+/J41BerP7+3N9Sp3tcauu8nh12XgrzJui5qjioNcQf
lJaVQmlpKczCa+pUQUGh4ivyCyAvFHKuVZ7qM8H3TiGngZ6fU56bAo/99DF4
6KEHiaO45JJL4GKnLrzwAjjrrLOoLrusN/Tp04cyeidPngxTJk+h7BKVj1IK
Zc79UB4u17xFOKbQNwP7TtAP1CyLRqGqUvmFVlZU0nq8t/r3T6F7r0eP7pCU
lNTK/6JOLALnt51jn90LEgPmuvr1f6LHEQgEAoFAIBAIyBvj4AE3hzUOnUE+
Gnv27KHC3JKGBuXJ8Itf/MKpXxKPcdFFF8JFF15EWawDBw4kT8bncL7rFGZu
olej7XWAr8pDMp/Wz5gxHabPmAGvLHtFZXFs2GD1TdQqrwnmM5rYJ1NpDDjj
BPs27ByRbdrnkr0+Ke/Up+vAYv1Es+kH4WzURp1DUmc8PdQy7bHBmo/GRjO+
nQHLGgql69CaDtOP0mQ0F4rPaKD9bNP5ssaLQ69jTw/1WZ2Bon0wmjgbtrHJ
7WHR/TZ2rwvlr+j1eH45z5W1DVismcFrQhyGU6jBQO8MqsJC4joy0jNg7Lix
5OV69z33ONd7CAweNJgyV7FOPz0JzjrzTNJI9OvfD4YNGwZ333238ftE7uL5
55+nwvsB/8aeEuZVysrKIIw9Js5y1GqgZwbyF7gOC/tMqhdVk5ZEaUqq6Xuk
pKRQYb9JUoL7ZwRleYp/RuLgsP0mnYXPEAgEAoFAIBC0XyBPceDgATh46KDi
MuIQGvv27YePd38Muz/+mPwm0Vdy/bp1MGrkSBg5aiRlliQnJ1Oh3v/mIUPg
tttug6nTpsK0qVPJK5KexZeW+PiMEFV2dhZpM2ZMnwEvv/wyvP76Bppv12h9
Q532s/B6X7r+D0Zz0aD8NBq1nsHmMbZpH0zX35P7OepcLUez2mb7NpX50WD3
s+ieDdJFaB/SoPHJi1RzBshnYBGfwbyE5hcoO1bnoDQ01Bv9BfIq6NOJHEW9
9t9wNSGNFjfR7MmY5R4cxfvUWf4hnNPSROdM+YXUwvr1rxu/z+KSYuPtSf0k
GZmkp8klPiNX6TQwo7WwgPQZWOil8dSTT8KTTz1JPUbow4mZrKeddhpVx44d
qd/k3HPOoeU/uOsuuO++e4nPWIganfIwPP/8Ys1nRJQ/Rnm55jPKiM8gjiNc
TtoL7EPBXhPFZ5RRn8ki3RvDhf6gNp9xelJi8xniD5nYCLq+QRm9AoFAIBAI
BAKBIBbYX7Lfqd/85j/pmTrORYfdOQyuvOoqqiuuuAKuuPwKGHDTAHjkh8of
AzNXcb6Lc2Cag1JVmTknPmMnb4RwRHlLOnPndPSS1P4MOL9eu2YtrHvtNaNV
MF4UDa5vJs/1DX/Q4HpQ+LfzrKt3P1dv+AfvZ7z7sbZto/Hx+2/d5mpGkGdR
mSQ11I9Th7yP9sdoNv4bTab/BT1JsI9nxYqVsHDhQrqO6GGSr/tJWHeBNUNf
h/T0dPLIyMnJhlBeiPJM8Lo+9OBDlLV704ABcN5551F98+xvwllnn0XZq1df
czVcffXVpM/52c9+Bo85NXXqVNJ74P6Yo6C+EfS/CKvcEspjjUZ1vkkpeWMs
0roL7CfBnpMKXfg+4mzLfqAR2pfy++if0l/3m/SgTNhEQktz2mTJN0k4xFxb
X/9JsvAZAoFAIBAIBAJBXOzbv1/zGb9RfQJO3XnnnXDVVVfBVVdqPsMpfP5u
8xl5oTziM7BHgPI1q6tpXlpdvUj5HejsCvaWVF6SM6iQz1izZg289tprZg7v
5pJoLqDBywF4eIB6iz+wt/f1gxiuwrzWuzxDfTC30Fbj4/dXvTPbjB8pbmfn
mHA2LPfhsK8Ibr9uPfMZKxSf4RTyGZRP4lynwkK3Umegj4niM7KJz8ghHgP7
gvLyQsRlYCGHZfiMb1p8xtVePuNnP3uMdDqowcnOzvF4ZLDfJ+ozKipUJmsp
eWqU0HL2JiXvDOI7Kmg7eh+Jaj9QVZzHgj6kyGkkIp8R5AsZNOcVJAbieYGK
X4pAIBAIBAKBQKD8M7DnBP1AGR999DH885//hL///e8mzxTni9xbMnjwYOhz
7bXk74h9BsOHDYdHH30UJkyYQIXP8XGujJkV5HlApTiMikrt6+gUzkdZE4Dz
ZexJwcI57LJlr8Dy5cuI08Bau3YtrF2zBtasXUNcB723/uZCXYf3b3xdG7it
Zz9reP9r1Xtn27Ux+2678fH7o17ltXWvkYfnGqcwW3XVq6tg1apV9F4tdz+D
f7MmA3s6lK4hSj0l5PeZX0CaCSw8/3QtnOXcY4I8BnIaWGPHjqXrP2LkCLru
WJjH+61vfYuqa9eu0KtXL8q0GX7XXXCXU8htUT/Kk08Rx4W8FeakKJ+MctN3
xGX0GSXYT1JC79lfQ/EZUaPPcPkMrc/QnMZ81Gf0d/UZHZMSi8+Il9fp70cQ
JAaS4/BV0l8kEAgEAoFAIBAAfPbZZ07tob4Sxh//8AfKLnnzzTdh7Lhx5Pd4
//0P0HwV69prr4UbbriRPAqwjwCfvSMPwT6N9Nxd9xIssp6vs98jzV2jPHdV
+RYLtV5gnlP4Wdweewzc5/gR1W8QrfD0HXDvAb9Gec6Lc2TfdhXR2PfRqPfz
/NkKz1hRd30bjU/6A30uVA6Ie17CpG+ImvFxXbn2oUBOCQv5i/yQ8l7N0jkz
mI2LPAMWchfUe+IU63CwB4Wur1Po5Xn99deT1+s3vvENp04h7cP5558P519w
PuWvoocKancmTpzk1ESYPGUyPPfcc1TUv5KWTmPa+SQVFYrbqtD9I7iM/THw
+6NWBwv5MP/5j0aj5vvb+gzON+megPqMw+kypP8gsXA4XYZcb4FAIBAIBAJB
e8aezz5zysdn/PGP8BvNZ4zTfMZ999/v4zNucPkM9PvMyYUy9HBkPkPPMY3/
geEzyj3P4rG3oNTiM7Dwc8RnVLrZnOiN4HIDUTO3jSnfM3zePi7HYHMImmeJ
+ZzNU7TR+Pj9DZ9h6RuUd4T2n9Djl4e1r2apn89QHhjEZ2T5+IzsbChw1qFm
g/06sfdk6tRp5Ocay2d8AzokaT7jfMVnDL1jKAzTfMYk5DMmT4apyGdMZT4j
DdJ9fIa6zpXq3ETU96BsE6fwuzCfUVlVGXP+SZ+hvz8X8xkpCe6fcbgSJAb8
/SbJfk6js1xvgUAgEAgEAkH7Bea0Yr3/l7/Ahg2vU05qqjPvHDlyJDzxxOMm
K2LIzTdTbwn2ESC/wX6RqlcgQlkUPA+muaqei1dWVZH/J/WX6G1pudZfkKej
U2Vl5VBUtJB4DZyTYiG3MVtnbtB8PF95PcSWWp5vXr3vcY6e79u2wFrOVVDg
/Zv3YbY7ScbnjFt8j+dl5qyZdI5mz54Nc5zCbUP5qn8Hr2Vaahp5fFJ+zIzp
xpcTOai8UIgqU/MbyDf87Oc/p7r7nrvh6u9dDd+76nvEWSB/YTQZTvXu3Zvy
V++++wcwZswYmDZtmvKCRd9QyqzJpmXTpk2Hac5yfI/jMx+D/APeH1gVmtdA
ngLvJcpqjYTJdwV7lvj+8ehiouyfwTqVcEy/SbvgM3zekNJvkjg4kt4i4TME
AoFAIBAIBO0df/zDH2HJkiVUI0eo/NXbb78drrjySqoBA26Chx95GB55+BGa
8yLfgM/9cfsXnML5JWsBkM/g5+jIZWDGJvsfYH8Fcxn2K36muKgIioqKYe6c
OTQ/x1Jz43zj55CTnWM8KrGyc7x/cx6Hec32/p2dnWP2E/QatO9se58n0fjI
VzAfYXMtvC16rbJ+xq1pZj95eXkm1wQzZpCjQt7jwQcehAceeAAGDxkCnZ25
Mhbmr375y1+GL3/py2YZemg89thj8FOnkCthnmWOc/2w8JopPmOaGR/5Du6H
QQ5C3R9V5j5A3qK8rFzzGRbfUeHvwVF8RtjqN4mYfpPE5jNick18mRcyv00c
BPIXfh8NybMRCAQCgUAgELRTvP/+n516H5qaGs089KGHH4KBAwZSZglmsWJ+
CWo0cI77gDPXnTR5ksqqcObFxcXFVKilyMvNozky8hC8L+I9LL0FeWTov+3C
z+D8F70oMzLSSVOQlpYGM6bPoLkyzoN5Po5+Hf55+rSp0wLn7rTOv/00+3Ox
+/LuX403zfd3W4yvvCimUv8Gvlf7nmZ0EXyupuptJ02aDGPGjiEvz7FjnNLv
8fP82bS0VDrP6Hcxfvw4p8bDHUPvID7rxhtvhIsu7AQXdboIzj7rLEjqgPqM
jtD78t6kzRg4aBCMGjWKCrkQynQNhQwXhXyL//sTnxG29BnaH1a9VhCfUVau
9BnUd8Q8h+VfwlxZhPgMt7fJ7Tdx+YykBOQz/HoM6TdJXMTzSPHwGsJnCAQC
gUAgEAjaKe677z641ynkK8499zynzqVn2vg8/vTTT4fLLruMCp/F33LLLVQ3
3ZRCfgn9nDkj96NgNid6LGBPyuDBgyDF2eamm26CIUOGOH8PoX6VW269lT5/
881DaDkWfg7XDXLmxrwv9GnA8dCrAXUhyKtg3aT3Sa8pN+n3buFneX2K2RaX
O8Xbpdxk7UevvylgX+a9vW3bjY+eEMgvYPXte71TfY2fBRb+jYW+Jv3p2vSj
99de24f8Tq655lq4+pprKEc1JaW/8czsr99feeWVxh8lKSmJCu+Djh07UuFY
Q4cOJb/PGZo7QQ8O7G/BPhfkMbiPBXUhGU4ht/LssxPh2QnPEi+DXAZmwYa1
nyn1nej3yFGgTgOLvT3J09TKbrV9SNhP1pPXGg4H5LV2bOt/Yp8r4vlC4vtk
4TMSDkfilSL9RQKBQCAQCASC9or77r2POA3FZ5xL1ZH5jCQvn3Er8Rm30lyb
+Ix+Xj6DsluRzxg02MzdhwwZbHgL5kOQvyA+Y7CzfMjNtG7QoIFx+AzmMgbE
zPUVT5BCrx4+ICU+d+DhClKsbQO283IVsZ9vzfGRe+hHfEY/uF5zF9dd55yn
6zA79TrDZSg+oz9dnxv73kBcBpXmMrBYv8CF8/8rr7wils/o6OUz7iQ+YxhM
nzGduIrMzCziMpjP4D4Z7F3BQs7j2WefpZqmtRmo42D/DPI01YV+Ky6foTQX
6GtaovmMcDjiZsJoXiMSiRqfVLvfJEVzNT26J2i/SWfvc/ognYYgMRDklSHX
WyAQCAQCgUAgULj8CuwnuRy+853vEIeBRfPZDkk0j1XejxdA5+RkM9/t1q0b
dOnaBbp26QJduqhXXNazZ0+nekD37t1bLNyWynnfk/bZk56ld+3aDbp260re
DBdedCF07tTJ2lat69pVl/O+m37fzVpm1gdUN/8yZ7/ebXiMbrHbd+t60o2P
5/3iiy+muuSSS3RdTOcLzzNud3HyxZB8cTJ0cs5lp4sugouc6qKvm33+L7jg
Ajj7m9+Ebzp1wYUXOnUB7YN5qx//5Ccm6ybH+HfkGM8M7C3BIu8O/T4tPR0m
TZpEhVwG9rWkpaV79BTs/Rm1sl+UR6y9vpyW+TNh0FvW1mf4/TMorzUp8fiM
GG1GwDJBYqAlPY5cb4FAIBAIBAJBe0eHDiqz4pRTToEvfelLTv0/6jM584wz
4cwzz4Svn6KyOU877VRI0vkWSR06qqyLjh0MB4Kf/9rXvubU14kPOeOMM6iS
nH2dfnqS2cau0049xWyH3AnrAr7+9a/DV7/6Vdpfkj6+js5YvL49VkdLK3HG
mWfR9cHzdjqd39PNdcA666yzqM4860zS2mDPxanO9fuGvpb8mTPO6AjnnXce
FZ7zf/u3f6MiXqpHT+ifkgKPj3gCnnjiCeotsbNfVd5MCLKys1WfCfmZKh4D
l+frXNjnpkyBKVNUXivmp2RlZRo+AnUYmM1aWlqmMmet/BvuJ7GzXaNRK/M2
qviMsOWdESb/jPke/4yOiajPaInTkPltQiEmpzXob/HPEAgEAoFAIBC0UxBf
0FHxGf+P+IwvwenO/Bm5DJwP4/z3FKdOPfUUzWUofgE/k9QhiM/4mpp/E0/R
UfMZpwfyGaeecqreLj6fQVwGjdn2nEJbVgetl8Hia4Pn7vTTYvmMs5nPOPMM
fe6c63vqqXDK1zWfkaT5jI5nxOczevYkD4oRTzxBlZmVGcNnYO5Mdla2m/9K
ugyl2QiF8iEzM1PzGVNgxoxUyEjPII7D8BnhiOIzykoVJ0GcRdSjv2A+I6J5
jmjU1WeQjiMcq88w/SY9uiccn2FzGeIHmvgI5K0CeCyBQCAQCAQCgaA9gufL
2IeAHgnXX38dPD1mDM1Lc3NU3gjmlqA/QijfygXNV9mgtDyUR9tnOPNX9ILE
ea1aHoKc3BzTh5BJ6zNp/pul58H4zD4jPZ36Ebg3YQJ6SD47gXwXVNbHNGde
/BxlcEyaNNF5nUTvVen3k+K8N5+xl3lfJ5l9+bdz9zWJt22j8TF3hPNJMLdk
8uTJdK6e1ecK16t+kLHw7MRnafkzzzzjXMunYYxzPX/xi1/AqFGjKYsE/8Zr
PGLESLj77rupkL84++yzqR588CGnHqRtkbPID6meEr7+6c71Sk9Lp2vJ15+K
ek8432Q2XV88tokTnzXZJqjTWLRoEVRXLyKvDPb3RM7CeITq12gkSlmtmOlq
+2bY+g3FY4Spwtxvoj1OlR9oUlv/E/tcEVeT0Vme1yci/NfYr8sQPkMgEAgE
AoFA0J7BfAZ6VrD3JHo3FhcVQZFT7MeIz9HZ68D4OYbLqVcA12FmKz+/L3He
0+doeQnVwoULzXp8v7BoIb1yhmtBgepPwGLeA9/nMS+Sk635Ei6VoYHvaXlG
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
7IfoHPocU3+EdQ6fnjFE6RllomdUSP3We6SWidYzdLwJ6w+sQ7Bvh9QxKS/3
9IyyMtEyhg0dRr1+20u0DPbNUHrGKVrPOJ1O76D0jMGiZwxSesaSJbR8+TL6
9NPPxLZv3+4+h8YHY4/oFrvd/J8G/my0C/ecPU16225fjg2D6Bm7k6tnZDKQ
DIJ1TaBfAQAAAAAA4HHwt75F33Lshz/6EXXt2pW6OMb1PWtrPe1C8l/U1tKc
2XMkz4WX/7NO5fXUcSPK5roxJKxX2LpInVXvtV4vZ1dXU7Vjs2ZVSqwJG8+1
S/V83dTPkDgKE2eh/ROkjoeu5RHMs+nWOdW+DSoWQ11HfVbrQd8ITztIuceW
2P4ZbFb77Ath4jdMbAwvy0xNU71d5fAs9WqcGh+MEq8Nuy07N0eqtNSnJ5i6
rZwvw45fMfdk1xzh3BljHFOaxjDRNcz351on7JvBekbnzp0pPz+f8hzr26+v
1Dxh3WIS12B1jONFBg0aJHk1TH6Mc889hzp0aO9YB+rSpQtdeumlomEMGDhA
8nKIHqLzuS5atIhefPEFWrt2reTIYNu5c2fa8yi6RpOuYxKoX0JNlKZbqHyh
0c93mM5xIJNpTov8GckjaoyDtW0AAAAAAADIRf7jP/5DjONNunXrJsbzYOOL
ofwwlJ7BukP17GqtTaj98+bPp/kZzPPxqPH5dxg/jsqqKqqsrKSHZj4kuRXY
TP5Pnp+rOqRFSnswc/bSMkvbKPPlkwia0TJKbC3DsjA/iZSlZRgdxFxL7sFq
v6zc1jIirKzc0kDKQu/Pd0/2/WifDnMuX8/UF2FNw/7+xkyO0IkTJ9KYsWNo
zJgxNGLkCBo+fLiY8fPg7ffoeBPOd3HMMceIcU4Nrrk6ZMgQmjB+Ak2YMF7W
eXvvPr3pzDPPFGvfvj2deNJJdJJj/Nx0796drrrqKrkut8v3OH36dLGly5aK
lrFhwwbxy9j+9XbJfxGGyZURFkOS62SsdYF8CokjLLYkTNMAAAAAAAAgFzn4
4IPFOM6gW9euMi+VeBMTG2JqsBo9o1rpGaZeieuLof0xpBbrXOOnMdetj2Jq
naj6rdrvo7aOZs2aJcZzXlU/Y6rnz1Dqzc1Vnksvh0Op1gWMpmHyhfpjPVIh
+SlSvvgPXyyJ6xuhNYaScN0jqn37/ozviL3d1FG12y+x9RXjM2LasnQNyXlR
rnwdWM+YqONM3O9V5vmJqLquxTRp0kSlLYwZK/4Zw+69V3w0VC0UpWfcdffd
dLdj5557Lh1/3HF03HHHi8bx29/+lvr160f3j1DxKr2cz3fcfgfdfvvtdOaZ
Z9EZZ54p9UuMsZZxyy230G233kqTJk6StidPqXCfoxdeeIFe2byZXn11i+Tr
3Mn5Ojmfp5Xzk5qUr4WJO0mab0VLEJo7Iy/dZwMkA8QXAQAAAAAAEM1RRx0l
dpwzl+V4E7aRo0YqX4lpD0p8idic2TRnzhwxVZvV0zkkN4azvaqqmqqrqkTr
MPVPpLaJjk0xeofx+WCNw/hkcFxCkc6ZYeIpuG6H8s9Q8+9gTIkXYxGwcn/8
R5mJA9HzfaULqBwS5jifn0eZpVMEc1wE2g/z+fBpFKkSHUMSrGsSjGEJb9/c
89SpU11fh4kTJ0hMEBv7YLDxNSZPnixW4dgUx7h9U6+V/TKGDB4ifhamfdYz
7rjjDjGOMzJ+F9ffcB1df/31kuuzW1fls9OxY0fxx2Azx1188cXUs2dPMR6j
mTNnUeWsWfTII4+ILV26TPSLLa++Sn/9618lxiSYM2O3zv252zIQDea3uYXt
gxPlm4F8oAAAAAAAIFcxesbxtp4xcqSrM7CWMUdrGkrPqPHpGfL+3dUzqsRY
3zD1T9y6rc6xkgPUsXpX66ijaSbGxNIzii0dw5jKFZFJC/BrAm4OC5O/wtY4
dE4HT88I0USMT0VQwwi0L7Eblm5h8nam6Rp2jEmIPhLVvrlnT8+Y4dMzxETP
SImOIXoG11Z1liWWnnEv6xlDlJ5h2vf0jNtl3F094/rr6Ybrrpc8nyYGydYz
zjrzDFfP6NGjB/UQPaOIZs6cKb42D7t6xlJ69dVXxf6i9YyvgzlATe5P6Bmx
SMujEJJPA/Pb5BCMNwnNpYHxBgAAAAAAOcqh7drRYYcdRv/5n/9JPzn1VMd+
Qldfc43EHHAtT84L6bd+1H+AyvfIxjkV2Hr16qVrZdwtx/Xv39/Z35969+5N
fRzrbRnvG+icy8se+v3+rbfeSjfecINjN9LNN99Ct9x6i8Qv3HTTTWI333yz
HHPrrbfRrbfdptf9dtutavttzn6222/XS/3Z2367GK/b17rNvQZvV9v4Hvzm
bLO2830Zu+XmwOdbzPab065zq1nX14pq3xjfL2sHdzh2k3M9u19u1tc339/4
XPD3v/HGG+kmx37zm6voiiuuEDNtXXvttdRV6xVck+TEE08UM9u41s1ZZ50l
xvVPOMfGOeeeK+dde616RjiuhHOGst7FdWoefvhhevnllx17if7whz/QJ598
IsZaRmNjoD4J+2foeiZSy0Tn/HT3k1fzBCiicoEi3iSZBHWM/OCY52G8AQAA
AABA7mLygbZr147+67/+y7H/pI5nd6QuF3VR1uUiqV3hmrON3+WbOITzz7/A
sfPpvPPOkxwMbFz7go+76KKLZP4r2885lzrzfNgx3t61q7reOZ15W2ep9yl1
Pk/vQGd3Ops6d+osNTfYL+Bsxzo523hOvU/WWV1TmdrG15c2nPa5Xdf489md
ZNmJzd12ttxPR9fOlqXM+zueZS3Vto6+Y7mdjnK9s8MspH37+5vjzPfh73GO
7lM+7syzlH+FGQexn/2MznOM76V9hw5Si8Scz8eeesqpdOqpp9CPf/xjyQn7
o6N/qHJinH4GnXZae1fj4DbMuIufx+AhNH7CBO1z00ALFy6kRYsXSU1Wo2F8
+umnXm7PkFwYJt6ELXw/ub4bhNygQnN1TVDfJFmE1rMJ8dMAAAAAAAAgF0nX
M/5L5saiR1g6xkUXmfWLJNdCt25dtZ5xvtIzHGPNgmt4ip7RRekZal59jizP
8ekZXZWeobd5esbpss56BusPrK0oHWAftQw9/7fN0zPStQXRHJz9QW2DzegS
tk7hahkBk/1nd/RpIOlaRqfI9u3vH6lndD5HjjvzDNYzzvA0JMd+9rOf0c/O
O5c6OvfSIUTPMD45x7Ce8aMfiZ1u9Iz2np7RubPWM5xxHyxxK4Ml1oW1DM6L
InrGonA9g+uvhhVVlXiTPaxXROgdju3eY/SO/fBjOAAIvpcPm+Mi/iA5RGpW
0DMAAAAAAACgww8/XOzb7dpRu8MOo8Oc5fe+9z36f//7v+m/HTP5NY488kjH
jqAjjjhCPvMx3/3ud/X2I2X9+9//vpjZ992jvuteX9r4djvHvi2ayQ9++AP6
wQ9+4O475OCD6aBvfpO+edA3pQ2+BhvHwbDxdeWaATP3F2p8b0ep++NrHnHE
d/TyCPqOs/6d73zHd3/82Zg5znw/tqOOMsvw9nzHGmvmuCP1PR7htHkkt+n0
sbkH+97aOX13+OHflv4zfcL9+N8yTv/lXOcot3/ttr73facfv/s90atMLRu5
9ncOl7aNhnXYoYfSf/z7v9O//8e/S25YNtZObrjhBrFRo0a5uT1MnpTHHnuM
Nm3a5NhG+uijj+iLL74QMz4ZtgjBPhYca2LHm4B/HeQDzS2i4omC2wAAAAAA
AMhFvuPMaw935rc8Dz7UmdOy8TxcaRLfl+2HO8bz4XbtDpNcGzLH1nNu3v9t
Z579ncO/486hjzjiSL3/cPeabAcfcggdcvAhcm2eQ/Oc3Oz7d2cu/Y1vfEOM
21M6xFGuLqJ0gCMsPeIImf+7GsTh/vm/p6F8W9vh+jv4zbR/mGg5h8m6vT/s
mkoP+I5P/wg7LqiRHN7Mfbrtmns5zLu/Q5y+O/TQQ2Qp/ez0C/ejaEj/+X25
htnvtX2421+sY/zbv/2bGH/Xdoep72Y0KD7voH87iA466CA67thj6VjH2IfD
5NoYV1hI06ap3K2mBuuTTzxBm1/ZTJs3b6a//+3v1Ni4k3bu3Bn6nO3evQd6
RgsQOr/NS393D5KBO67BHBrwxwEAAAAAAIB+85vfiHEtC5Mv8uqrr6brrrtW
8j7ydrbu3bu7+/nzVVdeJcbb2a686iq65pqr6Zqrr5HzzXXN/iu6q3O7O3aN
c93rb7heckpybAob+wJwHodTTz2Vfnbez+iii1TMys9//nOxiy/upnJ26Lwd
Zr2rjnvpIrVZulDXLl3dOi1erMxF7pLtQr3kNkz7tpl9fI65lnttff047av4
jG7u0lgX+5rWvXKbcn8h9yT3deFFYlxX5OJuF9PPL3b65pKf0yWXXCLXNMeZ
783rKnfJOZIT47TTTqP2jp1/wQWOnS/t8blsfCznQGG7/FeX0+WXXy51Tgb0
H+BYf6kBwz4Z1dXV9OSTT4qtWrWK3nzzTcfeos8++4x27Q7RK5qadN5P5Z+x
O0LPULEnnPuzSfKAhsWfgPD6JmH6BkgGzcab5EHPAAAAAAAAuQvPG6WORBO/
P98t801el1ITZo7ZtEe9X9+t5qMqh+MeiSHYuWMH7dy5I61uhbEw5JrOuV9/
vYPWr18ntnjJYpo9e47UhuW8ks8++xw999xztG79en2Ms9ywgTZsWO/YBm32
umfr1znHrtPn2LZOtbXOt2+dZevlXLnu+g3Snt1m3Pb53A3rQ/atV9devz54
jfXetbhdvhfnPvi7m+//0ksv0cuvvEKvvPIyrV27ltasWeMs18h3Ydu4caMc
w7ZurbPNOYb7b968eWLct1xPdeasmbRixQpatXIlvfDCC851Vou99NIm8bNg
f4slzyyhJUuekXgSrr86q3KW1F996umnaNHTT9Pbb7/t2Dv0l798kvHZ4nE2
zww/W+KfsTtcz+DtO3c2UuPOnfK8ia4BTSONjHlAEX+QOMLGN6xGLwAAAAAA
ALmIp1s0ufEAKn+j2mlyIRg9g+elnL/R1KXYsWOHYzv9egZRs3oGv6//+uuv
1XzdmbsvXrxEan7O1nrGc88+R88783FXc1hn9IwNrrbg6gtaP1hvdAdLw1jn
mqVhrFvv0wyU/mHpHmkahadvxGl/Q8hxvn3rA9dcb7YpWxfUYVjP2GT0jFdE
z1i9Zg2tcZbr1q0V/WKjc96mlzYpPUNrHKxnzJ03T4z7dRbrGTNniZ6xctVK
emHVC+o6q9fI9UXP2Kz0jGcsPaNylqdnPP30Inrn7XdE0/jkL3/J+GyJnqGf
KeObwc9PGLydY1V2aj2jaU9TaA7RXCfTnDYf9U0SR9rYBuJP8qFnAAAAAAAA
4PepsOaRTWqnb799nJmD2nEEkvtR3svvtq7T5F5nj67fyVqI8g9YQ0888QRN
nz5djPMyLF26lJYvX05r9dzc2Nq1fl+KoHYhvg/rLf1Aawfsv7BxI69v1OvK
OJelyWlpbKNzzAaxdG1hndFCMrSvdJJ1fu1E6xLr1qVrFeu13wbfn5jc4ya5
r42bNun705+d7abP1q5Z615Hvov2z+Dta9auEU2ovq6e6uvrxMdihu7flStX
SqzIiy++qPQQp19ffvkl2rJls5j5/vY1t23bRu+99x79+c/vuXk/d3z9dfiz
pH16mrSPhfmPAhqXPAvii6F0j8bGRjFqxr8nlwnLCxk25wXJICoXKPKlAAAA
AAAAsO/s1Dkgbf8MXjc6h8Geu5q5KusZPKdmY1+AKVOm0JQHHqDHHn+cli59
hpYvXya+CJ6tkaWrb3BchfZP8MWQWP4Rvrm56AMbPZ1g4yZnHv+ymInVYNug
tQ8+x9Mx1rlz/7D2Q3UNXl+rNBhXj9HXWKvPN8fJvW60NQTla2HuT2kZ6hjW
Mjw9Q/mZ2PEma3R/sR5UW1NLNY5xrAnn8mRz9YwXXnTb5za2bNki9vrrr4tt
3fpH+vDDD8W++uorV6doDuO7w2OdCXkm9LEm1mmXW5u1SRuwiarXGYxHAMkg
P0KvQnwRAAAAAAAA+47oGY1BPUPHDjQG9Ayd79G8f9+xcwe94MypX7D0jAcc
e9xZf+aZpbRs2TI9N1c6hqw7c/g0nw2zruNKTK6K9ZZGIDrBRsvXQa+/9NLL
9JLWM4wvwkZ9Hvt2rHP9KjwNIqx9L7bF+GXo+0nTP4Lr6jy5Z32fL21SWgbH
gLwkesZLcq+yf8NGFSOyRvWJadfoIBxzItqPs3/5s8uptrZWzNYzVvn8M9T5
rGdstvSMN954g7Zu3UofiJ7xAX311XavDmsz7NbxSM1pH+yzYXKx2DEpSu8i
+GeE0JxfBuIPkkVzfhkYbwAAAAAAkMtIfs9d6h25u223flceUqsimNMg7F38
Huu9O+l4A74W58tgE03DoXFXo6s1LFq0iB566CGxZ555RubbL7ywyss5sXGD
5UOxSWkPm/ymNIqNvvgML5aENYyN4pfhjzfRcRziy6H8OTwNwvMNWaM1FaUh
KK2C9Q5p0zHJb/GS0h6MT4Xxq+D2VZ5SdZ7f50TZOtfWWfe3wb0/bt/4skhO
UX2vvu8e+P6rV6+mxU6/cj6SRx99lObNnSu5NIwvCC9N+1yn5OOPPnLsYzWe
ekybdB4V80x4ekN67IjJudIcPP4mzyyZ80KP2+PmCIW2oWjONwPv65NFMN4k
P6hp5GG8AQAAAABA7uK+F9/t6RHK/z+9FkVYTgM17w3oGXv2uO/dzbv2Xbqe
yY4dX7vHcq4E9jnYIHrGYpo5069nrDJ6xnrlu7DJ+C2kmdpux5IE40o2WtqG
qxds0PqG8X3Q97JW+1ysNXrGGuUbYvtEmBgRc025D61liL+HXjftr3fzlK7z
dAxz3bWezwkvTZ9sMHoG58xwjuF6JErP2OBqEq6+E/jOvM56ButE3LeiZ0it
k7menuH0q2mfa65+/PHH9NHHH3salc4LK/VWLR8KkzslqGcEc69Eofx0/LFH
occ57TfubBRfH8gZikzv6+3arSAZxIktgp4BAAAAAAByFU/P8PwzuH6Jm5vR
QuV0DJ6vcx/ssc7XcSWiW1g5QNU1d7lzU/bPMDk1OR/oAw884NhUevqpp6U2
x/PPP+9qC6wDbLK0CaNJuPVDfDk7vXwbXLvD5M/k5WrnM8/zV7+42rfkXBKs
FXDsi2gpjnGeCWNmm8RprF7t5rAw7du+HnaOUZOPVNVYVe2zLpGpDeOHwffC
bbGxr4p9D8p/5QU5hs3WWUyeDT7n8ccfd+wxamhooDlz5jhWo/1B1one8sc/
/lHsk08+oc8+/ZQ+/fQzyeMZ1BtMTZo9u8M1CDfrp+u7QT7dw699eHWCg/ll
7cva9VHgn6EIyw+ZH6h5gfltcgjVL4J5NFDPBgAAAAAA5Ci7tMZg6xnsl8Hv
xButfJ5MU2C+yXj1TXYHjks/Ngift3r1i6IncD3Q4uIiKioupkcffYQWL15M
zyxZ4uoMMl/XvhpurRBnuVprFXwNrj/Kc3zWBrgm6YoVK+nZZ5+l5557VnJj
cj4OtqXLlkr9FLZlslwmPiFLnPbYFi9ZLO0vYVvyjLNviRynzl9Oz694XtU8
ddox7Us+0mC9E2eb2c/3pu5pBS1bru/DueYz0uYz0p4xrpfK97HUuSe+t2XO
/XLtWvOdOH7k6aefFlP+F4toxfMr3L4y/hvPO9vqG+pFy+C6qyZ/htFBOEfG
Tl1vNyp3p5ubs7kxbfLG3fh3sE+H0kT2+HWL0HY8DQVEE+aPgXiT5BKVI8Wn
a0DPAAAAAAAAOQr7SKTpGVKfpNFXn4QJm482NirdwxebYr17z4TSM5T/gdIz
isU4NmLxYjWnf/HFF1w9Y4Ouwbre0g6MnwRfx/gscL7LFSuVdvDss8+JprHc
sWWupqE0DNE0ltl6htI0lK6wxNVURFtYuszVQ9hvZKVzbW7PtG9ybnhai/qs
7m0NrXLua4XWWZYvV7oIt6+0i2d8bS7RGgff0zKtuzz33POuHiIahtYyFi9e
JDkyWGPx4lHWS71avk/WMurrG2hWZSU9OM3oGcoHhPUMzsmaSc+wdYyMeoTl
ayG5U/aYvCq6Pi+Z9BqZ9Iwm6BnNEJUXktfzoWckjji5UhBfBAAAAAAAcpaQ
XAik55ZxPPzdd+pRORBM3EIgZwLD8SemzsgTTyykiooKsenTptGMGTOoqrra
jb145ZXN9Nabb0qeh21vbpPaG1u3bnPjJbbpz7z9uWefk7n+U08+SVVVVcqc
+Tz7KLC52xyrdD5X6u3ufufYykpnH++XdXWuOq6Snnr6KdEc2P9B3cdWX/tv
bnuTtm3b5iy30VtvvSX2yisvu3Ei1c73Mm1VO21UW+1IWzNn0syZs2hm4L5M
+1XVVXINvsfp06eLPf3UUyp+xrFtzn1w+5udPlu4cKHYggXzRdtg+/CjjyS+
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
ZwAAAAAAAABagLB8oLW19bR27QZas26DLNfyct16tVy73tm+Xu3T29es1fvW
bfBtN+esWeftX+tbV58xx8kNkA80t4iKJwpuAwAAAAAAAIC9geu1Bt+d1tU3
0PoNGx3b5C7X8fr6TXqbWd9I66xt69ZvdI9xt6/X51rnBz/jHX1uEDq/DcQZ
YX6bHNxxDfpf4bcOAAAAAAAAaAHS8oE6c42Ghnm0YdPLtNGxDRtfkqWxDe66
fzt/zrRv48aXlck11foGfVza/BY5FBJJ1Dv64PiDZNBsvEke9AwAAAAAAADA
3lNdlR5vMm/ufHrp5c1+e+kVZ/kKbZKl2f6KZXyM3uYsN72szOyz118KrCPm
IDfImAcUY584wsY3rEYvAAAAAAAAAOwN7J8h8wzL73/Bgodp8+ZX6RXXtsjn
zZtfo82v8HKLLF8xn2Xbq+45ctxms42PfU1vV/tecY9T+4LtY46TTDLNafNR
3yRxpI1tIP4EuX8BAAAAAAAA+4LJB2rPOR5+5FF69bXXPfv96/Sas9zifn7D
vz9g5rgtznGvhWwPWrD9fMxpE0lYXsiwOS9IBlG5QJEvBQAAAAAAANASBOub
8Pzj0d89Rr9//X/odcd+//r/ynose8M79vU3oo97PfA5LKcCSB5R9TqD4w+S
QX6EXoX4IgAAAAAAAEBLUGXlzzDzj8cee5ze+N8/0Bv/k27/E7Kt+X3/N+Pn
sLoXIHk055cBLStZNOeXgfEGAAAAAAAA7AtB/wy2xxc+Qf/7hz9G2NZmPv+R
/mDt+0PkdTzDO9vcoDnfDIx9sghqlPlBTQO5cgAAAAAAAAD7gKlvYtfOfPLJ
p+iPW990bJtabntTllu3bdPbghayz/m81b6GtW+rteTzgu1jjpNMMr2vt8cf
JIM4sUX4rQMAAAAAAAD2FqlvYtUcYHvq6cW07c236U3HtvnsHW3O+lv+fW/q
/W+a/UF7623/vre86wXbxxwnmYTlh8w3mgbyQyaOUP0imEcDuX8BAAAAAAAA
e0lYvMmiRYvprbffdewdevudd2TpmvX5bVm+G7rf7OPz33b3v+s73xhiDnKD
MH8MjH1yicqR4tM1oGcAAAAAAAAA9pJq1jPy/PPLxc8spXfe/XOovfvunyL3
ZT72T+7yXdnnWbB91GtNJlF5IYPjD5JBnFwpiC8CAAAAAAAA7C1h/hnLlj9L
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
mujzZYPotKMj9Kejf0q3zP9zC7f5OW0q7JL+fLg+z1fS9D+2TBaN0GevjYx3
5PdvA7+TXCFO/2MMskuc/scYZJc4/Y9xyD5x+h9jkF3i9D90vewSp//xO8gu
cfofY5Bd4vQ/xiC7xOn/tqRn5PbfCyo/Z3CcTB7d/KN/TsVbvmrhNvfQ3x+7
i4J1W732T6RftlD+0eCzF5UvoTUIm0Ok938uPYv7nzj9n1v/Hux/4vQ/fgfZ
JU7/47eQfeL0P8Ygu8Tpf/x7lF3i9D/GILvE6X/8W5Rd4vQ/xiC7xOn/NqVn
BHJD5tS/k9tX0vCf5IfOraUvjutLiz9r+Wab3qigbsFnwmr/x1dU0rstEHPS
lnX+NJ0vrP9z6VlsBeL0P/5/kV3i9D/GILvE6X/8e5R94vQ/xiC7xOl//HuU
XeL0P3I3ZJc4/Y/fQXaJ0//4/0F2idP/bWYOaT4HanvkCru3FNP5mfyMWzoX
qMHkBI34O/qYY++kx/++73VOQv8+DLbXSv9fzDSPa23dL1eI0/8Yg+yCOIfW
J07/YxyyT6wxwDwuq8Tpf/wOskuc/sc8LrvE6X/8DrJLnP7H/w+yS5z+b009
I+1+cvZvtp20dVp3/3wiz98vJ/R4nP6ejab3vEIl5x6fPp902+9Ig5b9bZ+b
cXWMQM4Mn67RWnpGWI3EvPTnEmSPOP2PMcgucfoff7tmlzj9j99C9onT/xiD
7BKn/zEG2SVO/2MMskuc/scYZJc4/Y8xyC5x+r9V9YyArhL2d1xu8Akt6nVm
xrE6edhK2pWVtrdS1a9OzPCsHE/dKl7b57qtzT2DrTlXwr9VrU9b/rcqV4jT
/xiD7BKn//FeOvvE6X+MQXaJ0//QV7NLnP7H7yC7xOl/jEF2idP/+fDPyCpx
+r819Yx8yz8jLK9HzvxGd22gwrOOidR08o8+ka6o2pqlxv9Jq4Z1Svu92u3/
+KYF9Mk+thLULaLmr61B2P8v0nKX4t+qrBKn//G3a3aJ0/8Yg+wSp/9z6v+N
rUSc/scYZJc4/Y85RHaJ0//42yi7xOl//FuUXeL0P8Ygu8Tp/zaZsyDXno9P
FtAt+RHvIsR+SrfO/1OWGvdqtkbaWYW0aR+dQ6LGty3kS0HegNYnTv9jDLIL
xqD1iTUG0PayTpz+x28hu8Tpf8yls0uc/se/RdklTv/j36LsEqf/8TvILnH6
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
mfaQ/pilwvXlqmvp1PhPD76ttqM/0ExT/2c9hKkh9LxW05hPPAPAePV9odqS
eUoNGWM89Tq/tfbomOqxGV1u7Sl0WKxzc7Sisol9Jkhu9/6vKvLTotynZajI
2ZrodwmMwoBuNP1MKzLsYWcuRIxFRPk7e4Tvh3I+orze4OVYW6OvucHDRLpz
UntmBeJ4Yf3fNlsrfnxULVfGGmcL1KPx9//Mp/TP738V55o0wIPBF8+wHP+J
ZwCIAaPrlF4ryg2vczEtR8UVp3RjNGvLvi+H4iNhY1a6CkreUls/C1UkM0N3
m/ZrrtV9m7/P25Wz9R2x/R/JwVD/eZdWDz+bjhaLiBq3sMq1GGk+x7RALd2t
9VcS/T8EU02bS0UjiMWlzlihXUfP6Mpo1jH9l9T4r+uH69wOv07e9+Vqvhq/
3wd4wITmZ5jPN6F+BoAYuX5KrxXnWqwvc7Si4pS6RzJ9+2IZ00LqZfhiGX3E
MpDk+j+Va1Wu5T2baR2ctV5HLtxO9LsF7sNQX9tb2pyXHrU/B/+3eWy/T07G
COIaphjIrN1qvMM8gQn2TY3WWtYSs+7/2Yu3yVX/SfS4Rn+nWo5XqqQwO+h1
svX4ll/rbDe1PzG19DeUhu83IT8DQBwYPZ/qN1ufsDhTKV35a36u+vPXrPeQ
Gr261PRrlS1+2OKZ3Rw9+/qHujzAGhXJ7K6uNP9W+1bOMe/NinK/l5q3UYca
vlQvXR8PJEP9vlhGaFwhWsxhhP0/LK5hM//78NwPh56o/FhUisaEM9pVt372
qPt/as4SbSgt16HqGp14/x3VHa6Wq6pcuzZ9VwWO4P6fppnFO/Rm09cxqMMB
JJ9+t/m8VnN+BvEMALF2U63H92vVjDSLOTxTBSs3aVd5lVxOp6qdv9TBfdu0
ftGMsPobnpz7rMdelmtw/uZJBJLJvTa3fjXYv13O/65D5Xu0Y+t6FT2SGRSj
M9+nhe0HNeXdD34OHnlSazdt1+7Bz021y+n97Lic/1Mt3dy5IXGMrg+1f0mm
qe/6+nK0+hmj6//WcQ/LfSz2VXK1UQcUiWCo/2Igthe7/p+twrW79T8aLqiH
uDamMF9+huX4TzwDQJwYvV/K7dyhZ/IyA/N2pGcWprVqmr696AeqeLtZV8jJ
QBKyzIsccf+//88MXU8P3rsR6UPiWNabj/JcOrb9P/xyrKnRN0wZSCCj66x+
V75BhQ77OPp/pgqe3qy9Vb/X/7nUw9klgO4z3xDPABBvRo8utbyrY2/s1Svr
V2n5/FxTLoZ9cO7OX1SstZteVYXrdzrZGmFPCgAAwAPO6GnT6RO/1n/du00b
Vy5VYU6axX2YJ/fuCRUVrVFJ6T4ddNXoxIcf6+INTiwBAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEO7/A0PdR4U=
        "], {{0, 710.}, {538., 0}}, {0, 255},
        ColorFunction->RGBColor,
        ImageResolution->{144, 144}],
       BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVVwdYU8kWnltSIbQAAlJCb4JIDSAlhBZASmiCjTRCKCEmBBV7WVRw7WIB
G7oq4qJrAcSOuOrKothdy6IuKivroi525U0K6LqvfG++b+b+958z/zlz7tw7
d2z5xdxcFACgIMOGy5vCkst501IN4E26VCERS0VCjrREJBbJmXwEkif1YQP0
T/JkskIUWhVJS+TcmAjG2KxsBukxQAAV6AMyMOAJFDJWcnKCynrw+vfy6jpQ
CYIrHiqtf/b/12IoFCkEACDJEPOFCkERxAcBwGsEMnkJAEQVbz+lRKbCsAJj
OQwQ4kUqLNbgGhXma/A+tU0alw1xGwBkXR5PLgZA7xLkGaUCMdTQ64PYSyqU
SOH8GRCHFhUVCyHOgdgF2sggVukz+V/oiP+myR/S5PHEQ1gzF3UhR0oUskLe
tP8zHf+7FBUqB304waqbJ4/lquYM83azoDhehXUh7pXyE5MgNoL4jUSotocY
peYpY9M19qilQMGGOQOmEHsJeZHxEFtCHC0tTEzQ8vxcSTQHYrhC0KmSEk4a
xGYQLxIpolK1NlvkxVytL7QxV85maflzPLnar8rXPWVBOkur/yJPxNHqY3pl
eWmZEFMhdiiVZCRCrAexp6IgNV5rM7osj504aCNXclXxO0DMFUljIjT6WGmu
PJqrta8oUgzOF9uSJ+EkavH+kry0WE1+sDYBTx0/nAt2SSRlpQ/qiBRjEwbn
IhRFRmnmjj0RSdNTtTpvZCURXM1YnCorTNba43aiwhgVbwexr6I0VTsWzyiB
C1Kjj+fKSpLTNHHiZfm8uGRNPPhykADYIBIwgBJWPigG+UDS0dvUC+80PdGA
B+RADETAQ8sMjshU90hhmwrKwB8QiYBiaFyEulcESiH/cYjVtB4gV91bqh5R
AB5BXATiQSG8V6pHSYe8ZYDfICP5h3cerAIYbyGsqv5/zw+ynxkWZBK0jHLQ
I0N/0JIYRYwkxhKjia64BR6KB+MJsA2H1Rtn4oGD8/hsT3hE6CQ8IFwjdBFu
TZLMk38V5RjQBfWjtbngf5kL3Alq+uEReAhUh8q4KW4BPHBf6IeFh0HPfpBl
a+NWZYXxlfbfZvDF09DaUbwoKGUYJZzi8vVIPTc9vyEVVa6/zI8mVv5QvtlD
PV/7Z3+RfSG8xn9tiS3CDmBnsVPYeewo1gQY2AmsGWvHjqnw0Or6Tb26Br1x
1fEUQB3JP/wNPllVJhVe9V49Xh80fSWiqapvNGAXy6bJJeK8EgYL7ggiBkcq
8BzB8Pby9gFAtb9oPl8vU9T7BmLa/pmb/ysAIScGBgaOfObiTgDwQwB8/Q9/
5lyYcOvQAeDcYYFSXqrhcFVDUO9bxsAcWAN74ALn4w38QTAIB1EgDiSBNJAF
JsLo8+A6l4MpYAaYC8pBJVgO1oANYDPYBnaB78F+0ASOglPgR3ABXALXwG24
errBU9AHXoH3CIKQEBpCR8wRG8QRcUe8ESYSikQhCQgXyUJyEDEiRZTIDGQ+
UomsRDYgW5E65AfkMHIKOY90IreQ+0gP8gJ5h2KoLmqMWqFO6EiUibLQeDQN
nYCK0cloGboAXYquQ2vRPWgjegq9gF5Du9CnaD8GMB3MFLPFPDAmxsaSsGws
F5Njs7AKrAqrxRqwFvicr2BdWC/2FifidJyBe8AVHIun4wJ8Mj4LX4JvwHfh
jXgbfgW/j/fhnwg0giXBnRBE4BDGEsSEKYRyQhVhB+EQ4Qx8l7oJr4hEoinR
mRgA38UsYj5xOnEJcSNxL/EksZP4kNhPIpHMSe6kEFISiUcqIZWT1pP2kE6Q
LpO6SW/IOmQbsjc5mpxNlpLnkavIu8nHyZfJj8nvKQYUR0oQJYkipEyjLKNs
p7RQLlK6Ke+phlRnagg1jZpPnUtdR22gnqHeob7U0dGx0wnUSdGR6MzRWaez
T+eczn2dt7pGum66bN3xukrdpbo7dU/q3tJ9SaPRnGjhtGxaCW0prY52mnaP
9kaPruepx9ET6s3Wq9Zr1Lus90yfou+oz9KfqF+mX6V/QP+ifq8BxcDJgG3A
M5hlUG1w2OCGQb8h3XCUYZJhkeESw92G5w2fGJGMnIyijIRGC4y2GZ02ekjH
6PZ0Nl1An0/fTj9D7zYmGjsbc4zzjSuNvzfuMO4zMTLxNckwmWpSbXLMpMsU
M3Uy5ZgWmi4z3W963fTdMKthrGGiYYuHNQy7POy12XCzcDORWYXZXrNrZu/M
GeZR5gXmK8ybzO9a4BZuFikWUyw2WZyx6B1uPDx4uGB4xfD9w3+xRC3dLLmW
0y23WbZb9ltZW8VYyazWW5226rU2tQ63zrdebX3cuseGbhNqI7FZbXPC5neG
CYPFKGSsY7Qx+mwtbWNtlbZbbTts39s526XbzbPba3fXnmrPtM+1X23fat/n
YOMwxmGGQ73DL44UR6ZjnuNax7OOr52cnTKdFjo1OT1xNnPmOJc51zvfcaG5
hLlMdql1uepKdGW6FrhudL3khrr5ueW5VbtddEfd/d0l7hvdO0cQRgSOkI6o
HXHDQ9eD5VHqUe9x39PUM8FznmeT57ORDiOzR64YeXbkJy8/r0Kv7V63RxmN
ihs1b1TLqBfebt4C72rvqz40n2if2T7NPs993X1Fvpt8b/rR/cb4LfRr9fvo
H+Av92/w7wlwCMgJqAm4wTRmJjOXMM8FEgIjAmcHHg18G+QfVBK0P+jPYI/g
guDdwU9GO48Wjd4++mGIXQgvZGtIVygjNCd0S2hXmG0YL6w27EG4fbgwfEf4
Y5YrK5+1h/UswitCHnEo4jU7iD2TfTISi4yJrIjsiDKKSo/aEHUv2i5aHF0f
3RfjFzM95mQsITY+dkXsDY4VR8Cp4/TFBcTNjGuL141Pjd8Q/yDBLUGe0DIG
HRM3ZtWYO4mOidLEpiSQxElalXQ32Tl5cvKRFGJKckp1yiPuKO4M7tlUeuqk
1N2pr9Ii0pal3U53SVemt2boZ4zPqMt4nRmZuTKza+zIsTPHXsiyyJJkNWeT
sjOyd2T3j4sat2Zc93i/8eXjr09wnjB1wvmJFhMLJx6bpD+JN+lADiEnM2d3
zgdeEq+W18/n8Gv4fQK2YK3gqTBcuFrYIwoRrRQ9zg3JXZn7RBwiXiXuyQvL
q8rrlbAlGyTP82PzN+e/Lkgq2FkwUJhZuLeIXJRTdFhqJC2QthVbF08t7pS5
y8plXZODJq+Z3CePl+9QIIoJiuYSY/gj3650UX6jvF8aWlpd+mZKxpQDUw2n
Sqe2T3Obtnja47Losu+m49MF01tn2M6YO+P+TNbMrbOQWfxZrbPtZy+Y3T0n
Zs6uudS5BXN/nuc1b+W8v+Znzm9ZYLVgzoKH38R8U1+uVy4vv7EweOHmRfgi
yaKOxT6L1y/+VCGs+KnSq7Kq8sMSwZKfvh317bpvB5bmLu1Y5r9s03Licuny
6yvCVuxaabiybOXDVWNWNa5mrK5Y/deaSWvOV/lWbV5LXatc27UuYV3zeof1
y9d/2JC34Vp1RPXeGsuaxTWvNwo3Xt4Uvqlhs9Xmys3vtki23Nwas7Wx1qm2
ahtxW+m2R9sztp/9jvld3Q6LHZU7Pu6U7uzaxd3VVhdQV7fbcveyerReWd+z
Z/yeS99Hft/c4NGwda/p3sp9YJ9y3+8/5PxwfX/8/tYDzAMNBx0P1hyiH6po
RBqnNfY15TV1NWc1dx6OO9zaEtxy6IjnkZ1HbY9WHzM5tuw49fiC4wMnyk70
n5Sd7D0lPvWwdVLr7dNjT19tS2nrOBN/5tyP0T+ePss6e+JcyLmj54POH/6J
+VPTBf8Lje1+7Yd+9vv5UId/R+PFgIvNlwIvtXSO7jx+OezyqSuRV368yrl6
4Vritc7r6ddv3hh/o+um8OaTW4W3nv9S+sv723PuEO5U3DW4W3XP8l7tr66/
7u3y7zp2P/J++4PUB7cfCh4+/U3x24fuBY9oj6oe2zyue+L95GhPdM+l38f9
3v1U9vR9b/kfhn/UPHN5dvDP8D/b+8b2dT+XPx94seSl+cudf/n+1dqf3H/v
VdGr968r3pi/2fWW+fbsu8x3j99P+UD6sO6j68eWT/Gf7gwUDQzIeHKe+lcA
gxXNzQXgxU4AaFkA0OH5jDpOc/5TF0RzZlUj8J+w5oyoLv4ANMD/95Re+Hdz
A4B92+HxC+rrjwcgmQZAWiBAfXyG6uBZTX2uVBUiPAds4XzkF/HBvymaM+cX
cX99BSpVX/D19V8WSold
          "], "RGB", "XYZ"], Interleaving -> True, 
        MetaInformation -> <|"XMP" -> <||>|>],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->{343.84443221830986`, Automatic},
      ImageSizeRaw->{538., 710.},
      PlotRange->{{0, 538.}, {0, 710.}}], " ", "The", " ", "units", " ", 
     "are", " ", "in", " ", "K", " ", "and", " ", "Kbar"}], "=", 
    RowBox[{
     SuperscriptBox["10", "8"], "Pa"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8827426645378923`*^9, 3.8827426754541483`*^9}, {
  3.882742866807876*^9, 3.882742884348274*^9}, {3.88274293356048*^9, 
  3.882742950543936*^9}, {3.882743062296441*^9, 3.8827430710968*^9}},
 CellLabel->
  "In[2079]:=",ExpressionUUID->"c8622f4b-7b57-47ff-a668-cf726e6f0377"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P110", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0846182853784988"}], ",", "9.89492119089317"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5595319342875719"}], ",", "11.120840630472856"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9816424405490377"}], ",", "12.276707530647986"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.540952279599396"}], ",", "13.782837127845884"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.089749610754962"}], ",", "15.183887915936953"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.5224466566569577"}], ",", "16.30472854640981"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.9234581153831027"}], ",", "17.390542907180386"}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P100", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.05341390454994477"}], ",", "8.949211908931698"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.4548510458140832"}], ",", "9.229422066549912"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.7822934572131212"}], ",", "9.544658493870402"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1625760271326349"}], ",", "9.859894921190893"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.9759443096192686"}], ",", "10.560420315236426"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.979444623097442"}], ",", "11.436077057793344"}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P001", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.011308349161474829"}], ",", "8.633975481611207"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.2544471101014002"}], ",", "8.493870402802102"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.48701783933723075"}], ",", "8.353765323992993"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.8993006313519817"}], ",", "8.108581436077058"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.4384738355616116"}], ",", "7.723292469352012"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.988196563538903"}], ",", "7.373029772329247"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.728217893935643"}], ",", "6.882661996497372"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.9713751628120035"}], ",", "6.70753064798599"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.425967097516003"}], ",", "6.392294220665498"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.7325510645533684"}], ",", "6.182136602451838"}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"P110", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sclng", ":=", 
   SuperscriptBox["10", "8"]}], 
  RowBox[{"(*", 
   RowBox[{"to", " ", "convert", " ", "Kbar", " ", "to", " ", "Pascal"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P110", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "1"}], "]"}], "]"}], "=", 
   RowBox[{"Sclng", "*", 
    RowBox[{"P110", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "1"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", "P110", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P100", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "1"}], "]"}], "]"}], "=", 
   RowBox[{"Sclng", "*", 
    RowBox[{"P100", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "1"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", "P100", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P001", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "1"}], "]"}], "]"}], "=", 
   RowBox[{"Sclng", "*", 
    RowBox[{"P001", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "1"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", "P001"}], "Input",
 CellChangeTimes->{{3.882742693674118*^9, 3.8827428267271843`*^9}, {
  3.882742912445348*^9, 3.882742916423704*^9}, {3.882743210652547*^9, 
  3.8827432113285522`*^9}, {3.882743356024603*^9, 3.882743480345385*^9}, {
  3.8827442441045523`*^9, 3.882744323785026*^9}, {3.8827443578456097`*^9, 
  3.882744412804784*^9}},
 CellLabel->
  "In[2080]:=",ExpressionUUID->"12063010-28bf-43cd-8f61-a211b9b4faa0"],

Cell[BoxData["9.89492119089317`"], "Output",
 CellChangeTimes->{
  3.882742924139655*^9, {3.8827434322715063`*^9, 3.8827434808925543`*^9}, {
   3.882744309280105*^9, 3.88274432544277*^9}, 3.882744370212153*^9, 
   3.882744414158983*^9, 3.890312771430135*^9},
 CellLabel->
  "Out[2083]=",ExpressionUUID->"8795d9f3-e89c-4309-8ec8-d0524977a4ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.46182853784988`*^6"}], ",", "9.89492119089317`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.595319342875718`*^7"}], ",", "11.120840630472856`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.816424405490378`*^7"}], ",", "12.276707530647986`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.540952279599396`*^8"}], ",", "13.782837127845884`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.089749610754962`*^8"}], ",", "15.183887915936953`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.5224466566569576`*^8"}], ",", "16.30472854640981`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.923458115383103`*^8"}], ",", "17.390542907180386`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.882742924139655*^9, {3.8827434322715063`*^9, 3.8827434808925543`*^9}, {
   3.882744309280105*^9, 3.88274432544277*^9}, 3.882744370212153*^9, 
   3.882744414158983*^9, 3.890312771431622*^9},
 CellLabel->
  "Out[2086]=",ExpressionUUID->"e335daaf-16d3-4219-b469-1544a5ad9705"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.341390454994476`*^6"}], ",", "8.949211908931698`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.548510458140832`*^7"}], ",", "9.229422066549912`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.822934572131212`*^7"}], ",", "9.544658493870402`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.1625760271326348`*^8"}], ",", "9.859894921190893`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9759443096192685`*^8"}], ",", "10.560420315236426`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.979444623097442`*^8"}], ",", "11.436077057793344`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.882742924139655*^9, {3.8827434322715063`*^9, 3.8827434808925543`*^9}, {
   3.882744309280105*^9, 3.88274432544277*^9}, 3.882744370212153*^9, 
   3.882744414158983*^9, 3.89031277143307*^9},
 CellLabel->
  "Out[2088]=",ExpressionUUID->"47b0c2d1-f854-4139-9001-9bf9a9df407f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.1308349161474828`*^6"}], ",", "8.633975481611207`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.544471101014002`*^7"}], ",", "8.493870402802102`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.870178393372308`*^7"}], ",", "8.353765323992993`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.993006313519816`*^7"}], ",", "8.108581436077058`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4384738355616117`*^8"}], ",", "7.723292469352012`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.988196563538903`*^8"}], ",", "7.373029772329247`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.7282178939356434`*^8"}], ",", "6.882661996497372`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.9713751628120035`*^8"}], ",", "6.70753064798599`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.4259670975160027`*^8"}], ",", "6.392294220665498`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.732551064553368`*^8"}], ",", "6.182136602451838`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.882742924139655*^9, {3.8827434322715063`*^9, 3.8827434808925543`*^9}, {
   3.882744309280105*^9, 3.88274432544277*^9}, 3.882744370212153*^9, 
   3.882744414158983*^9, 3.8903127714344597`*^9},
 CellLabel->
  "Out[2090]=",ExpressionUUID->"e446831c-9697-4fae-918a-a4e2a035e399"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dP110bdT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"P110", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"P110", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"P110", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"P110", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}]], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "P110", "]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T110", "[", "P_", "]"}], ":=", 
  RowBox[{"9.7", "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"Total", "[", "dP110bdT", "]"}], 
       RowBox[{"Length", "[", "dP110bdT", "]"}]], ")"}], 
     RowBox[{"-", "1"}]], "*", "P"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"T110", "[", "P", "]"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{"Total", "[", "dP110bdT", "]"}], 
  RowBox[{"Length", "[", "dP110bdT", "]"}]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"P110", ",", " ", 
     RowBox[{"PlotMarkers", "->", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"T110", "[", "P", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"P", ",", 
       RowBox[{
        RowBox[{"-", "4"}], "*", 
        SuperscriptBox["10", "8"]}], ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dP100bdT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"P100", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"P100", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"P100", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"P100", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}]], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "P100", "]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T100", "[", "P_", "]"}], ":=", 
  RowBox[{"8.9", "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"Total", "[", "dP100bdT", "]"}], 
       RowBox[{"Length", "[", "dP100bdT", "]"}]], ")"}], 
     RowBox[{"-", "1"}]], "*", "P"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"T100", "[", "P", "]"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{"Total", "[", "dP100bdT", "]"}], 
  RowBox[{"Length", "[", "dP100bdT", "]"}]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"P100", ",", " ", 
     RowBox[{"PlotMarkers", "->", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"T100", "[", "P", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"P", ",", 
       RowBox[{
        RowBox[{"-", "4"}], "*", 
        SuperscriptBox["10", "8"]}], ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dP001bdT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"P001", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"P001", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}]}], 
       RowBox[{
        RowBox[{"P001", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"P001", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}]], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "P001", "]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T001", "[", "P_", "]"}], ":=", 
  RowBox[{"8.65", "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"Total", "[", "dP001bdT", "]"}], 
       RowBox[{"Length", "[", "dP001bdT", "]"}]], ")"}], 
     RowBox[{"-", "1"}]], "*", "P"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"T001", "[", "P", "]"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{"Total", "[", "dP001bdT", "]"}], 
  RowBox[{"Length", "[", "dP001bdT", "]"}]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"P001", ",", " ", 
     RowBox[{"PlotMarkers", "->", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"T001", "[", "P", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"P", ",", 
       RowBox[{
        RowBox[{"-", "4"}], "*", 
        SuperscriptBox["10", "8"]}], ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8827432141136923`*^9, 3.882743274045107*^9}, {
   3.882743488144088*^9, 3.882743722552142*^9}, {3.882743781478799*^9, 
   3.882743928278873*^9}, {3.882744014191243*^9, 3.882744063251808*^9}, {
   3.8827442417996264`*^9, 3.882744249484726*^9}, 3.882744419460959*^9, {
   3.882744465896963*^9, 3.8827445220394907`*^9}, {3.8827445739325867`*^9, 
   3.882744722021612*^9}, 3.882745845231742*^9, {3.882746101955467*^9, 
   3.8827461531709833`*^9}, {3.8827871542327423`*^9, 3.882787224081647*^9}},
 CellLabel->
  "In[2091]:=",ExpressionUUID->"56754833-e23e-4571-8a9a-d93b5a7be76f"],

Cell[BoxData[
 RowBox[{"9.7`", "\[VeryThinSpace]", "-", 
  RowBox[{"2.6419977825975345`*^-8", " ", "P"}]}]], "Output",
 CellChangeTimes->{
  3.8827432575807*^9, 3.882743594507688*^9, 3.8827439289689007`*^9, {
   3.88274401634407*^9, 3.882744036693323*^9}, 3.8827444232049303`*^9, 
   3.88274447098176*^9, 3.8827445249860477`*^9, 3.882744574638216*^9, {
   3.88274463440702*^9, 3.8827446651217613`*^9}, {3.882744711892632*^9, 
   3.882744722977154*^9}, 3.882745846498612*^9, 3.882746105479271*^9, 
   3.8827461536840763`*^9, {3.8827871551611223`*^9, 3.88278722496449*^9}, 
   3.890312771445011*^9},
 CellLabel->
  "Out[2093]=",ExpressionUUID->"cef2cc5a-f753-4dee-a722-b397e06a4509"],

Cell[BoxData[
 RowBox[{"-", "3.7850145317564555`*^7"}]], "Output",
 CellChangeTimes->{
  3.8827432575807*^9, 3.882743594507688*^9, 3.8827439289689007`*^9, {
   3.88274401634407*^9, 3.882744036693323*^9}, 3.8827444232049303`*^9, 
   3.88274447098176*^9, 3.8827445249860477`*^9, 3.882744574638216*^9, {
   3.88274463440702*^9, 3.8827446651217613`*^9}, {3.882744711892632*^9, 
   3.882744722977154*^9}, 3.882745846498612*^9, 3.882746105479271*^9, 
   3.8827461536840763`*^9, {3.8827871551611223`*^9, 3.88278722496449*^9}, 
   3.890312771446534*^9},
 CellLabel->
  "Out[2094]=",ExpressionUUID->"f54c92cc-8a3f-46ae-8427-73019832f6c8"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[
       6.272]], {{{-8.46182853784988*^6, 
      9.89492119089317}}, {{-5.595319342875718*^7, 
      11.120840630472856`}}, {{-9.816424405490378*^7, 
      12.276707530647986`}}, {{-1.540952279599396*^8, 
      13.782837127845884`}}, {{-2.089749610754962*^8, 
      15.183887915936953`}}, {{-2.5224466566569576`*^8, 
      16.30472854640981}}, {{-2.923458115383103*^8, 
      17.390542907180386`}}}]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVzXk4FHgYwHHsPimJ2GQN7aofGseYs8iR11HMFiZDj1oblpHHzFRqHO16
MkmqKRJbmhAtcoQcTVOx8U5Kh+Rq0jJCRZ6etHqKST3ttn98n8+f35W/7g4R
6Ono6AR+7X+9OOq5Q0+UKA1LXlLox4GAtwPt5Y+VGDYqK7vjy4GQmv5jt/uV
6CAsWffOhwOx1r2W+j1K7JfeFXC9OSAz7PKS3VWiXS3l5pwnB9Qv8EjudSV2
6bXtCnXhgPh0nXlxoRKXN+j3LHHgQOFspsvVSCXWGsjzpMYc+LDXoXFAcxUd
nD3l04/ZUJSQl5MTexWjOj8H0ErZkPwuVVT9RoHq/o9T+4VsCOZszWwQKbA0
KNUwmMWGpJkP/4a8v4IrvUwH339mwbn4E4qxxCv4oZhmS26xYGb3BWHvTDMa
7MmKiZSx4PS71MMRvzWjWjn/kyiMBa50/6f92iacFf/TrGvFAurkk9yJ9CZ8
KNe9s3OCCZvokwHbFzXhhCvv3lAjE8TMN243jjYib6N10GAqE4brFbmKpY0o
ubc4rcKXCdwJiXVxTgNO3Uh1/LSICVN1TQ0vjRqw5EfStaOXAZfGBNx8+mU0
mn9lll/EgIND/Ao2rR67fRhjwTEMmHlw566BRx366+aHaWgMiGSsjrqxthZt
IqbPTEzSgaXI1DquvYTuRUyBczIdShg7wwc21mBH56XD5oZ0MLB2cQrzrcaZ
R9RqE7kzGC840Wm4pQpzbw3/UEdzhv2GIzFZMZXYULw4JbaDBmNZKySD0RdR
EurZ5xRCg+dzY5uiEyuwarYi/cykE4wP5xeoROWYkWTCMJE4gf+4z4uXojLU
/D2nqtRzgo0jyVqvA39itaNZ1bOzjuATdFa69/cLaLFtTS7VzhEGr6zvGTpW
ivOJJ+6btjhAZUqHt5FbCe5I3DH5fYgDyMUT981ci1EQyNZnjNpDG8/0uSy8
EDXLvPa/SrKHZ5YWzxt4cvx4LXC6Uc8e2AP2e/2EBZgVkK+wKqAC/yHnm4iT
p/HMTX5kGY0K4npKms3xfOSamBu6t6yGljSDzO3Vp1AcbLJYwlsN+nE1kxnr
T+KaBKMlN4ftgB7KeRDueRzThVkzRGgHbVZ9XYsOHkG38DVUR1078FPYnreS
HMJzKyejfXNsIZZHsTQLT8cE9aM3n1fZwq51fbq60ynYmsiO6LtuA7cyXxtH
396NzVPyh9f8bYCrk/GHkyoKKYEup0BDgDriN0HSo3D+UxVVMERgYau+q6VH
FD6tobQfe0og5y1F+Z0oEs8u/DLd95iAbIS5oZv/Cy7v6Ngs6CaQ0RoZ7Uu2
oal7yEJZG4F9qS1ymoqHBvbi9P4LBFgcb08rDx5OPRlZri0hMP4sG81EwXgv
i1dvdZ7ASHd5cA8/EI++YGsE5wioa/uEGwgXF5TOu2nzCHTGO5fTVYB65kdn
rTK//tv3qS1EXjh2+2O2dwaBrMuy2AG+J6JEaBsnJXAg+5qUS9ahtC8o9HIa
gV3cZdfZKgZ+yTZr8k4iMLBna84wn4YajyPcuH0EuoIya7YQe/zrtXZUlkig
1WB03F1ljWncYeMBMYH4Xssv0cQCf9YGVmqFBLZlp6zdrFqK7pVt61ckEMjL
u6gRqXSQspWp9o4nYNZalFHAt26f/7ZMHBdH4D82fE20
        "]]},
      Annotation[#, "Charting`Private`Tag$213071#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 9.47849776221057},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.923458115383103*^8, 0}, {9.47849776221057, 
    17.390542907180386`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8827432575807*^9, 3.882743594507688*^9, 3.8827439289689007`*^9, {
   3.88274401634407*^9, 3.882744036693323*^9}, 3.8827444232049303`*^9, 
   3.88274447098176*^9, 3.8827445249860477`*^9, 3.882744574638216*^9, {
   3.88274463440702*^9, 3.8827446651217613`*^9}, {3.882744711892632*^9, 
   3.882744722977154*^9}, 3.882745846498612*^9, 3.882746105479271*^9, 
   3.8827461536840763`*^9, {3.8827871551611223`*^9, 3.88278722496449*^9}, 
   3.89031277148899*^9},
 CellLabel->
  "Out[2097]=",ExpressionUUID->"e8c7e02e-7baa-4567-bebc-2c8a2a967e3e"],

Cell[BoxData[
 RowBox[{"8.9`", "\[VeryThinSpace]", "-", 
  RowBox[{"8.354539532803068`*^-9", " ", "P"}]}]], "Output",
 CellChangeTimes->{
  3.8827432575807*^9, 3.882743594507688*^9, 3.8827439289689007`*^9, {
   3.88274401634407*^9, 3.882744036693323*^9}, 3.8827444232049303`*^9, 
   3.88274447098176*^9, 3.8827445249860477`*^9, 3.882744574638216*^9, {
   3.88274463440702*^9, 3.8827446651217613`*^9}, {3.882744711892632*^9, 
   3.882744722977154*^9}, 3.882745846498612*^9, 3.882746105479271*^9, 
   3.8827461536840763`*^9, {3.8827871551611223`*^9, 3.88278722496449*^9}, 
   3.890312771493643*^9},
 CellLabel->
  "Out[2101]=",ExpressionUUID->"9b00e1a8-4ac2-4b2b-ba9e-c127110bafaf"],

Cell[BoxData[
 RowBox[{"-", "1.1969540584177303`*^8"}]], "Output",
 CellChangeTimes->{
  3.8827432575807*^9, 3.882743594507688*^9, 3.8827439289689007`*^9, {
   3.88274401634407*^9, 3.882744036693323*^9}, 3.8827444232049303`*^9, 
   3.88274447098176*^9, 3.8827445249860477`*^9, 3.882744574638216*^9, {
   3.88274463440702*^9, 3.8827446651217613`*^9}, {3.882744711892632*^9, 
   3.882744722977154*^9}, 3.882745846498612*^9, 3.882746105479271*^9, 
   3.8827461536840763`*^9, {3.8827871551611223`*^9, 3.88278722496449*^9}, 
   3.89031277149489*^9},
 CellLabel->
  "Out[2102]=",ExpressionUUID->"53f3f151-59e8-4eb3-b22e-8860bf73bf14"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[
       6.272]], {{{-5.341390454994476*^6, 
      8.949211908931698}}, {{-4.548510458140832*^7, 
      9.229422066549912}}, {{-7.822934572131212*^7, 
      9.544658493870402}}, {{-1.1625760271326348`*^8, 
      9.859894921190893}}, {{-1.9759443096192685`*^8, 
      10.560420315236426`}}, {{-2.979444623097442*^8, 
      11.436077057793344`}}}]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVzXlYzAkcBvCytmvH8VBrNaHf/OZK0n3Z1FeEoTS6tWylXDVJx0pNT5ER
wnSQdC3aDmU6Jk2z0UPfIXmYpqbGCN2Uxc629Wxqnyfs7B/v8z6fP97nJfbH
+R1YoKOj46PN/+3hoJ49/UKKd6znvLr5bNg+qWqveC5FSxk5uV1rv9q+8x19
UiwP8L0mS2VDlLmSqt8jxbyUqg+SFDZkU+Qe2U+kGPcwIKc0mQ3qt3g2t1WK
a4PF/UcS2RBbULeirES7T4+OWRjDhpJPAueWMCnmdg3kuoayYSZhrVg12IKp
7sdqexzZUBqdLxRGteBne4sE5XI2HJ8+wavRSPDqqpHptGkW+DoECRp5EnR7
5eUZqGDBL1MzX/3+aUY+VelRKGJB8eGLktH4Znxi/R1F7xwLpuJuxiin7uBa
l815a6JYUDB94sze1DvI7LjxqNyTBS7W2172zTXhekbdY7/VLGC/e5E7kdGE
SsPh47x5Juy0frc91LAJz40tHrF5zYRYW82Gu+fEuEuoWUGTMmGgXpIrWSpG
0f2pz2kFTOBMJJmXCRvxB1lF08J4Jryva2ocX9yIxa2B5s4+TLg9eoBz2boB
mx3XufVZMuHUa/9Ke6t6HBCImaX6TJh69viJkVsdloXsfaAYZ0CYDSv8rpMI
eV8lzPXIADuJYM7S6TZyixdtcyljwHWbQyGqrbXY1ZptIuIzwMjceV3g5hoM
EbU0eQczYInexU7K7luYRhp8CXJkQAplKDIrsholwuAFFGMGjGatSuqPqMJ5
eeBzzSQd3syO7oyIr8TBnJQgVwUdxgYuF8p4FfiU4V0lrqHDtjHPt+O831DR
YNagOkOHrUPH5zzSyzH6/rKDEVF08Nx17WQC/yYa35B+NAU69De797w+fwOD
9TLXuK+mQ3Xyo02LN1zHhvAdFMpnEopiJ56auJShiRA79V6S8IC77E12SAma
wM+2MVIShqkr3zRyi5DoqDkyn0+CvcoiYUtMIXYqTLmzx0jw73L4Zm9OAZ6W
n58s9SUhtt40jX7hMnqXVe+LsyThXpqRILQmD+unP6TcNiRB/2Dtu0z3HFxF
HYwyHqeBdYDDs5CNF7DcucuAjTR4YNYrNzx1FrF/LLTyOg22SBi/miWdxj+9
q/m+fBpEcU2pJiEZKPbK2xG5hwZHXXt1df9Kxot2Kb2ECw0eCj4uieiIw6Tp
JRaLjGnA0cm8sk4WjjNOcqv90wSwh7ZMkBnhWBm+u//ZFAEGbfouVLdwDMhW
ZzpqLZw0lS7nhWHz4MgLg78JyB6y9VL478NEwcypBg0BmW1hEZvJPTilXK2e
/4OAxBP3iqxkXNTw4tMLhwmwc9i00cyNi2VXP7F1tR4bvoQmPF/0aef3RQ8R
MKSo8O3x90HR8iy2+yABalFvjBfJwZi7xb1vXxHQeXh9hbUM8L3+I6adWvvf
nqheyfPAIluOsuQ5AVkN2VEq/43I+UnB/1br9Eu/n+SQrnirvr+nv4+Aoxzj
VnuZDR4K1KRmKAlQHQsSDvhb4YqMBMb7HgLkuwS1u0kL7Lw12+2ndZvRyNiP
MnNkzusymN0EHFZSv0SQK1HNONudoyBgz6VkJ2/ZUszypaT+20VAfn7VIE+m
g04pefRIrU3aSjML/c3bx8u/75bLCfgPrrRXNg==
        "]]},
      Annotation[#, "Charting`Private`Tag$213176#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 8.81105273399496},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.979444623097442*^8, 0}, {8.81105273399496, 
    11.436077057793344`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8827432575807*^9, 3.882743594507688*^9, 3.8827439289689007`*^9, {
   3.88274401634407*^9, 3.882744036693323*^9}, 3.8827444232049303`*^9, 
   3.88274447098176*^9, 3.8827445249860477`*^9, 3.882744574638216*^9, {
   3.88274463440702*^9, 3.8827446651217613`*^9}, {3.882744711892632*^9, 
   3.882744722977154*^9}, 3.882745846498612*^9, 3.882746105479271*^9, 
   3.8827461536840763`*^9, {3.8827871551611223`*^9, 3.88278722496449*^9}, 
   3.890312771516159*^9},
 CellLabel->
  "Out[2105]=",ExpressionUUID->"4fc2dc74-68c9-4e31-af6c-05fa454c09d5"],

Cell[BoxData[
 RowBox[{"8.65`", "\[VeryThinSpace]", "+", 
  RowBox[{"6.500918519076782`*^-9", " ", "P"}]}]], "Output",
 CellChangeTimes->{
  3.8827432575807*^9, 3.882743594507688*^9, 3.8827439289689007`*^9, {
   3.88274401634407*^9, 3.882744036693323*^9}, 3.8827444232049303`*^9, 
   3.88274447098176*^9, 3.8827445249860477`*^9, 3.882744574638216*^9, {
   3.88274463440702*^9, 3.8827446651217613`*^9}, {3.882744711892632*^9, 
   3.882744722977154*^9}, 3.882745846498612*^9, 3.882746105479271*^9, 
   3.8827461536840763`*^9, {3.8827871551611223`*^9, 3.88278722496449*^9}, 
   3.890312771520997*^9},
 CellLabel->
  "Out[2109]=",ExpressionUUID->"9da8379d-9492-4677-8e87-51f3f037f8f2"],

Cell[BoxData["1.5382441682133457`*^8"], "Output",
 CellChangeTimes->{
  3.8827432575807*^9, 3.882743594507688*^9, 3.8827439289689007`*^9, {
   3.88274401634407*^9, 3.882744036693323*^9}, 3.8827444232049303`*^9, 
   3.88274447098176*^9, 3.8827445249860477`*^9, 3.882744574638216*^9, {
   3.88274463440702*^9, 3.8827446651217613`*^9}, {3.882744711892632*^9, 
   3.882744722977154*^9}, 3.882745846498612*^9, 3.882746105479271*^9, 
   3.8827461536840763`*^9, {3.8827871551611223`*^9, 3.88278722496449*^9}, 
   3.890312771522287*^9},
 CellLabel->
  "Out[2110]=",ExpressionUUID->"97773dbb-8f77-48f3-8cb8-5dd4fb544b93"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[
       6.272]], {{{-1.1308349161474828`*^6, 
      8.633975481611207}}, {{-2.544471101014002*^7, 
      8.493870402802102}}, {{-4.870178393372308*^7, 
      8.353765323992993}}, {{-8.993006313519816*^7, 
      8.108581436077058}}, {{-1.4384738355616117`*^8, 
      7.723292469352012}}, {{-1.988196563538903*^8, 
      7.373029772329247}}, {{-2.7282178939356434`*^8, 
      6.882661996497372}}, {{-2.9713751628120035`*^8, 
      6.70753064798599}}, {{-3.4259670975160027`*^8, 
      6.392294220665498}}, {{-3.732551064553368*^8, 
      6.182136602451838}}}]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVzXk41Akcx3Ed63qkNg1zz+/X6OkyuSZHxXwrxUQMOnQ9RkjHyDZD6CJN
RDWsDlnUVipHNMkY4nnynVQqGzFNbEy5xrNthyOx+zzVzv7xed7P668PuTMu
JHqqiYnJeuP+r4CvmzjxWo2pvTJDuwsV/D5rG4tfqXH4Y8bEdVcqhJR1ZD7q
UKP43wLzBD4VooiXDLM2NYJN0yI7NypkWbUIsprV+MNnTtw2TyroBjAjp06N
R0uqJ/oFVIi9UGFXVKDGQ3Hj5uMBVCj4KnevCVej7NvBxXYxVBiXLrqr7alB
j9bA941XqFC4N1ehiKrBxpP3I0u1VDg4miQp/ajCWQ2tDqfMaRDE3yRXSlTo
UlIX1wI0SBgZ/xHypRqpye6xQQk0+G33GVXvgWps/ZE54F5Jg5G4q/tejtzD
INP0clsDDS6MJp3cfuge5o5QeHw6HTwcfbs6JquwJPfQAnUIHRYMvc4xpFRh
KlWmT8qgg7/jkN9Wiyok2ZQBp3o6xDp/XHb/1F0833U6MnCMDt2VqhzVrLv4
LPliUdl8BggN8USRQontrQnBEjED/qqoUg5aK/H6je8b7C8xoLw3WnjO8Q66
ixk2jBYGHH8TesOVV4lFbVb+idOZMPL8cbPligp8PC/Xa7YnE8Kd5ovvu91G
jdOH0tlSJrio5JOL3coxvf5ztEUZE644xYRp15bhjMUZ3d56JlgS7g4bV5fi
LtFYS5ctC2aannliFVyCaVvHEu/5syDZSh+ZHnkLYwYKpSdSWNCbzorvjLiJ
bHvGUK2aBf0Tvf4RB27gJT+eLe8DC/q6z+VpJMU4MHfOA9N5bPDtWzUwKLmO
k0eK1brtbFirPzgpOHYN2+qb9w7msGFV4KVU6eGrmKzEvC1P2dBZ7d32JvN3
NGQGplh9Z8OtxKaV1suuILNfXqNy5kB+rOEZxaMIuaPZMU17OPBANLs/K6wA
Pw0u6fj5MgfeMmj9SlE+ZmVfq23SccBVu1Dqsy8Px603Orz5iYDQP/jTtmdf
QIuLPPtWDgGxlfQj9qfPoVnScOf4cgLqj1jKt5b+irsCvr1fvokAs11lQ2ne
2Vhx+EtdtZQAxw3852Fep7Frb6OyREHAA2Z7i8XxDIwJ0E1vKCHARzXvMjP+
BOpP6ShTHxEQJaIzKGEpWKMm5DFvCdjv2T5lyqdElN0U0P3+IeCh/O+ZEY/i
kDrsF7uNQoLQJO28g0aMHIdClsKRhAV6HwM3RYxLW4Op05xIMG8w82CsEOM6
qZlNktGKz3S1jSQcE2ql5judScjSO695EboDn/kIx5a6kpDWEB6xmrsF43d8
be5xI0GWVJ/P04jwqUIUz/MmwYW/0ou5QoR6Z9O4a0b3vT2LFEkQjmnr99gJ
SNC/KA5qC12PbMb88ClAgu52+741XCHKbn0TvlpJwpPdS4odNYCsxjLO0TXG
/0aZjiYRoGukmD5qdPqdrChtqBf6mdpSYtaScOxsbaqQ64mygOOWwb4k7BfO
qXPVOGFz5+ZxeyEJ2l82KbpDedhzeMZwvtEtgfKyYO5CHGU/fG+9joQGy3d9
yzUEsqKXvJs0evdLxvcILg1dzAf+jPUnYcvZRLcAzSz0Lc9/1Wd0bu7NHonG
BHcEBrVtDiCB0lCYlhdKNEpHpj9vMfo/ySZElw==
        "]]},
      Annotation[#, "Charting`Private`Tag$213281#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 6.045923331387442},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.732551064553368*^8, 0}, {6.045923331387442, 
    8.633975481611207}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8827432575807*^9, 3.882743594507688*^9, 3.8827439289689007`*^9, {
   3.88274401634407*^9, 3.882744036693323*^9}, 3.8827444232049303`*^9, 
   3.88274447098176*^9, 3.8827445249860477`*^9, 3.882744574638216*^9, {
   3.88274463440702*^9, 3.8827446651217613`*^9}, {3.882744711892632*^9, 
   3.882744722977154*^9}, 3.882745846498612*^9, 3.882746105479271*^9, 
   3.8827461536840763`*^9, {3.8827871551611223`*^9, 3.88278722496449*^9}, 
   3.890312771543456*^9},
 CellLabel->
  "Out[2113]=",ExpressionUUID->"439c78a0-edc3-408a-a7fa-37081de1f4d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Solving", " ", "the", " ", "System", " ", "of", " ", "equations"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Tidey1", "[", 
     RowBox[{"n_", ",", "b_"}], "]"}], ":=", 
    RowBox[{"n", "-", 
     RowBox[{"0.3785", "*", 
      SuperscriptBox["10", "8"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["5.3225", "5.345"], "*", 
         RowBox[{"Sqrt", "[", "2", "]"}], "*", 
         RowBox[{"Sin", "[", 
          FractionBox["b", "2"], "]"}]}], "-", "1"}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tidey2", "[", 
     RowBox[{"n_", ",", "b_"}], "]"}], ":=", 
    RowBox[{"n", "-", 
     RowBox[{"1.19655", "*", 
      SuperscriptBox["10", "8"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["5.3225", "5.345"], "*", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Sin", "[", "b", "]"}]}], ")"}], "2"]}], "-", "1"}], 
       ")"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Tidey1", "[", 
        RowBox[{"n", ",", "b"}], "]"}], "==", "0"}], "&&", 
      RowBox[{
       RowBox[{"Tidey2", "[", 
        RowBox[{"n", ",", "b"}], "]"}], "==", "0"}], "&&", 
      RowBox[{"0", "<=", "b", "<=", 
       RowBox[{"2", "*", "Pi"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "b"}], "}"}], ",", "Reals"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.883666443215016*^9, 3.8836665104722652`*^9}, {
  3.883666570237722*^9, 3.883666705707959*^9}, {3.883666739640545*^9, 
  3.883666750681808*^9}, {3.883666875189419*^9, 3.883666876331669*^9}},
 CellLabel->
  "In[2115]:=",ExpressionUUID->"c7649eca-33a1-4667-aeed-d26cdd9979ca"],

Cell[BoxData[
 TemplateBox[{
  "NSolve", "ratnz", 
   "\"NSolve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 2117, 54, 18288612828343996680, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883666758290235*^9, 3.883666889399891*^9, 
  3.8903127716138687`*^9},
 CellLabel->
  "During evaluation of \
In[2115]:=",ExpressionUUID->"f6bd9989-a4ac-4151-8e03-3cc745a953bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", 
      RowBox[{"-", "1.6726425452324037`*^7"}]}], ",", 
     RowBox[{"b", "\[Rule]", "0.8149557703243984`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", 
      RowBox[{"-", "514154.2243468538`"}]}], ",", 
     RowBox[{"b", "\[Rule]", "1.5520556893703157`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.883666706845374*^9, 3.8836667582977047`*^9, 
  3.883666889408236*^9, 3.890312771619156*^9},
 CellLabel->
  "Out[2117]=",ExpressionUUID->"e31951d4-e348-4b38-99ad-96f02d397cca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["Pi", "2"], "-", "1.5520556893703157`"}]], "Input",
 CellChangeTimes->{{3.8836667741114893`*^9, 3.883666777367836*^9}, 
   3.883666899688262*^9},
 CellLabel->
  "In[2118]:=",ExpressionUUID->"e7e483d3-a31b-4c60-a906-08ca5b4833d6"],

Cell[BoxData["0.018740637424580875`"], "Output",
 CellChangeTimes->{3.883666777874164*^9, 3.883666900432583*^9, 
  3.890312771624158*^9},
 CellLabel->
  "Out[2118]=",ExpressionUUID->"88952648-be8f-4442-b3e8-8ea5fd0de4cc"]
}, Open  ]]
},
WindowSize->{1680, 917},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"bebf96d2-5faa-494f-9b5a-312899872c18"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 279, 5, 37, "Input",ExpressionUUID->"a4f60dd8-119b-46e9-a5f4-f50fc33b3e0c"],
Cell[840, 27, 589, 12, 64, "Input",ExpressionUUID->"d48b90cb-43b0-452f-b5dc-dea3bcc20922"],
Cell[1432, 41, 672, 18, 116, "Input",ExpressionUUID->"f600317d-fd73-4cb6-a515-0e7c7d39d186"],
Cell[CellGroupData[{
Cell[2129, 63, 10914, 306, 537, "Input",ExpressionUUID->"ff90e815-1c9c-41c8-9fce-70ba51d30550"],
Cell[CellGroupData[{
Cell[13068, 373, 3442, 81, 105, "Print",ExpressionUUID->"1de2b5eb-62c6-4bd8-ab6c-aa2fe404a3eb"],
Cell[16513, 456, 3505, 83, 105, "Print",ExpressionUUID->"c2691141-2eef-4aa5-98cc-23e1e4591fd5"],
Cell[20021, 541, 21104, 463, 143, "Print",ExpressionUUID->"2d39909b-144f-44e3-9493-514fa9789343"],
Cell[41128, 1006, 20928, 461, 143, "Print",ExpressionUUID->"e82c5e79-4acd-45c6-b846-e05ffc3f1f1a"]
}, Open  ]],
Cell[62071, 1470, 2230, 69, 173, "Output",ExpressionUUID->"fe76a1de-496d-4eec-a463-36d7cfa8be0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64338, 1544, 2793, 72, 330, "Input",ExpressionUUID->"c0e993c9-45b4-48e1-8f88-6d61d39d16fe"],
Cell[CellGroupData[{
Cell[67156, 1620, 3074, 77, 95, "Print",ExpressionUUID->"e52a6afc-73d7-4d00-ab05-d826d249c8e9"],
Cell[70233, 1699, 3141, 79, 95, "Print",ExpressionUUID->"17383f93-1a10-4818-90e1-f8ed19505cb9"],
Cell[73377, 1780, 4931, 124, 125, "Print",ExpressionUUID->"21dd3a96-dbff-4303-b135-084619e4a9b9"],
Cell[78311, 1906, 4862, 121, 125, "Print",ExpressionUUID->"fcb62be5-d7d6-47cb-ab73-55de53e3fd87"],
Cell[83176, 2029, 1315, 33, 67, "Print",ExpressionUUID->"c61fd4e3-e9a9-4b02-8303-48e08948bbf2"],
Cell[84494, 2064, 1319, 33, 67, "Print",ExpressionUUID->"d6e74745-807b-4496-a33e-0f9e22129628"]
}, Open  ]],
Cell[85828, 2100, 809, 23, 101, "Output",ExpressionUUID->"b06d8fa0-9391-451b-b22a-bb48ab7246e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86674, 2128, 1280, 32, 142, "Input",ExpressionUUID->"6382c149-39bf-44f4-a511-828d1b4e4a50"],
Cell[87957, 2162, 838, 17, 60, "Output",ExpressionUUID->"dc740dc1-7fc2-439b-8b1e-8a11c2a6966e"],
Cell[88798, 2181, 840, 17, 60, "Output",ExpressionUUID->"7191a8bd-40bd-4f47-aa8a-d8f6983baea7"],
Cell[89641, 2200, 842, 17, 60, "Output",ExpressionUUID->"6e2fb1bb-3a10-4541-8406-370964371a29"],
Cell[90486, 2219, 840, 17, 60, "Output",ExpressionUUID->"b793226c-50fd-4365-9aad-ae3a68d7fcc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91363, 2241, 6786, 173, 365, "Input",ExpressionUUID->"af01ba13-9d8a-44fd-a2ba-d6b17056d567"],
Cell[98152, 2416, 2513, 65, 121, "Output",ExpressionUUID->"b940254d-0ec8-4ede-bbf6-517cbf4c4d52"],
Cell[100668, 2483, 2241, 61, 143, "Output",ExpressionUUID->"218a0c64-d640-4d8e-be31-69c01d2fcaa4"],
Cell[102912, 2546, 1841, 48, 87, "Output",ExpressionUUID->"6bf6d36e-1660-43e7-8d06-f7f3e2c1d5ba"],
Cell[104756, 2596, 720, 12, 60, "Output",ExpressionUUID->"ca715231-e5fe-4d23-8d14-db61124e1ea8"],
Cell[105479, 2610, 720, 12, 60, "Output",ExpressionUUID->"d3d5653a-44b3-48d4-b424-4610914680b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106236, 2627, 254, 6, 37, "Input",ExpressionUUID->"4107fc84-94f2-4f0d-84ab-a83a08c0cc77"],
Cell[106493, 2635, 210, 5, 83, "Output",ExpressionUUID->"b4f01bf0-94e9-4eca-839d-7ae41abe77d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106740, 2645, 621, 17, 57, "Input",ExpressionUUID->"4b7d080e-44c3-42ea-b0a4-c6de40ab837b"],
Cell[107364, 2664, 322, 5, 60, "Output",ExpressionUUID->"7429c81f-e9dd-45a9-aeef-e7c33cddebbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107723, 2674, 11198, 295, 676, "Input",ExpressionUUID->"927b7a3a-ab4b-46d2-aa52-522138ff64eb"],
Cell[118924, 2971, 1732, 37, 119, "Output",ExpressionUUID->"cd9aaeee-5884-49e5-9320-a294d9a010c1"],
Cell[120659, 3010, 4341, 116, 121, "Output",ExpressionUUID->"5f066e94-7e62-4976-ac4c-7028b78d3828"],
Cell[125003, 3128, 967, 19, 46, "Print",ExpressionUUID->"8d2cf52e-7e39-4661-90c3-2c87996dcd58"],
Cell[125973, 3149, 1439, 27, 78, "Output",ExpressionUUID->"3e133876-cfcc-411c-a9e5-c2f8c594633c"],
Cell[CellGroupData[{
Cell[127437, 3180, 1457, 31, 50, "Print",ExpressionUUID->"d73e94c9-b51f-4e08-9397-ea8e8806f849"],
Cell[128897, 3213, 1414, 27, 50, "Print",ExpressionUUID->"65f00c7b-9371-4013-b10d-c9d06f7c91b6"],
Cell[130314, 3242, 1338, 28, 47, "Print",ExpressionUUID->"76eefb0d-c1eb-41d9-bede-cbc37d886d3a"]
}, Open  ]],
Cell[131667, 3273, 1676, 34, 76, "Output",ExpressionUUID->"742dc969-4d8d-46bd-98db-e3f1960ce677"],
Cell[133346, 3309, 937, 22, 31, "Print",ExpressionUUID->"7fb5c9b2-3e58-47c3-9886-8a2476826af3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134320, 3336, 7406, 203, 560, "Input",ExpressionUUID->"297d840c-c84d-45b5-9435-eb4232d6528d"],
Cell[CellGroupData[{
Cell[141751, 3543, 2353, 59, 83, "Print",ExpressionUUID->"0ce37035-44c8-4909-8948-8b20aabb0304"],
Cell[144107, 3604, 983, 20, 31, "Print",ExpressionUUID->"77038bcb-6cc1-4994-93d6-110ec813b387"],
Cell[145093, 3626, 2384, 59, 83, "Print",ExpressionUUID->"16fc522d-f8cd-437f-b68e-8dfcf11e2fd4"],
Cell[147480, 3687, 985, 20, 31, "Print",ExpressionUUID->"02b886ce-ed04-48dc-bfbb-eec0f00ced17"],
Cell[148468, 3709, 1889, 45, 34, "Print",ExpressionUUID->"17b3cd41-b473-477a-8102-a9c229f601bf"],
Cell[150360, 3756, 2021, 54, 83, "Print",ExpressionUUID->"b93d9e4d-9678-4285-a0fa-e081c297a8f5"],
Cell[152384, 3812, 2003, 53, 77, "Print",ExpressionUUID->"6dc96bc7-46e2-4944-a3fc-7ebc5485448b"],
Cell[154390, 3867, 2931, 76, 79, "Print",ExpressionUUID->"bd621d28-4474-45b2-83e2-969dee5ad022"],
Cell[157324, 3945, 1546, 35, 67, "Print",ExpressionUUID->"7bee7d6e-eef4-480f-8f35-671f7668c1b3"],
Cell[158873, 3982, 3336, 80, 105, "Print",ExpressionUUID->"fcee2a73-fde7-41c7-91e9-37edfe1b0b2a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[162258, 4068, 4487, 128, 371, "Input",ExpressionUUID->"7923d041-4019-4405-b320-97bbd5dfbb50"],
Cell[166748, 4198, 675, 13, 35, "Message",ExpressionUUID->"120ec882-d9d1-448c-892e-16f841e14a5f"],
Cell[167426, 4213, 1005, 22, 64, "Output",ExpressionUUID->"c77ab817-1760-4a95-b608-a166bb075c84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168468, 4240, 652, 16, 57, "Input",ExpressionUUID->"c1dc6fbd-512c-4350-809b-d7b6f3487c6a"],
Cell[169123, 4258, 412, 8, 61, "Output",ExpressionUUID->"42de13f7-23d5-4b3e-9724-1a5fa4e156c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169572, 4271, 238, 5, 58, "Input",ExpressionUUID->"b1ecac4b-79a5-48c1-a40e-58f57471a23f"],
Cell[169813, 4278, 202, 4, 60, "Output",ExpressionUUID->"267ef8a7-2665-40c4-81c0-f924fbb2eb45"]
}, Open  ]],
Cell[170030, 4285, 340172, 5588, 639, "Input",ExpressionUUID->"c8622f4b-7b57-47ff-a668-cf726e6f0377"],
Cell[CellGroupData[{
Cell[510227, 9877, 4794, 150, 454, "Input",ExpressionUUID->"12063010-28bf-43cd-8f61-a211b9b4faa0"],
Cell[515024, 10029, 342, 6, 60, "Output",ExpressionUUID->"8795d9f3-e89c-4309-8ec8-d0524977a4ac"],
Cell[515369, 10037, 1208, 36, 93, "Output",ExpressionUUID->"e335daaf-16d3-4219-b469-1544a5ad9705"],
Cell[516580, 10075, 1086, 32, 64, "Output",ExpressionUUID->"47b0c2d1-f854-4139-9001-9bf9a9df407f"],
Cell[517669, 10109, 1577, 48, 93, "Output",ExpressionUUID->"e446831c-9697-4fae-918a-a4e2a035e399"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519283, 10162, 6647, 195, 942, "Input",ExpressionUUID->"56754833-e23e-4571-8a9a-d93b5a7be76f"],
Cell[525933, 10359, 681, 12, 61, "Output",ExpressionUUID->"cef2cc5a-f753-4dee-a722-b397e06a4509"],
Cell[526617, 10373, 629, 11, 61, "Output",ExpressionUUID->"f54c92cc-8a3f-46ae-8427-73019832f6c8"],
Cell[527249, 10386, 6559, 150, 325, "Output",ExpressionUUID->"e8c7e02e-7baa-4567-bebc-2c8a2a967e3e"],
Cell[533811, 10538, 680, 12, 61, "Output",ExpressionUUID->"9b00e1a8-4ac2-4b2b-ba9e-c127110bafaf"],
Cell[534494, 10552, 628, 11, 61, "Output",ExpressionUUID->"53f3f151-59e8-4eb3-b22e-8860bf73bf14"],
Cell[535125, 10565, 6501, 149, 312, "Output",ExpressionUUID->"4fc2dc74-68c9-4e31-af6c-05fa454c09d5"],
Cell[541629, 10716, 681, 12, 61, "Output",ExpressionUUID->"9da8379d-9492-4677-8e87-51f3f037f8f2"],
Cell[542313, 10730, 612, 10, 61, "Output",ExpressionUUID->"97773dbb-8f77-48f3-8cb8-5dd4fb544b93"],
Cell[542928, 10742, 6714, 153, 325, "Output",ExpressionUUID->"439c78a0-edc3-408a-a7fa-37081de1f4d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549679, 10900, 1829, 53, 168, "Input",ExpressionUUID->"c7649eca-33a1-4667-aeed-d26cdd9979ca"],
Cell[551511, 10955, 506, 11, 35, "Message",ExpressionUUID->"f6bd9989-a4ac-4151-8e03-3cc745a953bd"],
Cell[552020, 10968, 617, 17, 64, "Output",ExpressionUUID->"e31951d4-e348-4b38-99ad-96f02d397cca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552674, 10990, 267, 6, 58, "Input",ExpressionUUID->"e7e483d3-a31b-4c60-a906-08ca5b4833d6"],
Cell[552944, 10998, 221, 4, 60, "Output",ExpressionUUID->"88952648-be8f-4442-b3e8-8ea5fd0de4cc"]
}, Open  ]]
}
]
*)

